{
  "version": 3,
  "sources": ["../../../../node_modules/dap-util/lib/dap-util.es.js"],
  "sourcesContent": ["const number = {\n  /**\n   * 数字格式化\n   * @param {Number} num\n   */\n  formatNumber(num) {\n    if (this.isNumber(num)) {\n      return num.toString().replace(/(\\d)(?=(?:\\d{3})+$)/g, \"$1,\");\n    } else {\n      return num;\n    }\n  },\n  /**\n   * 判断是否数字\n   * @param {Object} num\n   */\n  isNumber(num) {\n    if (typeof num == \"number\" && !isNaN(num)) {\n      return true;\n    }\n    return false;\n  },\n  /**\n   * 多个数的加法运算\n   */\n  add(...values) {\n    return values.reduce((num, value) => {\n      let r1 = 0;\n      let r2 = 0;\n      let m = 0;\n      try {\n        r1 = num.toString().split(\".\")[1].length;\n      } catch (e) {\n      }\n      try {\n        r2 = value.toString().split(\".\")[1].length;\n      } catch (e) {\n      }\n      m = Math.pow(10, Math.max(r1, r2));\n      return (num * m + value * m) / m;\n    });\n  },\n  /**\n   * 多个数的减法运算\n   */\n  subtract(...values) {\n    return values.reduce((num, value) => {\n      let r1 = 0;\n      let r2 = 0;\n      let m = 0;\n      try {\n        r1 = num.toString().split(\".\")[1].length;\n      } catch (e) {\n      }\n      try {\n        r2 = value.toString().split(\".\")[1].length;\n      } catch (e) {\n      }\n      m = Math.pow(10, Math.max(r1, r2));\n      return (num * m - value * m) / m;\n    });\n  },\n  /**\n   * 多个数的乘法运算\n   */\n  mutiply(...values) {\n    return values.reduce((num, value) => {\n      let m = 0;\n      let s1 = num.toString();\n      let s2 = value.toString();\n      try {\n        m += s1.split(\".\")[1].length;\n      } catch (e) {\n      }\n      try {\n        m += s2.split(\".\")[1].length;\n      } catch (e) {\n      }\n      return Number(s1.replace(\".\", \"\")) * Number(s2.replace(\".\", \"\")) / Math.pow(10, m);\n    });\n  },\n  /**\n   * 多个数的除法运算\n   */\n  divide(...values) {\n    return values.reduce((num, value) => {\n      let t1 = 0;\n      let t2 = 0;\n      let s1 = num.toString();\n      let s2 = value.toString();\n      try {\n        t1 = s1.split(\".\")[1].length;\n      } catch (e) {\n      }\n      try {\n        t2 = s2.split(\".\")[1].length;\n      } catch (e) {\n      }\n      return Number(s1.replace(\".\", \"\")) / Number(s2.replace(\".\", \"\")) * Math.pow(10, t2 - t1);\n    });\n  }\n};\nconst string = {\n  /**\n   * 向指定位置插入字符串\n   * @param {Object} original 原始字符串\n   * @param {Object} str 插入的字符串\n   * @param {Object} index 插入的位置\n   */\n  insert(original, str, index) {\n    if (!original || typeof original != \"string\") {\n      throw new TypeError(\"The first argument must be a string\");\n    }\n    if (typeof str != \"string\") {\n      throw new TypeError(\"The second argument must be a string\");\n    }\n    if (!number.isNumber(index)) {\n      throw new TypeError(\"The third argument must be a number\");\n    }\n    if (index < 0) {\n      throw new Error(\"The third argument cannot be less than 0\");\n    }\n    return original.substring(0, index) + str + original.substring(index, original.length);\n  },\n  /**\n   * 删除指定位置的字符串\n   * @param {Object} original 原始字符串\n   * @param {Object} index 删除的位置序列\n   * @param {Object} num 删除的字符串长度\n   */\n  delete(original, index, num) {\n    if (!original || typeof original != \"string\") {\n      throw new TypeError(\"The first argument must be a string\");\n    }\n    if (!number.isNumber(index)) {\n      throw new TypeError(\"The second argument must be a number\");\n    }\n    if (index < 0) {\n      throw new Error(\"The second argument cannot be less than 0\");\n    }\n    if (!number.isNumber(num)) {\n      throw new TypeError(\"The third argument must be a number\");\n    }\n    if (num < 0) {\n      throw new Error(\"The third argument cannot be less than 0\");\n    }\n    return original.substring(0, index) + original.substring(index + num, original.length);\n  },\n  /**\n   * 替换指定位置的字符串\n   * @param {Object} original 原始字符串\n   * @param {Object} start 开始位置\n   * @param {Object} end 结束位置\n   * @param {Object} str 替换的字符串\n   */\n  replace(original, start, end, str) {\n    if (!original || typeof original != \"string\") {\n      throw new TypeError(\"The first argument must be a string\");\n    }\n    if (!number.isNumber(start)) {\n      throw new TypeError(\"The second argument must be a number\");\n    }\n    if (start < 0) {\n      throw new Error(\"The second argument cannot be less than 0\");\n    }\n    if (!number.isNumber(end)) {\n      throw new TypeError(\"The third argument must be a number\");\n    }\n    if (end < 0) {\n      throw new Error(\"The third argument cannot be less than 0\");\n    }\n    if (typeof str != \"string\") {\n      throw new TypeError(\"The fourth argument must be a string\");\n    }\n    return original.substring(0, start) + str + original.substring(end, original.length);\n  },\n  /**\n   * 去除字符串空格\n   * @param {Object} str 原始字符串\n   * @param {Object} global 为true时去除所有空格，否则只去除两边空格\n   */\n  trim(str, global) {\n    if (typeof str != \"string\") {\n      throw new TypeError(\"The first argument must be a string\");\n    }\n    let result = str.replace(/(^\\s+)|(\\s+$)/g, \"\");\n    if (global) {\n      result = result.replace(/\\s/g, \"\");\n    }\n    return result;\n  }\n};\nconst element = {\n  /**\n   * 判断是否是Window对象\n   * @param {Object} data 入参\n   */\n  isWindow(data2) {\n    return data2 && data2 instanceof Window;\n  },\n  /**\n   * 获取元素距离某个定位祖先元素左侧/顶部/底部/右侧的距离\n   * @param {Object} el 元素\n   * @param {Object} root 定位父元素或者祖先元素，未指定则为document.body\n   */\n  getElementPoint(el, root) {\n    if (!this.isElement(el)) {\n      throw new TypeError(\"The first argument must be an element\");\n    }\n    if (!this.isElement(root)) {\n      root = document.body;\n    }\n    if (!this.isContains(root, el)) {\n      throw new Error(\"The second argument and the first argument have no hierarchical relationship\");\n    }\n    let obj2 = el;\n    let offsetTop = 0;\n    let offsetLeft = 0;\n    while (this.isElement(el) && this.isContains(root, el) && root !== el) {\n      offsetTop += el.offsetTop;\n      offsetLeft += el.offsetLeft;\n      el = el.offsetParent;\n    }\n    let offsetRight = root.offsetWidth - offsetLeft - obj2.offsetWidth;\n    let offsetBottom = root.offsetHeight - offsetTop - obj2.offsetHeight;\n    return {\n      top: offsetTop,\n      left: offsetLeft,\n      right: offsetRight,\n      bottom: offsetBottom\n    };\n  },\n  /**\n   * 判断某个元素是否包含指定元素，包含相等关系和父子关系\n   * @param {Object} parentNode 父元素或祖先元素\n   * @param {Object} childNode 子元素\n   */\n  isContains(parentNode, childNode) {\n    if (!this.isElement(parentNode)) {\n      throw new TypeError(\"The first argument must be an element\");\n    }\n    if (!this.isElement(childNode)) {\n      throw new TypeError(\"The second argument must be an element\");\n    }\n    if (parentNode === childNode) {\n      return true;\n    }\n    if (parentNode.contains) {\n      return parentNode.contains(childNode);\n    }\n    if (parentNode.compareDocumentPosition) {\n      return !!(parentNode.compareDocumentPosition(childNode) & 16);\n    }\n    return false;\n  },\n  /**\n   * 判断某个元素是否是指定元素的父元素\n   * @param {Object} parentNode 父元素\n   * @param {Object} childNode 子元素\n   */\n  isParentNode(parentNode, childNode) {\n    if (!this.isElement(parentNode)) {\n      throw new TypeError(\"The first argument must be an element\");\n    }\n    if (!this.isElement(childNode)) {\n      throw new TypeError(\"The second argument must be an element\");\n    }\n    if (parentNode === childNode) {\n      return false;\n    }\n    return childNode.parentNode === parentNode;\n  },\n  /**\n   * 查找某个元素下指定选择器的子元素\n   * @param {Object} el 元素\n   * @param {Object} selector 支持多选择器，等同于querySelectorAll的参数\n   */\n  children(el, selector) {\n    if (!this.isElement(el)) {\n      throw new TypeError(\"The first argument must be an element\");\n    }\n    if (selector && typeof selector != \"string\") {\n      throw new TypeError(\"The second argument must be a string\");\n    }\n    const res = el.querySelectorAll(selector || \"*\");\n    return [...res].filter((ele) => {\n      return ele.parentNode === el;\n    });\n  },\n  /**\n   * 查找某个元素下指定选择器的兄弟元素\n   * @param {Object} el 元素\n   * @param {Object} selector 取值等同于queryselectorAll的参数，支持多选择器\n   */\n  siblings(el, selector) {\n    if (!this.isElement(el)) {\n      throw new TypeError(\"The first argument must be an element\");\n    }\n    if (selector && typeof selector != \"string\") {\n      throw new TypeError(\"The second argument must be a string\");\n    }\n    if (!el.parentNode) {\n      return [];\n    }\n    const res = el.parentNode.querySelectorAll(selector || \"*\");\n    return [...res].filter((ele) => {\n      return ele.parentNode === el.parentNode && ele != el;\n    });\n  },\n  /**\n   * rem与px单位转换\n   * @param {Object} num rem数值\n   */\n  rem2px(num) {\n    if (!number.isNumber(num)) {\n      throw new TypeError(\"The argument must be a number\");\n    }\n    let fs = this.getCssStyle(document.documentElement, \"font-size\");\n    return number.mutiply(num, parseFloat(fs));\n  },\n  /**\n   * rem与px单位转换\n   * @param {Object} num px数值\n   */\n  px2rem(num) {\n    if (!number.isNumber(num)) {\n      throw new TypeError(\"The argument must be a number\");\n    }\n    let fs = this.getCssStyle(document.documentElement, \"font-size\");\n    return number.divide(num, parseFloat(fs));\n  },\n  /**\n   * 获取元素的内容宽度，内容宽度不包括border和padding\n   * @param {Object} el 支持css选择器字符串，未指定则表示document.body\n   */\n  width(el) {\n    if (typeof el == \"string\" && el) {\n      el = document.body.querySelector(el);\n    }\n    if (!this.isElement(el)) {\n      el = document.body;\n    }\n    let clientWidth = el.clientWidth;\n    let paddingLeft_width = parseFloat(this.getCssStyle(el, \"padding-left\"));\n    let paddingRight_width = parseFloat(this.getCssStyle(el, \"padding-right\"));\n    return number.subtract(clientWidth, paddingLeft_width, paddingRight_width);\n  },\n  /**\n   * 获取元素的内容高度，内容高度不包括border和padding\n   * @param {Object} el 支持css选择器字符串 未指定则表示document.body\n   */\n  height(el) {\n    if (typeof el == \"string\" && el) {\n      el = document.body.querySelector(el);\n    }\n    if (!this.isElement(el)) {\n      el = document.body;\n    }\n    let clientHeight = el.clientHeight;\n    let paddingTop_height = parseFloat(this.getCssStyle(el, \"padding-top\"));\n    let paddingBottom_height = parseFloat(this.getCssStyle(el, \"padding-bottom\"));\n    return number.subtract(clientHeight, paddingTop_height, paddingBottom_height);\n  },\n  /**\n   * 移除class\n   * @param {Object} el 元素\n   * @param {Object} className 支持多类,以空格划分\n   */\n  removeClass(el, className) {\n    if (!this.isElement(el)) {\n      throw new TypeError(\"The first argument must be an element\");\n    }\n    if (!className || typeof className != \"string\") {\n      throw new TypeError(\"The second argument must be a string\");\n    }\n    let classList = el.classList;\n    let classArray = string.trim(className).split(/\\s+/);\n    classArray.forEach((item) => {\n      classList.remove(item);\n    });\n  },\n  /**\n   * 添加class\n   * @param {Object} el 元素\n   * @param {Object} className 支持多类,以空格划分\n   */\n  addClass(el, className) {\n    if (!this.isElement(el)) {\n      throw new TypeError(\"The first argument must be an element\");\n    }\n    if (!className || typeof className != \"string\") {\n      throw new TypeError(\"The second argument must be a string\");\n    }\n    let classList = el.classList;\n    let classArray = string.trim(className).split(/\\s+/);\n    classArray.forEach((item) => {\n      classList.add(item);\n    });\n  },\n  /**\n   * 判断指定元素是否含有指定类名\n   * @param {Object} el 元素\n   * @param {Object} className 支持多类,以空格划分\n   */\n  hasClass(el, className) {\n    if (!this.isElement(el)) {\n      throw new TypeError(\"The first argument must be an element\");\n    }\n    if (!className || typeof className != \"string\") {\n      throw new TypeError(\"The second argument must be a string\");\n    }\n    let classList = el.classList;\n    let classArray = string.trim(className).split(/\\s+/);\n    return classArray.every((item) => {\n      return classList.contains(item);\n    });\n  },\n  /**\n   * 监听元素滚动到顶部或者底部\n   * @param {Object} el 支持css选择器字符串 未指定则为窗口滚动\n   * @param {Object} callback 回调函数\n   */\n  scrollTopBottomTrigger(el, callback) {\n    if (typeof el == \"string\" && el) {\n      el = document.body.querySelector(el);\n    }\n    let scrollEle = window;\n    if (this.isElement(el) && el != document.body && el != document.documentElement) {\n      scrollEle = el;\n    }\n    if (typeof el == \"function\") {\n      callback = el;\n    }\n    let flag = true;\n    scrollEle.addEventListener(\"scroll\", () => {\n      if (this.getScrollTop(scrollEle) <= 0) {\n        let options = {\n          state: \"top\",\n          target: scrollEle\n        };\n        if (!flag) {\n          return;\n        }\n        if (typeof callback == \"function\") {\n          flag = false;\n          callback(options);\n        }\n      } else {\n        let options = {\n          state: \"bottom\",\n          target: scrollEle\n        };\n        let height = 0;\n        if (scrollEle == window) {\n          height = window.innerHeight;\n        } else {\n          height = scrollEle.clientHeight;\n        }\n        if (number.add(this.getScrollTop(scrollEle), height) + 1 >= this.getScrollHeight(scrollEle) && height != this.getScrollHeight(scrollEle)) {\n          if (!flag) {\n            return;\n          }\n          if (typeof callback == \"function\") {\n            flag = false;\n            callback(options);\n          }\n        } else {\n          flag = true;\n        }\n      }\n    });\n  },\n  /**\n   * 获取文档或元素的总宽度\n   * @param {Object} el 支持css选择器字符串 未指定则表示整个页面文档\n   */\n  getScrollWidth(el) {\n    if (typeof el == \"string\" && el) {\n      el = document.body.querySelector(el);\n    }\n    let scrollWidth = 0;\n    if (this.isElement(el) && el != document.documentElement && el != document.body) {\n      scrollWidth = el.scrollWidth;\n    } else {\n      if (document.documentElement.scrollWidth == 0 || document.body.scrollWidth == 0) {\n        scrollWidth = document.documentElement.scrollWidth || document.body.scrollWidth;\n      } else {\n        scrollWidth = document.documentElement.scrollWidth > document.body.scrollWidth ? document.documentElement.scrollWidth : document.body.scrollWidth;\n      }\n    }\n    return scrollWidth;\n  },\n  /**\n   * 获取文档或者元素的总高度\n   * @param {Object} el 支持css选择器字符串 未指定则表示整个页面文档\n   */\n  getScrollHeight(el) {\n    if (typeof el == \"string\" && el) {\n      el = document.body.querySelector(el);\n    }\n    let scrollHeight = 0;\n    if (this.isElement(el) && el != document.documentElement && el != document.body) {\n      scrollHeight = el.scrollHeight;\n    } else {\n      if (document.documentElement.scrollHeight == 0 || document.body.scrollHeight == 0) {\n        scrollHeight = document.documentElement.scrollHeight || document.body.scrollHeight;\n      } else {\n        scrollHeight = document.documentElement.scrollHeight > document.body.scrollHeight ? document.documentElement.scrollHeight : document.body.scrollHeight;\n      }\n    }\n    return scrollHeight;\n  },\n  /**\n   * 设置滚动条在Y轴上的距离\n   * @param {Object} options {el,number,time} el支持css选择器字符串 未指定则为窗口滚动\n   */\n  setScrollTop(options) {\n    let isWindow = false;\n    let el = options.el;\n    if (typeof el == \"string\" && el) {\n      el = document.body.querySelector(el);\n    }\n    let number$1 = options.number || 0;\n    let time = options.time || 0;\n    if (!this.isElement(el) || el == document.body || el == document.documentElement || el == window) {\n      isWindow = true;\n    }\n    return new Promise((resolve) => {\n      if (time <= 0) {\n        if (isWindow) {\n          document.documentElement.scrollTop = document.body.scrollTop = number$1;\n        } else {\n          el.scrollTop = number$1;\n        }\n        resolve();\n      } else {\n        let spacingTime = 10;\n        let spacingIndex = number.divide(time, spacingTime);\n        let nowTop = this.getScrollTop(el);\n        let everTop = number.divide(number.subtract(number$1, nowTop), spacingIndex);\n        let scrollTimer = setInterval(() => {\n          if (spacingIndex > 0) {\n            spacingIndex--;\n            if (isWindow) {\n              document.documentElement.scrollTop = document.body.scrollTop = nowTop = number.add(nowTop, everTop);\n            } else {\n              el.scrollTop = nowTop = number.add(nowTop, everTop);\n            }\n          } else {\n            clearInterval(scrollTimer);\n            resolve();\n          }\n        }, spacingTime);\n      }\n    });\n  },\n  /**\n   * 获取滚动条在Y轴上滚动的距离\n   * @param {Object} el 支持css选择器字符串 未指定则为窗口滚动\n   */\n  getScrollTop(el) {\n    if (typeof el == \"string\" && el) {\n      el = document.body.querySelector(el);\n    }\n    let scrollTop = 0;\n    if (this.isElement(el) && el != document.body && el != document.documentElement && el != window) {\n      scrollTop = el.scrollTop;\n    } else {\n      if (document.documentElement.scrollTop == 0 || document.body.scrollTop == 0) {\n        scrollTop = document.documentElement.scrollTop || document.body.scrollTop;\n      } else {\n        scrollTop = document.documentElement.scrollTop > document.body.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop;\n      }\n    }\n    return scrollTop;\n  },\n  /**\n   * 获取滚动条在X轴上滚动的距离\n   * @param {Object} el 支持css选择器字符串 未指定则为窗口滚动\n   */\n  getScrollLeft(el) {\n    if (typeof el == \"string\" && el) {\n      el = document.body.querySelector(el);\n    }\n    let scrollLeft = 0;\n    if (this.isElement(el) && el != document.body && el != document.documentElement && el != window) {\n      scrollLeft = el.scrollLeft;\n    } else {\n      if (document.documentElement.scrollLeft == 0 || document.body.scrollLeft == 0) {\n        scrollLeft = document.documentElement.scrollLeft || document.body.scrollLeft;\n      } else {\n        scrollLeft = document.documentElement.scrollLeft > document.body.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft;\n      }\n    }\n    return scrollLeft;\n  },\n  /**\n   * 设置滚动条在X轴上的距离\n   * @param {Object} options {el,number,time} el支持css选择器字符串 未指定则为窗口滚动\n   */\n  setScrollLeft(options) {\n    let isWindow = false;\n    let el = options.el;\n    if (typeof el == \"string\" && el) {\n      el = document.body.querySelector(el);\n    }\n    let number$1 = options.number || 0;\n    let time = options.time || 0;\n    if (!this.isElement(el) || el == document.body || el == document.documentElement || el == window) {\n      isWindow = true;\n    }\n    return new Promise((resolve) => {\n      if (time <= 0) {\n        if (isWindow) {\n          document.documentElement.scrollLeft = document.body.scrollLeft = number$1;\n        } else {\n          el.scrollLeft = number$1;\n        }\n        resolve();\n      } else {\n        let spacingTime = 10;\n        let spacingIndex = number.divide(time, spacingTime);\n        let nowLeft = this.getScrollLeft(el);\n        let everLeft = number.divide(number.subtract(number$1, nowLeft), spacingIndex);\n        let scrollTimer = setInterval(() => {\n          if (spacingIndex > 0) {\n            spacingIndex--;\n            if (isWindow) {\n              document.documentElement.scrollLeft = document.body.scrollLeft = nowLeft = number.add(nowLeft, everLeft);\n            } else {\n              el.scrollLeft = nowLeft = number.add(nowLeft, everLeft);\n            }\n          } else {\n            clearInterval(scrollTimer);\n            resolve();\n          }\n        }, spacingTime);\n      }\n    });\n  },\n  /**\n   * 获取元素指定样式\n   * @param {Object} el 元素\n   * @param {Object} cssName 样式名称\n   */\n  getCssStyle(el, cssName) {\n    if (!this.isElement(el)) {\n      throw new TypeError(\"The first argument must be an element\");\n    }\n    if (!cssName || typeof cssName != \"string\") {\n      throw new TypeError(\"The second argument must be a string\");\n    }\n    let cssText = \"\";\n    if (document.defaultView && document.defaultView.getComputedStyle) {\n      cssText = document.defaultView.getComputedStyle(el)[cssName];\n    } else {\n      cssText = el.currentStyle[cssName];\n    }\n    return cssText;\n  },\n  /**\n   * 判断字符串属于哪种选择器\n   * @param {Object} selector\n   */\n  getCssSelector(selector) {\n    if (!selector || typeof selector != \"string\") {\n      throw new TypeError(\"The argument must be a selector string\");\n    }\n    if (/^#{1}/.test(selector)) {\n      return {\n        type: \"id\",\n        value: selector.substr(1)\n      };\n    }\n    if (/^\\./.test(selector)) {\n      return {\n        type: \"class\",\n        value: selector.substr(1)\n      };\n    }\n    if (/^\\[(.+)\\]$/.test(selector)) {\n      let type = \"attribute\";\n      let value = \"\";\n      let attribute = string.trim(selector, true).substring(1, string.trim(selector, true).length - 1);\n      let arry = attribute.split(\"=\");\n      if (arry.length == 1) {\n        value = arry[0];\n      }\n      if (arry.length == 2) {\n        value = {\n          attributeName: arry[0],\n          attributeValue: arry[1].replace(/\\'/g, \"\").replace(/\\\"/g, \"\")\n          //去除属性值的单引号或者双引号\n        };\n      }\n      return {\n        type,\n        value\n      };\n    }\n    return {\n      type: \"tag\",\n      value: selector\n    };\n  },\n  /**\n   * 获取元素距离可视窗口的位置\n   * @param {Object} el 支持css选择器字符串 未指定则为document.body\n   */\n  getElementBounding(el) {\n    if (typeof el == \"string\" && el) {\n      el = document.body.querySelector(el);\n    }\n    if (!this.isElement(el)) {\n      el = document.body;\n    }\n    let point = el.getBoundingClientRect();\n    let top = point.top;\n    let bottom = number.subtract(document.documentElement.clientHeight || window.innerHeight, point.bottom);\n    let left = point.left;\n    let right = number.subtract(document.documentElement.clientWidth || window.innerWidth, point.right);\n    return {\n      top,\n      bottom,\n      left,\n      right\n    };\n  },\n  /**\n   * 判断是否是元素\n   * @param {Object} el\n   */\n  isElement(el) {\n    return el && el instanceof Node && el.nodeType === 1;\n  },\n  /**\n   * 字符串转dom\n   * @param {Object} html\n   */\n  string2dom(html) {\n    if (!html || typeof html != \"string\") {\n      throw new TypeError(\"The argument must be an HTML string\");\n    }\n    const template = document.createElement(\"template\");\n    template.innerHTML = html;\n    if (template.content.children.length == 1) {\n      return template.content.children[0];\n    } else {\n      return Array.from(template.content.children);\n    }\n  }\n};\nconst dataName = \"_dap-datas\";\nconst data = {\n  /**\n   * 移除指定数据\n   * @param {Object} el\n   * @param {Object} key\n   */\n  remove(el, key) {\n    if (!(el instanceof Document) && !element.isElement(el) && !element.isWindow(el)) {\n      throw new TypeError(\"The first argument must be an element node or window or document\");\n    }\n    let data2 = el[dataName] || {};\n    if (key === void 0 || key === null || key === \"\") {\n      el[dataName] = {};\n    } else {\n      delete data2[key];\n      el[dataName] = data2;\n    }\n  },\n  /**\n   * 判断是否含有指定数据\n   * @param {Object} el\n   * @param {Object} key\n   */\n  has(el, key) {\n    if (!(el instanceof Document) && !element.isElement(el) && !element.isWindow(el)) {\n      throw new TypeError(\"The first argument must be an element node or window or document\");\n    }\n    if (key === void 0 || key === null || key === \"\") {\n      throw new TypeError(\"The second parameter must be a unique key\");\n    }\n    let data2 = el[dataName] || {};\n    return data2.hasOwnProperty(key);\n  },\n  /**\n   * 获取元素指定数据\n   * @param {Object} el\n   * @param {Object} key\n   */\n  get(el, key) {\n    if (!(el instanceof Document) && !element.isElement(el) && !element.isWindow(el)) {\n      throw new TypeError(\"The first argument must be an element node or window or document\");\n    }\n    let data2 = el[dataName] || {};\n    if (key === void 0 || key === null || key === \"\") {\n      return data2;\n    } else {\n      return data2[key];\n    }\n  },\n  /**\n   * 设置元素指定数据\n   * @param {Object} el\n   * @param {Object} key\n   * @param {Object} value\n   */\n  set(el, key, value) {\n    if (!(el instanceof Document) && !element.isElement(el) && !element.isWindow(el)) {\n      throw new TypeError(\"The first argument must be an element node or window or document\");\n    }\n    if (key === void 0 || key === null || key === \"\") {\n      throw new TypeError(\"The second parameter must be a unique key\");\n    }\n    let data2 = el[dataName] || {};\n    data2[key] = value;\n    el[dataName] = data2;\n  }\n};\nconst common = {\n  /**\n   * 常用判断\n   * @param {Object} text 要判断的字符串\n   * @param {Object} param 判断的类型字符串\n   */\n  matchingText(text, param) {\n    if (!text || typeof text != \"string\") {\n      throw new TypeError(\"The first argument must be a string\");\n    }\n    if (!param || typeof param != \"string\") {\n      throw new TypeError(\"The second argument must be a string\");\n    }\n    let reg = null;\n    if (param == \"Chinese\") {\n      reg = /^[\\u4e00-\\u9fa5]+$/;\n    }\n    if (param == \"chinese\") {\n      reg = /[\\u4e00-\\u9fa5]/;\n    }\n    if (param == \"email\") {\n      reg = /^([A-Za-z0-9_\\-\\.])+\\@([A-Za-z0-9_\\-\\.])+\\.([A-Za-z]{2,4})$/;\n    }\n    if (param == \"username\") {\n      reg = /^[a-zA-Z0-9_]{4,16}$/;\n    }\n    if (param == \"int+\") {\n      reg = /^\\d+$/;\n    }\n    if (param == \"int-\") {\n      reg = /^-\\d+$/;\n    }\n    if (param == \"int\") {\n      reg = /^-?\\d+$/;\n    }\n    if (param == \"pos\") {\n      reg = /^\\d*\\.?\\d+$/;\n    }\n    if (param == \"neg\") {\n      reg = /^-\\d*\\.?\\d+$/;\n    }\n    if (param == \"number\") {\n      reg = /^-?\\d*\\.?\\d+$/;\n    }\n    if (param == \"phone\") {\n      reg = /^1[0-9]\\d{9}$/;\n    }\n    if (param == \"idCard\") {\n      reg = /^[1-9]\\d{5}(18|19|([23]\\d))\\d{2}((0[1-9])|(10|11|12))(([0-2][1-9])|10|20|30|31)\\d{3}[0-9Xx]$/;\n    }\n    if (param == \"url\") {\n      reg = /^(https?|ftp):\\/\\/(-\\.)?([^\\s\\/?\\.#-]+\\.?)+(\\/[^\\s]*)?$/;\n    }\n    if (param == \"IPv4\") {\n      reg = /^(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/;\n    }\n    if (param == \"hex\") {\n      reg = /^#?([a-fA-F0-9]{6}|[a-fA-F0-9]{3})$/;\n    }\n    if (param == \"rgb\") {\n      reg = /^rgb\\((25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]\\d|\\d),\\s?(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]\\d|\\d),\\s?(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]\\d|\\d)\\)$/;\n    }\n    if (param == \"rgba\") {\n      reg = /^rgba\\((25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]\\d|\\d),\\s?(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]\\d|\\d),\\s?(25[0-5]|2[0-4]\\d|1\\d{2}|[1-9]\\d|\\d),\\s?(0?\\.\\d|1(\\.0)?|0)\\)$/;\n    }\n    if (param == \"QQ\") {\n      reg = /^[1-9][0-9]{4,10}$/;\n    }\n    if (param == \"weixin\") {\n      reg = /^[a-zA-Z]([-_a-zA-Z0-9]{5,19})+$/;\n    }\n    if (param == \"plate\") {\n      reg = /^[京津沪渝冀豫云辽黑湘皖鲁新苏浙赣鄂桂甘晋蒙陕吉闽贵粤青藏川宁琼使领A-Z]{1}[A-Z]{1}[A-Z0-9]{4}[A-Z0-9挂学警港澳]{1}$/;\n    }\n    if (!reg) {\n      throw new Error(\"The second parameter is out of scope\");\n    }\n    return reg.test(text);\n  },\n  /**\n   * 根据参数名获取地址栏参数值\n   * @param {Object} name\n   */\n  getUrlParams(name) {\n    if (!name || typeof name != \"string\") {\n      throw new TypeError(\"The argument must be a string\");\n    }\n    let reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\");\n    let search = window.location.search.substr(1);\n    if (!search) {\n      let arr = window.location.hash.split(\"?\");\n      if (arr.length == 2) {\n        search = arr[1];\n      }\n    }\n    let r = search.match(reg);\n    if (r) {\n      return decodeURIComponent(r[2]);\n    }\n    return null;\n  },\n  /**\n   * 判断是否空对象\n   * @param {Object} obj\n   */\n  isEmptyObject(obj2) {\n    if (this.isObject(obj2)) {\n      if (Object.keys(obj2).length == 0) {\n        return true;\n      }\n      return false;\n    }\n    return false;\n  },\n  /**\n   * 判断两个参数是否相等\n   * @param {Object} a\n   * @param {Object} b\n   */\n  equal(a, b) {\n    if (typeof a !== typeof b) {\n      return false;\n    }\n    if (this.isObject(a) && this.isObject(b)) {\n      let aProps = Object.getOwnPropertyNames(a);\n      let bProps = Object.getOwnPropertyNames(b);\n      if (aProps.length != bProps.length) {\n        return false;\n      }\n      let length = aProps.length;\n      let isEqual = true;\n      for (let i = 0; i < length; i++) {\n        let propName = aProps[i];\n        let propA = a[propName];\n        let propB = b[propName];\n        if (!this.equal(propA, propB)) {\n          isEqual = false;\n          break;\n        }\n      }\n      return isEqual;\n    }\n    return a === b;\n  },\n  /**\n   * 是否对象\n   * @param {Object} val\n   */\n  isObject(val) {\n    if (typeof val === \"object\" && val) {\n      return true;\n    }\n    return false;\n  },\n  /**\n   * 文本复制\n   * @param {Object} text\n   */\n  copyText(text) {\n    if (!text || typeof text != \"string\") {\n      throw new TypeError(\"No text to copy is defined\");\n    }\n    if (!navigator.clipboard) {\n      throw new Error(\"navigator.clipboard must be obtained in a secure environment, such as localhost, 127.0.0.1, or https, so the method won't work\");\n    }\n    return navigator.clipboard.writeText(text);\n  },\n  /**\n   * 深度克隆\n   * @param {Object} data\n   */\n  clone(data2) {\n    if (this.isObject(data2)) {\n      if (Array.isArray(data2)) {\n        return data2.map((item) => {\n          return this.clone(item);\n        });\n      }\n      let newData = {};\n      for (let key in data2) {\n        newData[key] = this.clone(data2[key]);\n      }\n      return newData;\n    }\n    return data2;\n  }\n};\nconst parseEventName = (eventName) => {\n  let eventNames = eventName.split(/[\\s]+/g);\n  let result = [];\n  eventNames.forEach((name) => {\n    let arr = name.split(\".\");\n    let obj2 = {\n      eventName: arr[0]\n    };\n    if (arr.length > 1) {\n      obj2.guid = arr[1];\n    }\n    result.push(obj2);\n  });\n  return result;\n};\nconst updateEvents = (events) => {\n  let obj2 = {};\n  let keys = Object.keys(events);\n  keys.forEach((key) => {\n    if (events[key]) {\n      obj2[key] = events[key];\n    }\n  });\n  return obj2;\n};\nconst bindSingleListener = (el, eventName, guid, fn, options) => {\n  let events = data.get(el, \"dap-defined-events\") || {};\n  if (!guid) {\n    guid = data.get(el, \"dap-event-guid\") || 0;\n    data.set(el, \"dap-event-guid\", guid + 1);\n  }\n  guid = eventName + \".\" + guid;\n  if (events[guid] && events[guid].type == eventName) {\n    el.removeEventListener(eventName, events[guid].fn, events[guid].options);\n  }\n  el.addEventListener(eventName, fn, options);\n  events[guid] = {\n    type: eventName,\n    fn,\n    options\n  };\n  data.set(el, \"dap-defined-events\", events);\n};\nconst unbindSingleListener = (el, eventName, guid) => {\n  let events = data.get(el, \"dap-defined-events\") || {};\n  let keys = Object.keys(events);\n  let length = keys.length;\n  for (let i = 0; i < length; i++) {\n    let key = keys[i];\n    if (events[key].type == eventName) {\n      if (guid) {\n        if (key == eventName + \".\" + guid) {\n          el.removeEventListener(events[key].type, events[key].fn, events[key].options);\n          events[key] = void 0;\n        }\n      } else {\n        el.removeEventListener(events[key].type, events[key].fn, events[key].options);\n        events[key] = void 0;\n      }\n    }\n  }\n  events = updateEvents(events);\n  data.set(el, \"dap-defined-events\", events);\n};\nconst event = {\n  /**\n   * 绑定事件\n   * @param {Object} el 元素节点\n   * @param {Object} eventName 事件名称\n   * @param {Object} fn 函数\n   * @param {Object} options 参数\n   */\n  on(el, eventName, fn, options) {\n    if (!(el instanceof Document) && !element.isElement(el) && !element.isWindow(el)) {\n      throw new TypeError(\"The first argument must be an element node or window or document\");\n    }\n    if (!eventName || typeof eventName != \"string\") {\n      throw new TypeError(\"The second argument must be a string\");\n    }\n    if (!fn || typeof fn != \"function\") {\n      throw new TypeError(\"The third argument must be a function\");\n    }\n    if (!common.isObject(options)) {\n      options = {};\n    }\n    const result = parseEventName(eventName);\n    result.forEach((res) => {\n      bindSingleListener(el, res.eventName, res.guid, fn.bind(el), options);\n    });\n  },\n  /**\n   * 事件解绑\n   * @param {Object} el 元素节点\n   * @param {Object} eventName 事件名称\n   */\n  off(el, eventName) {\n    if (!(el instanceof Document) && !element.isElement(el) && !element.isWindow(el)) {\n      throw new TypeError(\"The first argument must be an element node or window or document\");\n    }\n    let events = data.get(el, \"dap-defined-events\");\n    if (!events) {\n      return;\n    }\n    if (!eventName) {\n      let keys = Object.keys(events);\n      let length = keys.length;\n      for (let i = 0; i < length; i++) {\n        let key = keys[i];\n        el.removeEventListener(events[key].type, events[key].fn, events[key].options);\n      }\n      data.remove(el, \"dap-defined-events\");\n      data.remove(el, \"dap-event-guid\");\n      return;\n    }\n    const result = parseEventName(eventName);\n    result.forEach((res) => {\n      unbindSingleListener(el, res.eventName, res.guid);\n    });\n  },\n  /**\n   * 获取绑定的所有事件\n   * @param {*} el\n   */\n  get(el) {\n    if (!(el instanceof Document) && !element.isElement(el) && !element.isWindow(el)) {\n      throw new TypeError(\"The first argument must be an element node or window or document\");\n    }\n    let events = data.get(el, \"dap-defined-events\");\n    if (!events) {\n      return;\n    }\n    return events;\n  }\n};\nconst color = {\n  /**\n   * rgb转hsv值\n   * @param {Object} rgb rgb值，数组\n   */\n  rgb2hsv(rgb) {\n    if (!Array.isArray(rgb) || rgb.length != 3) {\n      throw new TypeError(\"Invalid argument\");\n    }\n    let h = 0;\n    let s = 0;\n    let v = 0;\n    let r = rgb[0] >= 255 ? 255 : rgb[0];\n    let g = rgb[1] >= 255 ? 255 : rgb[1];\n    let b = rgb[2] >= 255 ? 255 : rgb[2];\n    r = r <= 0 ? 0 : r;\n    g = g <= 0 ? 0 : g;\n    b = b <= 0 ? 0 : b;\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    v = max / 255;\n    if (max === 0) {\n      s = 0;\n    } else {\n      s = 1 - min / max;\n    }\n    if (max === min) {\n      h = 0;\n    } else if (max === r && g >= b) {\n      h = 60 * ((g - b) / (max - min)) + 0;\n    } else if (max === r && g < b) {\n      h = 60 * ((g - b) / (max - min)) + 360;\n    } else if (max === g) {\n      h = 60 * ((b - r) / (max - min)) + 120;\n    } else if (max === b) {\n      h = 60 * ((r - g) / (max - min)) + 240;\n    }\n    return [h, s * 100, v * 100];\n  },\n  /**\n   * hsv格式值转rgb值\n   * @param {Object} hsv hsv值，数组\n   */\n  hsv2rgb(hsv) {\n    if (!Array.isArray(hsv) || hsv.length != 3) {\n      throw new TypeError(\"Invalid argument\");\n    }\n    let h = hsv[0] >= 360 || hsv[0] <= 0 ? 0 : hsv[0];\n    let s = hsv[1] >= 100 ? 100 : hsv[1];\n    s = s <= 0 ? 0 : s;\n    let v = hsv[2] >= 100 ? 100 : hsv[2];\n    v = v <= 0 ? 0 : v;\n    s = s / 100;\n    v = v / 100;\n    let r = 0;\n    let g = 0;\n    let b = 0;\n    let i = parseInt(h / 60 % 6 + \"\");\n    let f = h / 60 - i;\n    let p = v * (1 - s);\n    let q = v * (1 - f * s);\n    let t = v * (1 - (1 - f) * s);\n    switch (i) {\n      case 0:\n        r = v;\n        g = t;\n        b = p;\n        break;\n      case 1:\n        r = q;\n        g = v;\n        b = p;\n        break;\n      case 2:\n        r = p;\n        g = v;\n        b = t;\n        break;\n      case 3:\n        r = p;\n        g = q;\n        b = v;\n        break;\n      case 4:\n        r = t;\n        g = p;\n        b = v;\n        break;\n      case 5:\n        r = v;\n        g = p;\n        b = q;\n        break;\n    }\n    r = parseInt(r * 255 + \"\");\n    g = parseInt(g * 255 + \"\");\n    b = parseInt(b * 255 + \"\");\n    return [r, g, b];\n  },\n  /**\n   * rgb值转十六进制\n   * @param {Array} rgb rgb值，数组\n   */\n  rgb2hex(rgb) {\n    if (!Array.isArray(rgb) || rgb.length != 3) {\n      throw new TypeError(\"Invalid argument\");\n    }\n    let r = rgb[0];\n    let g = rgb[1];\n    let b = rgb[2];\n    let hex = \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n    return hex;\n  },\n  /**\n   * 十六进制颜色转rgb\n   * @param {String} hex 十六进制颜色值\n   */\n  hex2rgb(hex) {\n    if (!hex || typeof hex != \"string\") {\n      throw new TypeError(\"The argument must be a string\");\n    }\n    let color2 = hex.toLowerCase();\n    if (!common.matchingText(color2, \"hex\")) {\n      throw new TypeError(\"The argument must be a hexadecimal color value\");\n    }\n    if (color2.length === 4) {\n      let colorNew = \"#\";\n      for (let i = 1; i < 4; i += 1) {\n        colorNew += color2.slice(i, i + 1).concat(color2.slice(i, i + 1));\n      }\n      color2 = colorNew;\n    }\n    let colorChange = [];\n    for (let i = 1; i < 7; i += 2) {\n      colorChange.push(parseInt(\"0x\" + color2.slice(i, i + 2)));\n    }\n    return colorChange;\n  }\n};\nconst file = {\n  /**\n   * 根据文件获取可预览的图片路径\n   * @param {Object} file\n   */\n  getImageUrl(file2) {\n    if (!file2 || !(file2 instanceof File)) {\n      throw new TypeError(\"The argument must be a File object\");\n    }\n    return window.URL.createObjectURL(file2);\n  },\n  /**\n   * 将JS的file对象转为BASE64位字符串，通过then方法回调,参数为base64字符串\n   * @param {Object} file\n   */\n  dataFileToBase64(file2) {\n    return new Promise((resolve, reject) => {\n      if (!file2 || !(file2 instanceof File)) {\n        reject(new TypeError(\"The argument must be a File object\"));\n      }\n      let reader = new FileReader();\n      reader.readAsDataURL(file2);\n      reader.onloadend = () => {\n        let dataURL = reader.result;\n        resolve(dataURL);\n      };\n    });\n  },\n  /**\n   * 将base64位格式文件转换为file对象\n   * @param {Object} base64String base64位格式字符串\n   * @param {Object} fileName 转换后的文件名字，包含后缀\n   */\n  dataBase64toFile(base64String, fileName) {\n    if (!base64String || typeof base64String != \"string\") {\n      throw new TypeError(\"The first argument must be a string\");\n    }\n    if (!fileName || typeof fileName != \"string\") {\n      throw new TypeError(\"The second argument must be a string\");\n    }\n    let arr = base64String.split(\",\");\n    let mime = arr[0].match(/:(.*?);/)[1];\n    let bstr = atob(arr[1]);\n    let n = bstr.length;\n    let u8arr = new Uint8Array(n);\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([u8arr], fileName, {\n      type: mime\n    });\n  },\n  /**\n   * 图片压缩方法\n   * @param {*} file 需要压缩的图片File文件\n   * @param {*} opts 压缩参数\n   */\n  compressImage(file2, opts) {\n    const options = {\n      //压缩图片的宽，单位px，如果不设置默认为原图宽\n      width: void 0,\n      //压缩图片质量，默认为原图的0.8\n      quality: 0.8,\n      //图片类型，jpeg或者webp，默认为jpeg\n      mimeType: \"jpeg\",\n      //压缩后的最大值，单位kb，默认为0表示不设置此值\n      maxSize: 0,\n      //小于该大小的图片不进行压缩，单位kb，默认为0表示任何图片都要压缩\n      minSize: 0\n    };\n    if (common.isObject(opts)) {\n      if (number.isNumber(opts.width)) {\n        options.width = opts.width;\n      }\n      if (number.isNumber(opts.quality) && opts.quality >= 0 && opts.quality <= 1) {\n        options.quality = opts.quality;\n      }\n      if (opts.mimeType == \"jpeg\" || opts.mimeType == \"webp\") {\n        options.mimeType = opts.mimeType;\n      }\n      if (number.isNumber(opts.maxSize)) {\n        options.maxSize = opts.maxSize;\n      }\n      if (number.isNumber(opts.minSize)) {\n        options.minSize = opts.minSize;\n      }\n    }\n    const createFile = (canvas, fileName, quality) => {\n      let url = canvas.toDataURL(\"image/\" + options.mimeType, quality);\n      let file22 = this.dataBase64toFile(url, fileName);\n      if (options.maxSize > 0 && file22.size > options.maxSize * 1024) {\n        quality = quality <= 0 ? 0 : Number((quality - 0.01).toFixed(2));\n        const res = createFile(canvas, fileName, quality);\n        url = res.url;\n        file22 = res.file;\n        quality = res.quality;\n      }\n      return {\n        file: file22,\n        url,\n        quality\n      };\n    };\n    return new Promise((resolve, reject) => {\n      let reader = new FileReader();\n      reader.readAsDataURL(file2);\n      reader.onload = () => {\n        let url = reader.result;\n        let img = new Image();\n        img.src = url;\n        img.onload = () => {\n          if (options.minSize > 0 && file2.size <= options.minSize * 1024) {\n            resolve({\n              file: file2,\n              url,\n              quality: 1,\n              width: img.width,\n              height: img.height\n            });\n            return;\n          }\n          let canvas = document.createElement(\"canvas\");\n          let context = canvas.getContext(\"2d\");\n          canvas.width = options.width || img.width;\n          canvas.height = options.width ? options.width / (img.width / img.height) : img.height;\n          context.drawImage(img, 0, 0, canvas.width, canvas.height);\n          let index = file2.name.lastIndexOf(\".\");\n          const fileName = file2.name.substring(0, index) + \".\" + options.mimeType;\n          let res = createFile(canvas, fileName, options.quality);\n          resolve({\n            ...res,\n            width: canvas.width,\n            height: canvas.height\n          });\n        };\n        img.onerror = () => {\n          reject(new Error(\"Failed to load image file\"));\n        };\n      };\n      reader.onerror = () => {\n        reject(new Error(\"Failed to load image file\"));\n      };\n    });\n  }\n};\nconst platform = {\n  //设备语言类型\n  language() {\n    return window.navigator.browserLanguage || window.navigator.language;\n  },\n  /**\n   * 获取设备类型\n   */\n  device() {\n    const userAgent = window.navigator.userAgent;\n    return {\n      PC: !userAgent.match(/AppleWebKit.*Mobile.*/),\n      //是否移动终端\n      Mobile: !!userAgent.match(/AppleWebKit.*Mobile.*/),\n      //是否iPhone\n      iPhone: userAgent.includes(\"iPhone\"),\n      //是否手机\n      Phone: userAgent.includes(\"Android\") && /(?:Mobile)/.test(userAgent) || userAgent.includes(\"iPhone\") || /(?:Windows Phone)/.test(userAgent),\n      //是否iPad\n      iPad: userAgent.includes(\"iPad\"),\n      //是否平板电脑\n      Tablet: userAgent.includes(\"iPad\") || userAgent.includes(\"Android\") && !/(?:Mobile)/.test(userAgent) || userAgent.includes(\"Firefox\") && /(?:Tablet)/.test(userAgent),\n      //windows手机\n      WindowsPhone: /(?:Windows Phone)/.test(userAgent)\n    };\n  },\n  /**\n   * 获取浏览器类型\n   */\n  browser() {\n    const userAgent = window.navigator.userAgent;\n    return {\n      //是否edge浏览器\n      Edge: !!userAgent.match(/Edg\\/([\\d.]+)/),\n      //是否微信内置浏览器\n      weixin: userAgent.includes(\"MicroMessenger\"),\n      //是否QQ内置浏览器\n      QQ: userAgent.includes(\"QQ\"),\n      //是否QQ浏览器\n      QQBrowser: userAgent.includes(\"MQQBrowser\"),\n      //是否UC浏览器\n      UC: userAgent.includes(\"UCBrowser\"),\n      //是否谷歌浏览器\n      Chrome: userAgent.includes(\"Chrome\"),\n      //是否火狐浏览器\n      Firefox: userAgent.includes(\"Firefox\"),\n      //是否搜狗浏览器\n      sougou: userAgent.toLocaleLowerCase().includes(\"se 2.x\") || userAgent.toLocaleLowerCase().includes(\"metasr\") || userAgent.toLocaleLowerCase().includes(\"sogou\"),\n      //是否safari浏览器\n      Safari: userAgent.includes(\"Safari\") && !userAgent.includes(\"Chrome\")\n    };\n  },\n  /**\n   * 获取浏览器内核\n   */\n  browserKernel() {\n    const userAgent = window.navigator.userAgent;\n    if (userAgent.includes(\"Presto\")) {\n      return \"opera\";\n    } else if (userAgent.includes(\"AppleWebKit\")) {\n      return \"webkit\";\n    } else if (userAgent.includes(\"Gecko\") && !userAgent.includes(\"KHTML\")) {\n      return \"gecko\";\n    }\n    return \"\";\n  },\n  /**\n   * 获取操作系统数据\n   */\n  os() {\n    const userAgent = window.navigator.userAgent;\n    return {\n      //是否Windows系统\n      Windows: userAgent.includes(\"Windows\"),\n      //x64/x32\n      Windows_CPU: function() {\n        if (userAgent.toLocaleLowerCase().includes(\"win64\") || userAgent.toLocaleLowerCase().includes(\"wow64\")) {\n          return \"x64\";\n        } else if (userAgent.toLocaleLowerCase().includes(\"win32\") || userAgent.toLocaleLowerCase().includes(\"wow32\")) {\n          return \"x32\";\n        }\n        return \"\";\n      }(),\n      //Windows版本\n      Windows_Version: function() {\n        if (userAgent.includes(\"Windows NT 6.1\") || userAgent.includes(\"Windows 7\")) {\n          return \"Win7\";\n        }\n        if (userAgent.includes(\"Windows NT 6.3\") || userAgent.includes(\"Windows NT 6.2\") || userAgent.includes(\"Windows NT 8\")) {\n          return \"Win8\";\n        }\n        if (userAgent.includes(\"Windows NT 10\") || userAgent.includes(\"Windows NT 6.4\")) {\n          return \"Win10\";\n        }\n        return \"\";\n      }(),\n      //是否Mac\n      Mac: userAgent.includes(\"Macintosh\"),\n      //Mac版本\n      Mac_Version: function() {\n        if (userAgent.includes(\"Macintosh\")) {\n          const matches = userAgent.match(/Mac OS X ([^\\s]+)\\)/);\n          if (matches && matches[1]) {\n            return matches[1].split(/_|\\./).join(\".\");\n          }\n        }\n        return \"\";\n      }(),\n      //是否ios系统\n      ios: !!userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/),\n      //ios系统版本\n      ios_Version: function() {\n        if (!!userAgent.match(/\\(i[^;]+;( U;)? CPU.+Mac OS X/)) {\n          const matches = userAgent.match(/CPU.+OS ([^\\s]+) like Mac OS X/);\n          if (matches && matches[1]) {\n            return matches[1].split(/_|\\./).join(\".\");\n          }\n        }\n        return \"\";\n      }(),\n      //是否Android系统\n      Android: userAgent.includes(\"Android\"),\n      //Android系统版本\n      Android_Version: function() {\n        const matches = userAgent.match(/Android ([^\\s]+);/);\n        if (matches && matches[1]) {\n          return matches[1].split(/_|\\./).join(\".\");\n        }\n        return \"\";\n      }(),\n      //是否Linux系统\n      Linux: userAgent.includes(\"Linux\"),\n      //是否鸿蒙系统\n      HarmonyOS: userAgent.includes(\"HarmonyOS\"),\n      //是否Ubuntu系统\n      Ubuntu: userAgent.includes(\"Ubuntu\")\n    };\n  }\n};\nconst speech = {\n  /**\n   * 将文字加入语音播报队列\n   * @param {Object} text\n   */\n  start(text, params) {\n    if (!window.SpeechSynthesisUtterance || !window.speechSynthesis) {\n      throw new Error(\"The current browser does not support this syntax\");\n    }\n    let defaultParams = {\n      //话语的音调(0-2，值越大越尖锐,越低越低沉)\n      pitch: 0.8,\n      //说话的速度(0-10，值越大语速越快,越小语速越慢)\n      rate: 1,\n      //说话的音量：0-1\n      volume: 1,\n      //播放开始事件\n      start: function() {\n      },\n      //播放结束事件\n      end: function() {\n      },\n      //播放暂停事件\n      pause: function() {\n      },\n      //播放恢复事件\n      resume: function() {\n      },\n      //播放出错事件\n      error: function() {\n      }\n    };\n    if (!common.isObject(params)) {\n      params = {};\n    }\n    if (number.isNumber(params.pitch)) {\n      defaultParams.pitch = params.pitch;\n    }\n    if (number.isNumber(params.rate)) {\n      defaultParams.rate = params.rate;\n    }\n    if (number.isNumber(params.volume)) {\n      defaultParams.volume = params.volume;\n    }\n    if (typeof params.start == \"function\") {\n      defaultParams.start = params.start;\n    }\n    if (typeof params.end == \"function\") {\n      defaultParams.end = params.end;\n    }\n    if (typeof params.pause == \"function\") {\n      defaultParams.pause = params.pause;\n    }\n    if (typeof params.resume == \"function\") {\n      defaultParams.resume = params.resume;\n    }\n    if (typeof params.error == \"function\") {\n      defaultParams.error = params.error;\n    }\n    const speech2 = new SpeechSynthesisUtterance();\n    speech2.text = text;\n    speech2.pitch = defaultParams.pitch;\n    speech2.rate = defaultParams.rate;\n    speech2.volume = defaultParams.volume;\n    speech2.lang = \"zh-CN\";\n    speech2.onstart = (event2) => {\n      defaultParams.start.apply(speech2, [\n        event2,\n        {\n          text,\n          pitch: defaultParams.pitch,\n          rate: defaultParams.rate,\n          volume: defaultParams.volume\n        }\n      ]);\n    };\n    speech2.onend = (event2) => {\n      defaultParams.end.apply(speech2, [\n        event2,\n        {\n          text,\n          pitch: defaultParams.pitch,\n          rate: defaultParams.rate,\n          volume: defaultParams.volume\n        }\n      ]);\n    };\n    speech2.onpause = (event2) => {\n      defaultParams.pause.apply(speech2, [\n        event2,\n        {\n          text,\n          pitch: defaultParams.pitch,\n          rate: defaultParams.rate,\n          volume: defaultParams.volume\n        }\n      ]);\n    };\n    speech2.onresume = (event2) => {\n      defaultParams.resume.apply(speech2, [\n        event2,\n        {\n          text,\n          pitch: defaultParams.pitch,\n          rate: defaultParams.rate,\n          volume: defaultParams.volume\n        }\n      ]);\n    };\n    speech2.onerror = (event2) => {\n      defaultParams.error.apply(speech2, [\n        event2,\n        {\n          text,\n          pitch: defaultParams.pitch,\n          rate: defaultParams.rate,\n          volume: defaultParams.volume\n        }\n      ]);\n    };\n    window.speechSynthesis.speak(speech2);\n  },\n  /**\n   * 停止播报，停止所有播报队列里面的语音\n   */\n  stop() {\n    if (!window.SpeechSynthesisUtterance || !window.speechSynthesis) {\n      throw new Error(\"The current browser does not support this syntax\");\n    }\n    window.speechSynthesis.cancel();\n  },\n  /**\n   * 暂停播报\n   */\n  pause() {\n    if (!window.SpeechSynthesisUtterance || !window.speechSynthesis) {\n      throw new Error(\"The current browser does not support this syntax\");\n    }\n    window.speechSynthesis.pause();\n  },\n  /**\n   * 恢复暂停的播报\n   */\n  resume() {\n    if (!window.SpeechSynthesisUtterance || !window.speechSynthesis) {\n      throw new Error(\"The current browser does not support this syntax\");\n    }\n    window.speechSynthesis.resume();\n  }\n};\nconst obj = { number, data, element, event, common, color, file, string, platform, speech };\nexport {\n  color,\n  common,\n  data,\n  obj as default,\n  element,\n  event,\n  file,\n  number,\n  platform,\n  speech,\n  string\n};\n"],
  "mappings": "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",
  "names": []
}
