{
  "version": 3,
  "sources": ["../../../../node_modules/@interactjs/utils/isWindow.ts", "../../../../node_modules/@interactjs/utils/window.ts", "../../../../node_modules/@interactjs/utils/is.ts", "../../../../node_modules/@interactjs/actions/drag/plugin.ts", "../../../../node_modules/@interactjs/utils/domObjects.ts", "../../../../node_modules/@interactjs/utils/browser.ts", "../../../../node_modules/@interactjs/utils/domUtils.ts", "../../../../node_modules/@interactjs/utils/extend.ts", "../../../../node_modules/@interactjs/utils/rect.ts", "../../../../node_modules/@interactjs/utils/getOriginXY.ts", "../../../../node_modules/@interactjs/utils/normalizeListeners.ts", "../../../../node_modules/@interactjs/utils/hypot.ts", "../../../../node_modules/@interactjs/utils/pointerExtend.ts", "../../../../node_modules/@interactjs/utils/pointerUtils.ts", "../../../../node_modules/@interactjs/core/BaseEvent.ts", "../../../../node_modules/@interactjs/utils/arr.ts", "../../../../node_modules/@interactjs/actions/drop/DropEvent.ts", "../../../../node_modules/@interactjs/actions/drop/plugin.ts", "../../../../node_modules/@interactjs/actions/gesture/plugin.ts", "../../../../node_modules/@interactjs/actions/resize/plugin.ts", "../../../../node_modules/@interactjs/utils/raf.ts", "../../../../node_modules/@interactjs/actions/plugin.ts", "../../../../node_modules/@interactjs/auto-scroll/plugin.ts", "../../../../node_modules/@interactjs/utils/misc.ts", "../../../../node_modules/@interactjs/auto-start/InteractableMethods.ts", "../../../../node_modules/@interactjs/auto-start/base.ts", "../../../../node_modules/@interactjs/auto-start/dragAxis.ts", "../../../../node_modules/@interactjs/auto-start/hold.ts", "../../../../node_modules/@interactjs/auto-start/plugin.ts", "../../../../node_modules/@interactjs/core/interactablePreventDefault.ts", "../../../../node_modules/@interactjs/utils/isNonNativeEvent.ts", "../../../../node_modules/@interactjs/utils/clone.ts", "../../../../node_modules/@interactjs/modifiers/Modification.ts", "../../../../node_modules/@interactjs/modifiers/base.ts", "../../../../node_modules/@interactjs/core/options.ts", "../../../../node_modules/@interactjs/core/InteractEvent.ts", "../../../../node_modules/@interactjs/core/PointerInfo.ts", "../../../../node_modules/@interactjs/core/Interaction.ts", "../../../../node_modules/@interactjs/offset/plugin.ts", "../../../../node_modules/@interactjs/inertia/plugin.ts", "../../../../node_modules/@interactjs/core/Eventable.ts", "../../../../node_modules/@interactjs/core/events.ts", "../../../../node_modules/@interactjs/core/interactionFinder.ts", "../../../../node_modules/@interactjs/core/interactions.ts", "../../../../node_modules/@interactjs/core/Interactable.ts", "../../../../node_modules/@interactjs/core/InteractableSet.ts", "../../../../node_modules/@interactjs/core/scope.ts", "../../../../node_modules/@interactjs/core/InteractStatic.ts", "../../../../node_modules/@interactjs/interact/index.ts", "../../../../node_modules/@interactjs/snappers/edgeTarget.ts", "../../../../node_modules/@interactjs/snappers/elements.ts", "../../../../node_modules/@interactjs/snappers/grid.ts", "../../../../node_modules/@interactjs/snappers/plugin.ts", "../../../../node_modules/@interactjs/modifiers/aspectRatio.ts", "../../../../node_modules/@interactjs/modifiers/noop.ts", "../../../../node_modules/@interactjs/modifiers/restrict/pointer.ts", "../../../../node_modules/@interactjs/modifiers/restrict/edges.ts", "../../../../node_modules/@interactjs/modifiers/restrict/rect.ts", "../../../../node_modules/@interactjs/modifiers/restrict/size.ts", "../../../../node_modules/@interactjs/modifiers/snap/pointer.ts", "../../../../node_modules/@interactjs/modifiers/snap/size.ts", "../../../../node_modules/@interactjs/modifiers/snap/edges.ts", "../../../../node_modules/@interactjs/modifiers/all.ts", "../../../../node_modules/@interactjs/modifiers/plugin.ts", "../../../../node_modules/@interactjs/pointer-events/PointerEvent.ts", "../../../../node_modules/@interactjs/pointer-events/base.ts", "../../../../node_modules/@interactjs/pointer-events/holdRepeat.ts", "../../../../node_modules/@interactjs/pointer-events/interactableTargets.ts", "../../../../node_modules/@interactjs/pointer-events/plugin.ts", "../../../../node_modules/@interactjs/reflow/plugin.ts", "../../../../node_modules/interactjs/index.ts", "../../../../node_modules/@interactjs/interactjs/index.ts"],
  "sourcesContent": ["export default (thing: any) => !!(thing && thing.Window) && thing instanceof thing.Window\n", "import isWindow from './isWindow'\n\nexport let realWindow = undefined as Window\n\nlet win = undefined as Window\nexport { win as window }\n\nexport function init(window: Window & { wrap?: (...args: any[]) => any }) {\n  // get wrapped window if using Shadow DOM polyfill\n\n  realWindow = window\n\n  // create a TextNode\n  const el = window.document.createTextNode('')\n\n  // check if it's wrapped by a polyfill\n  if (el.ownerDocument !== window.document && typeof window.wrap === 'function' && window.wrap(el) === el) {\n    // use wrapped window\n    window = window.wrap(window)\n  }\n\n  win = window\n}\n\nif (typeof window !== 'undefined' && !!window) {\n  init(window)\n}\n\nexport function getWindow(node: any) {\n  if (isWindow(node)) {\n    return node\n  }\n\n  const rootNode = node.ownerDocument || node\n\n  return rootNode.defaultView || win.window\n}\n", "import isWindow from './isWindow'\nimport * as win from './window'\n\nconst window = (thing: any): thing is Window => thing === win.window || isWindow(thing)\n\nconst docFrag = (thing: any): thing is DocumentFragment => object(thing) && thing.nodeType === 11\n\nconst object = (thing: any): thing is { [index: string]: any } => !!thing && typeof thing === 'object'\n\nconst func = (thing: any): thing is (...args: any[]) => any => typeof thing === 'function'\n\nconst number = (thing: any): thing is number => typeof thing === 'number'\n\nconst bool = (thing: any): thing is boolean => typeof thing === 'boolean'\n\nconst string = (thing: any): thing is string => typeof thing === 'string'\n\nconst element = (thing: any): thing is HTMLElement | SVGElement => {\n  if (!thing || typeof thing !== 'object') {\n    return false\n  }\n\n  const _window = win.getWindow(thing) || win.window\n\n  return /object|function/.test(typeof Element)\n    ? thing instanceof Element || thing instanceof _window.Element\n    : thing.nodeType === 1 && typeof thing.nodeName === 'string'\n}\n\nconst plainObject: typeof object = (thing: any): thing is { [index: string]: any } =>\n  object(thing) && !!thing.constructor && /function Object\\b/.test(thing.constructor.toString())\n\nconst array = <T extends unknown>(thing: any): thing is T[] =>\n  object(thing) && typeof thing.length !== 'undefined' && func(thing.splice)\n\nexport default {\n  window,\n  docFrag,\n  object,\n  func,\n  number,\n  bool,\n  string,\n  element,\n  plainObject,\n  array,\n}\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ListenersArg, OrBoolean } from '@interactjs/core/types'\nimport is from '@interactjs/utils/is'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    draggable(options: Partial<OrBoolean<DraggableOptions>> | boolean): this\n    draggable(): DraggableOptions\n    /**\n     * ```js\n     * interact(element).draggable({\n     *     onstart: function (event) {},\n     *     onmove : function (event) {},\n     *     onend  : function (event) {},\n     *\n     *     // the axis in which the first movement must be\n     *     // for the drag sequence to start\n     *     // 'xy' by default - any direction\n     *     startAxis: 'x' || 'y' || 'xy',\n     *\n     *     // 'xy' by default - don't restrict to one axis (move in any direction)\n     *     // 'x' or 'y' to restrict movement to either axis\n     *     // 'start' to restrict movement to the axis the drag started in\n     *     lockAxis: 'x' || 'y' || 'xy' || 'start',\n     *\n     *     // max number of drags that can happen concurrently\n     *     // with elements of this Interactable. Infinity by default\n     *     max: Infinity,\n     *\n     *     // max number of drags that can target the same element+Interactable\n     *     // 1 by default\n     *     maxPerElement: 2\n     * })\n     *\n     * var isDraggable = interact('element').draggable(); // true\n     * ```\n     *\n     * Get or set whether drag actions can be performed on the target\n     *\n     * @param options - true/false or An object with event\n     * listeners to be fired on drag events (object makes the Interactable\n     * draggable)\n     */\n    draggable(options?: Partial<OrBoolean<DraggableOptions>> | boolean): this | DraggableOptions\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    drag: DraggableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    drag?: typeof drag\n  }\n}\n\nexport type DragEvent = InteractEvent<'drag'>\n\nexport interface DraggableOptions extends PerActionDefaults {\n  startAxis?: 'x' | 'y' | 'xy'\n  lockAxis?: 'x' | 'y' | 'xy' | 'start'\n  oninertiastart?: ListenersArg\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nfunction install(scope: Scope) {\n  const { actions, Interactable, defaults } = scope\n\n  Interactable.prototype.draggable = drag.draggable\n\n  actions.map.drag = drag\n  actions.methodDict.drag = 'draggable'\n\n  defaults.actions.drag = drag.defaults\n}\n\nfunction beforeMove({ interaction }) {\n  if (interaction.prepared.name !== 'drag') return\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x') {\n    interaction.coords.cur.page.y = interaction.coords.start.page.y\n    interaction.coords.cur.client.y = interaction.coords.start.client.y\n\n    interaction.coords.velocity.client.y = 0\n    interaction.coords.velocity.page.y = 0\n  } else if (axis === 'y') {\n    interaction.coords.cur.page.x = interaction.coords.start.page.x\n    interaction.coords.cur.client.x = interaction.coords.start.client.x\n\n    interaction.coords.velocity.client.x = 0\n    interaction.coords.velocity.page.x = 0\n  }\n}\n\nfunction move({ iEvent, interaction }) {\n  if (interaction.prepared.name !== 'drag') return\n\n  const axis = interaction.prepared.axis\n\n  if (axis === 'x' || axis === 'y') {\n    const opposite = axis === 'x' ? 'y' : 'x'\n\n    iEvent.page[opposite] = interaction.coords.start.page[opposite]\n    iEvent.client[opposite] = interaction.coords.start.client[opposite]\n    iEvent.delta[opposite] = 0\n  }\n}\n\nconst draggable: Interactable['draggable'] = function draggable(\n  this: Interactable,\n  options?: DraggableOptions | boolean,\n): any {\n  if (is.object(options)) {\n    this.options.drag.enabled = options.enabled !== false\n    this.setPerAction('drag', options)\n    this.setOnEvents('drag', options)\n\n    if (/^(xy|x|y|start)$/.test(options.lockAxis)) {\n      this.options.drag.lockAxis = options.lockAxis\n    }\n    if (/^(xy|x|y)$/.test(options.startAxis)) {\n      this.options.drag.startAxis = options.startAxis\n    }\n\n    return this\n  }\n\n  if (is.bool(options)) {\n    this.options.drag.enabled = options\n\n    return this\n  }\n\n  return this.options.drag as DraggableOptions\n}\n\nconst drag: Plugin = {\n  id: 'actions/drag',\n  install,\n  listeners: {\n    'interactions:before-action-move': beforeMove,\n    'interactions:action-resume': beforeMove,\n\n    // dragmove\n    'interactions:action-move': move,\n    'auto-start:check': (arg) => {\n      const { interaction, interactable, buttons } = arg\n      const dragOptions = interactable.options.drag\n\n      if (\n        !(dragOptions && dragOptions.enabled) ||\n        // check mouseButton setting if the pointer is down\n        (interaction.pointerIsDown &&\n          /mouse|pointer/.test(interaction.pointerType) &&\n          (buttons & interactable.options.drag.mouseButtons) === 0)\n      ) {\n        return undefined\n      }\n\n      arg.action = {\n        name: 'drag',\n        axis: dragOptions.lockAxis === 'start' ? dragOptions.startAxis : dragOptions.lockAxis,\n      }\n\n      return false\n    },\n  },\n  draggable,\n  beforeMove,\n  move,\n  defaults: {\n    startAxis: 'xy',\n    lockAxis: 'xy',\n  } as DraggableOptions,\n\n  getCursor() {\n    return 'move'\n  },\n\n  filterEventType: (type: string) => type.search('drag') === 0,\n}\n\nexport default drag\n", "const domObjects: {\n  init: any\n  document: Document\n  DocumentFragment: typeof DocumentFragment\n  SVGElement: typeof SVGElement\n  SVGSVGElement: typeof SVGSVGElement\n  SVGElementInstance: any\n  Element: typeof Element\n  HTMLElement: typeof HTMLElement\n  Event: typeof Event\n  Touch: typeof Touch\n  PointerEvent: typeof PointerEvent\n} = {\n  init,\n  document: null,\n  DocumentFragment: null,\n  SVGElement: null,\n  SVGSVGElement: null,\n  SVGElementInstance: null,\n  Element: null,\n  HTMLElement: null,\n  Event: null,\n  Touch: null,\n  PointerEvent: null,\n}\n\nfunction blank() {}\n\nexport default domObjects\n\nfunction init(window: Window) {\n  const win = window as any\n\n  domObjects.document = win.document\n  domObjects.DocumentFragment = win.DocumentFragment || blank\n  domObjects.SVGElement = win.SVGElement || blank\n  domObjects.SVGSVGElement = win.SVGSVGElement || blank\n  domObjects.SVGElementInstance = win.SVGElementInstance || blank\n  domObjects.Element = win.Element || blank\n  domObjects.HTMLElement = win.HTMLElement || domObjects.Element\n\n  domObjects.Event = win.Event\n  domObjects.Touch = win.Touch || blank\n  domObjects.PointerEvent = win.PointerEvent || win.MSPointerEvent\n}\n", "import domObjects from './domObjects'\nimport is from './is'\n\nconst browser = {\n  init,\n  supportsTouch: null as boolean,\n  supportsPointerEvent: null as boolean,\n  isIOS7: null as boolean,\n  isIOS: null as boolean,\n  isIe9: null as boolean,\n  isOperaMobile: null as boolean,\n  prefixedMatchesSelector: null as 'matches',\n  pEventTypes: null as {\n    up: string\n    down: string\n    over: string\n    out: string\n    move: string\n    cancel: string\n  },\n  wheelEvent: null as string,\n}\n\nfunction init(window: any) {\n  const Element = domObjects.Element\n  const navigator: Partial<Navigator> = window.navigator || {}\n\n  // Does the browser support touch input?\n  browser.supportsTouch =\n    'ontouchstart' in window ||\n    (is.func(window.DocumentTouch) && domObjects.document instanceof window.DocumentTouch)\n\n  // Does the browser support PointerEvents\n  // https://github.com/taye/interact.js/issues/703#issuecomment-471570492\n  browser.supportsPointerEvent = (navigator as any).pointerEnabled !== false && !!domObjects.PointerEvent\n\n  browser.isIOS = /iP(hone|od|ad)/.test(navigator.platform)\n\n  // scrolling doesn't change the result of getClientRects on iOS 7\n  browser.isIOS7 = /iP(hone|od|ad)/.test(navigator.platform) && /OS 7[^\\d]/.test(navigator.appVersion)\n\n  browser.isIe9 = /MSIE 9/.test(navigator.userAgent)\n\n  // Opera Mobile must be handled differently\n  browser.isOperaMobile =\n    navigator.appName === 'Opera' && browser.supportsTouch && /Presto/.test(navigator.userAgent)\n\n  // prefix matchesSelector\n  browser.prefixedMatchesSelector = (\n    'matches' in Element.prototype\n      ? 'matches'\n      : 'webkitMatchesSelector' in Element.prototype\n        ? 'webkitMatchesSelector'\n        : 'mozMatchesSelector' in Element.prototype\n          ? 'mozMatchesSelector'\n          : 'oMatchesSelector' in Element.prototype\n            ? 'oMatchesSelector'\n            : 'msMatchesSelector'\n  ) as 'matches'\n\n  browser.pEventTypes = browser.supportsPointerEvent\n    ? domObjects.PointerEvent === window.MSPointerEvent\n      ? {\n          up: 'MSPointerUp',\n          down: 'MSPointerDown',\n          over: 'mouseover',\n          out: 'mouseout',\n          move: 'MSPointerMove',\n          cancel: 'MSPointerCancel',\n        }\n      : {\n          up: 'pointerup',\n          down: 'pointerdown',\n          over: 'pointerover',\n          out: 'pointerout',\n          move: 'pointermove',\n          cancel: 'pointercancel',\n        }\n    : null\n\n  // because Webkit and Opera still use 'mousewheel' event type\n  browser.wheelEvent = domObjects.document && 'onmousewheel' in domObjects.document ? 'mousewheel' : 'wheel'\n}\n\nexport default browser\n", "import type { Rect, Target, Element } from '@interactjs/core/types'\n\nimport browser from './browser'\nimport domObjects from './domObjects'\nimport is from './is'\nimport * as win from './window'\n\nexport function nodeContains(parent: Node, child: Node) {\n  if (parent.contains) {\n    return parent.contains(child as Node)\n  }\n\n  while (child) {\n    if (child === parent) {\n      return true\n    }\n\n    child = (child as Node).parentNode\n  }\n\n  return false\n}\n\nexport function closest(element: Node, selector: string) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return element\n    }\n\n    element = parentNode(element)\n  }\n\n  return null\n}\n\nexport function parentNode(node: Node | Document) {\n  let parent = node.parentNode\n\n  if (is.docFrag(parent)) {\n    // skip past #shado-root fragments\n    // tslint:disable-next-line\n    while ((parent = (parent as any).host) && is.docFrag(parent)) {\n      continue\n    }\n\n    return parent\n  }\n\n  return parent\n}\n\nexport function matchesSelector(element: Element, selector: string) {\n  // remove /deep/ from selectors if shadowDOM polyfill is used\n  if (win.window !== win.realWindow) {\n    selector = selector.replace(/\\/deep\\//g, ' ')\n  }\n\n  return element[browser.prefixedMatchesSelector](selector)\n}\n\nconst getParent = (el: Node | Document | ShadowRoot) => el.parentNode || (el as ShadowRoot).host\n\n// Test for the element that's \"above\" all other qualifiers\nexport function indexOfDeepestElement(elements: Element[] | NodeListOf<globalThis.Element>) {\n  let deepestNodeParents: Node[] = []\n  let deepestNodeIndex: number\n\n  for (let i = 0; i < elements.length; i++) {\n    const currentNode = elements[i]\n    const deepestNode: Node = elements[deepestNodeIndex]\n\n    // node may appear in elements array multiple times\n    if (!currentNode || i === deepestNodeIndex) {\n      continue\n    }\n\n    if (!deepestNode) {\n      deepestNodeIndex = i\n      continue\n    }\n\n    const currentNodeParent = getParent(currentNode)\n    const deepestNodeParent = getParent(deepestNode)\n\n    // check if the deepest or current are document.documentElement/rootElement\n    // - if the current node is, do nothing and continue\n    if (currentNodeParent === currentNode.ownerDocument) {\n      continue\n    }\n    // - if deepest is, update with the current node and continue to next\n    else if (deepestNodeParent === currentNode.ownerDocument) {\n      deepestNodeIndex = i\n      continue\n    }\n\n    // compare zIndex of siblings\n    if (currentNodeParent === deepestNodeParent) {\n      if (zIndexIsHigherThan(currentNode, deepestNode)) {\n        deepestNodeIndex = i\n      }\n\n      continue\n    }\n\n    // populate the ancestry array for the latest deepest node\n    deepestNodeParents = deepestNodeParents.length ? deepestNodeParents : getNodeParents(deepestNode)\n\n    let ancestryStart: Node\n\n    // if the deepest node is an HTMLElement and the current node is a non root svg element\n    if (\n      deepestNode instanceof domObjects.HTMLElement &&\n      currentNode instanceof domObjects.SVGElement &&\n      !(currentNode instanceof domObjects.SVGSVGElement)\n    ) {\n      // TODO: is this check necessary? Was this for HTML elements embedded in SVG?\n      if (currentNode === deepestNodeParent) {\n        continue\n      }\n\n      ancestryStart = currentNode.ownerSVGElement\n    } else {\n      ancestryStart = currentNode\n    }\n\n    const currentNodeParents = getNodeParents(ancestryStart, deepestNode.ownerDocument)\n    let commonIndex = 0\n\n    // get (position of closest common ancestor) + 1\n    while (\n      currentNodeParents[commonIndex] &&\n      currentNodeParents[commonIndex] === deepestNodeParents[commonIndex]\n    ) {\n      commonIndex++\n    }\n\n    const parents = [\n      currentNodeParents[commonIndex - 1],\n      currentNodeParents[commonIndex],\n      deepestNodeParents[commonIndex],\n    ]\n\n    if (parents[0]) {\n      let child = parents[0].lastChild\n\n      while (child) {\n        if (child === parents[1]) {\n          deepestNodeIndex = i\n          deepestNodeParents = currentNodeParents\n\n          break\n        } else if (child === parents[2]) {\n          break\n        }\n\n        child = child.previousSibling\n      }\n    }\n  }\n\n  return deepestNodeIndex\n}\n\nfunction getNodeParents(node: Node, limit?: Node) {\n  const parents: Node[] = []\n  let parent: Node = node\n  let parentParent: Node\n\n  while ((parentParent = getParent(parent)) && parent !== limit && parentParent !== parent.ownerDocument) {\n    parents.unshift(parent)\n    parent = parentParent\n  }\n\n  return parents\n}\n\nfunction zIndexIsHigherThan(higherNode: Node, lowerNode: Node) {\n  const higherIndex = parseInt(win.getWindow(higherNode).getComputedStyle(higherNode).zIndex, 10) || 0\n  const lowerIndex = parseInt(win.getWindow(lowerNode).getComputedStyle(lowerNode).zIndex, 10) || 0\n\n  return higherIndex >= lowerIndex\n}\n\nexport function matchesUpTo(element: Element, selector: string, limit: Node) {\n  while (is.element(element)) {\n    if (matchesSelector(element, selector)) {\n      return true\n    }\n\n    element = parentNode(element) as Element\n\n    if (element === limit) {\n      return matchesSelector(element, selector)\n    }\n  }\n\n  return false\n}\n\nexport function getActualElement(element: Element) {\n  return (element as any).correspondingUseElement || element\n}\n\nexport function getScrollXY(relevantWindow?: Window) {\n  relevantWindow = relevantWindow || win.window\n  return {\n    x: relevantWindow.scrollX || relevantWindow.document.documentElement.scrollLeft,\n    y: relevantWindow.scrollY || relevantWindow.document.documentElement.scrollTop,\n  }\n}\n\nexport function getElementClientRect(element: Element): Required<Rect> {\n  const clientRect =\n    element instanceof domObjects.SVGElement ? element.getBoundingClientRect() : element.getClientRects()[0]\n\n  return (\n    clientRect && {\n      left: clientRect.left,\n      right: clientRect.right,\n      top: clientRect.top,\n      bottom: clientRect.bottom,\n      width: clientRect.width || clientRect.right - clientRect.left,\n      height: clientRect.height || clientRect.bottom - clientRect.top,\n    }\n  )\n}\n\nexport function getElementRect(element: Element) {\n  const clientRect = getElementClientRect(element)\n\n  if (!browser.isIOS7 && clientRect) {\n    const scroll = getScrollXY(win.getWindow(element))\n\n    clientRect.left += scroll.x\n    clientRect.right += scroll.x\n    clientRect.top += scroll.y\n    clientRect.bottom += scroll.y\n  }\n\n  return clientRect\n}\n\nexport function getPath(node: Node | Document) {\n  const path = []\n\n  while (node) {\n    path.push(node)\n    node = parentNode(node)\n  }\n\n  return path\n}\n\nexport function trySelector(value: Target) {\n  if (!is.string(value)) {\n    return false\n  }\n\n  // an exception will be raised if it is invalid\n  domObjects.document.querySelector(value)\n  return true\n}\n", "export default function extend<T, U extends object>(dest: U & Partial<T>, source: T): T & U {\n  for (const prop in source) {\n    ;(dest as unknown as T)[prop] = source[prop]\n  }\n\n  const ret = dest as T & U\n\n  return ret\n}\n", "import type {\n  HasGetRect,\n  RectResolvable,\n  Rect,\n  Element,\n  Point,\n  FullRect,\n  EdgeOptions,\n} from '@interactjs/core/types'\n\nimport { closest, getElementRect, parentNode } from './domUtils'\nimport extend from './extend'\nimport is from './is'\n\nexport function getStringOptionResult(value: any, target: HasGetRect, element: Node) {\n  if (value === 'parent') {\n    return parentNode(element)\n  }\n\n  if (value === 'self') {\n    return target.getRect(element as Element)\n  }\n\n  return closest(element, value)\n}\n\nexport function resolveRectLike<T extends any[]>(\n  value: RectResolvable<T>,\n  target?: HasGetRect,\n  element?: Node,\n  functionArgs?: T,\n) {\n  let returnValue: any = value\n  if (is.string(returnValue)) {\n    returnValue = getStringOptionResult(returnValue, target, element)\n  } else if (is.func(returnValue)) {\n    returnValue = returnValue(...functionArgs)\n  }\n\n  if (is.element(returnValue)) {\n    returnValue = getElementRect(returnValue)\n  }\n\n  return returnValue as Rect\n}\n\nexport function toFullRect(rect: Rect): FullRect {\n  const { top, left, bottom, right } = rect\n  const width = rect.width ?? rect.right - rect.left\n  const height = rect.height ?? rect.bottom - rect.top\n\n  return { top, left, bottom, right, width, height }\n}\n\nexport function rectToXY(rect: Rect | Point) {\n  return (\n    rect && {\n      x: 'x' in rect ? rect.x : rect.left,\n      y: 'y' in rect ? rect.y : rect.top,\n    }\n  )\n}\n\nexport function xywhToTlbr<T extends Partial<Rect & Point>>(rect: T) {\n  if (rect && !('left' in rect && 'top' in rect)) {\n    rect = extend({}, rect)\n\n    rect.left = rect.x || 0\n    rect.top = rect.y || 0\n    rect.right = rect.right || rect.left + rect.width\n    rect.bottom = rect.bottom || rect.top + rect.height\n  }\n\n  return rect as Rect & T\n}\n\nexport function tlbrToXywh(rect: Rect & Partial<Point>) {\n  if (rect && !('x' in rect && 'y' in rect)) {\n    rect = extend({}, rect)\n\n    rect.x = rect.left || 0\n    rect.y = rect.top || 0\n    rect.width = rect.width || (rect.right || 0) - rect.x\n    rect.height = rect.height || (rect.bottom || 0) - rect.y\n  }\n\n  return rect as FullRect & Point\n}\n\nexport function addEdges(edges: EdgeOptions, rect: Rect, delta: Point) {\n  if (edges.left) {\n    rect.left += delta.x\n  }\n  if (edges.right) {\n    rect.right += delta.x\n  }\n  if (edges.top) {\n    rect.top += delta.y\n  }\n  if (edges.bottom) {\n    rect.bottom += delta.y\n  }\n\n  rect.width = rect.right - rect.left\n  rect.height = rect.bottom - rect.top\n}\n", "import type { PerActionDefaults } from '@interactjs/core/options'\nimport type { ActionName, HasGetRect } from '@interactjs/core/types'\n\nimport { rectToXY, resolveRectLike } from './rect'\n\nexport default function getOriginXY(\n  target: HasGetRect & { options: PerActionDefaults },\n  element: Node,\n  actionName?: ActionName,\n) {\n  const actionOptions = actionName && (target.options as any)[actionName]\n  const actionOrigin = actionOptions && actionOptions.origin\n  const origin = actionOrigin || target.options.origin\n\n  const originRect = resolveRectLike(origin, target, element, [target && element])\n\n  return rectToXY(originRect) || { x: 0, y: 0 }\n}\n", "import type { EventTypes, Listener, ListenersArg } from '@interactjs/core/types'\n\nimport is from './is'\n\nexport interface NormalizedListeners {\n  [type: string]: Listener[]\n}\n\nexport default function normalize(\n  type: EventTypes,\n  listeners?: ListenersArg | ListenersArg[] | null,\n  filter = (_typeOrPrefix: string) => true,\n  result?: NormalizedListeners,\n): NormalizedListeners {\n  result = result || {}\n\n  if (is.string(type) && type.search(' ') !== -1) {\n    type = split(type)\n  }\n\n  if (is.array(type)) {\n    type.forEach((t) => normalize(t, listeners, filter, result))\n    return result\n  }\n\n  // before:  type = [{ drag: () => {} }], listeners = undefined\n  // after:   type = ''                  , listeners = [{ drag: () => {} }]\n  if (is.object(type)) {\n    listeners = type\n    type = ''\n  }\n\n  if (is.func(listeners) && filter(type)) {\n    result[type] = result[type] || []\n    result[type].push(listeners)\n  } else if (is.array(listeners)) {\n    for (const l of listeners) {\n      normalize(type, l, filter, result)\n    }\n  } else if (is.object(listeners)) {\n    for (const prefix in listeners) {\n      const combinedTypes = split(prefix).map((p) => `${type}${p}`)\n\n      normalize(combinedTypes, listeners[prefix], filter, result)\n    }\n  }\n\n  return result as NormalizedListeners\n}\n\nfunction split(type: string) {\n  return type.trim().split(/ +/)\n}\n", "export default (x: number, y: number) => Math.sqrt(x * x + y * y)\n", "const VENDOR_PREFIXES = ['webkit', 'moz']\n\nexport default function pointerExtend<T>(dest: Partial<T & { __set?: Partial<T> }>, source: T) {\n  dest.__set ||= {} as any\n\n  for (const prop in source) {\n    // skip deprecated prefixed properties\n    if (VENDOR_PREFIXES.some((prefix) => prop.indexOf(prefix) === 0)) continue\n\n    if (typeof dest[prop] !== 'function' && prop !== '__set') {\n      Object.defineProperty(dest, prop, {\n        get() {\n          if (prop in dest.__set) return dest.__set[prop]\n\n          return (dest.__set[prop] = source[prop] as any)\n        },\n        set(value: any) {\n          dest.__set[prop] = value\n        },\n        configurable: true,\n      })\n    }\n  }\n  return dest\n}\n", "import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { CoordsSetMember, PointerType, Point, PointerEventType, Element } from '@interactjs/core/types'\n\nimport browser from './browser'\nimport dom from './domObjects'\nimport * as domUtils from './domUtils'\nimport hypot from './hypot'\nimport is from './is'\nimport pointerExtend from './pointerExtend'\n\nexport function copyCoords(dest: CoordsSetMember, src: CoordsSetMember) {\n  dest.page = dest.page || ({} as any)\n  dest.page.x = src.page.x\n  dest.page.y = src.page.y\n\n  dest.client = dest.client || ({} as any)\n  dest.client.x = src.client.x\n  dest.client.y = src.client.y\n\n  dest.timeStamp = src.timeStamp\n}\n\nexport function setCoordDeltas(targetObj: CoordsSetMember, prev: CoordsSetMember, cur: CoordsSetMember) {\n  targetObj.page.x = cur.page.x - prev.page.x\n  targetObj.page.y = cur.page.y - prev.page.y\n  targetObj.client.x = cur.client.x - prev.client.x\n  targetObj.client.y = cur.client.y - prev.client.y\n  targetObj.timeStamp = cur.timeStamp - prev.timeStamp\n}\n\nexport function setCoordVelocity(targetObj: CoordsSetMember, delta: CoordsSetMember) {\n  const dt = Math.max(delta.timeStamp / 1000, 0.001)\n\n  targetObj.page.x = delta.page.x / dt\n  targetObj.page.y = delta.page.y / dt\n  targetObj.client.x = delta.client.x / dt\n  targetObj.client.y = delta.client.y / dt\n  targetObj.timeStamp = dt\n}\n\nexport function setZeroCoords(targetObj: CoordsSetMember) {\n  targetObj.page.x = 0\n  targetObj.page.y = 0\n  targetObj.client.x = 0\n  targetObj.client.y = 0\n}\n\nexport function isNativePointer(pointer: any) {\n  return pointer instanceof dom.Event || pointer instanceof dom.Touch\n}\n\n// Get specified X/Y coords for mouse or event.touches[0]\nexport function getXY(type: string, pointer: PointerType | InteractEvent, xy: Point) {\n  xy = xy || ({} as Point)\n  type = type || 'page'\n\n  xy.x = pointer[(type + 'X') as 'pageX']\n  xy.y = pointer[(type + 'Y') as 'pageY']\n\n  return xy\n}\n\nexport function getPageXY(pointer: PointerType | InteractEvent, page?: Point) {\n  page = page || { x: 0, y: 0 }\n\n  // Opera Mobile handles the viewport and scrolling oddly\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    getXY('screen', pointer, page)\n\n    page.x += window.scrollX\n    page.y += window.scrollY\n  } else {\n    getXY('page', pointer, page)\n  }\n\n  return page\n}\n\nexport function getClientXY(pointer: PointerType, client: Point) {\n  client = client || ({} as any)\n\n  if (browser.isOperaMobile && isNativePointer(pointer)) {\n    // Opera Mobile handles the viewport and scrolling oddly\n    getXY('screen', pointer, client)\n  } else {\n    getXY('client', pointer, client)\n  }\n\n  return client\n}\n\nexport function getPointerId(pointer: { pointerId?: number; identifier?: number; type?: string }) {\n  return is.number(pointer.pointerId) ? pointer.pointerId! : pointer.identifier!\n}\n\nexport function setCoords(dest: CoordsSetMember, pointers: any[], timeStamp: number) {\n  const pointer = pointers.length > 1 ? pointerAverage(pointers) : pointers[0]\n\n  getPageXY(pointer, dest.page)\n  getClientXY(pointer, dest.client)\n\n  dest.timeStamp = timeStamp\n}\n\nexport function getTouchPair(event: TouchEvent | PointerType[]) {\n  const touches: PointerType[] = []\n\n  // array of touches is supplied\n  if (is.array(event)) {\n    touches[0] = event[0]\n    touches[1] = event[1]\n  }\n  // an event\n  else {\n    if (event.type === 'touchend') {\n      if (event.touches.length === 1) {\n        touches[0] = event.touches[0]\n        touches[1] = event.changedTouches[0]\n      } else if (event.touches.length === 0) {\n        touches[0] = event.changedTouches[0]\n        touches[1] = event.changedTouches[1]\n      }\n    } else {\n      touches[0] = event.touches[0]\n      touches[1] = event.touches[1]\n    }\n  }\n\n  return touches\n}\n\nexport function pointerAverage(pointers: PointerType[]) {\n  const average = {\n    pageX: 0,\n    pageY: 0,\n    clientX: 0,\n    clientY: 0,\n    screenX: 0,\n    screenY: 0,\n  }\n\n  type CoordKeys = keyof typeof average\n\n  for (const pointer of pointers) {\n    for (const prop in average) {\n      average[prop as CoordKeys] += pointer[prop as CoordKeys]\n    }\n  }\n  for (const prop in average) {\n    average[prop as CoordKeys] /= pointers.length\n  }\n\n  return average\n}\n\nexport function touchBBox(event: PointerType[]) {\n  if (!event.length) {\n    return null\n  }\n\n  const touches = getTouchPair(event)\n  const minX = Math.min(touches[0].pageX, touches[1].pageX)\n  const minY = Math.min(touches[0].pageY, touches[1].pageY)\n  const maxX = Math.max(touches[0].pageX, touches[1].pageX)\n  const maxY = Math.max(touches[0].pageY, touches[1].pageY)\n\n  return {\n    x: minX,\n    y: minY,\n    left: minX,\n    top: minY,\n    right: maxX,\n    bottom: maxY,\n    width: maxX - minX,\n    height: maxY - minY,\n  }\n}\n\nexport function touchDistance(event: PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = (deltaSource + 'X') as 'pageX'\n  const sourceY = (deltaSource + 'Y') as 'pageY'\n  const touches = getTouchPair(event)\n\n  const dx = touches[0][sourceX] - touches[1][sourceX]\n  const dy = touches[0][sourceY] - touches[1][sourceY]\n\n  return hypot(dx, dy)\n}\n\nexport function touchAngle(event: PointerType[] | TouchEvent, deltaSource: string) {\n  const sourceX = (deltaSource + 'X') as 'pageX'\n  const sourceY = (deltaSource + 'Y') as 'pageY'\n  const touches = getTouchPair(event)\n  const dx = touches[1][sourceX] - touches[0][sourceX]\n  const dy = touches[1][sourceY] - touches[0][sourceY]\n  const angle = (180 * Math.atan2(dy, dx)) / Math.PI\n\n  return angle\n}\n\nexport function getPointerType(pointer: { pointerType?: string; identifier?: number; type?: string }) {\n  return is.string(pointer.pointerType)\n    ? pointer.pointerType\n    : is.number(pointer.pointerType)\n      ? [undefined, undefined, 'touch', 'pen', 'mouse'][pointer.pointerType]!\n      : // if the PointerEvent API isn't available, then the \"pointer\" must\n        // be either a MouseEvent, TouchEvent, or Touch object\n        /touch/.test(pointer.type || '') || pointer instanceof dom.Touch\n        ? 'touch'\n        : 'mouse'\n}\n\n// [ event.target, event.currentTarget ]\nexport function getEventTargets(event: Event) {\n  const path = is.func(event.composedPath)\n    ? (event.composedPath() as Element[])\n    : (event as unknown as { path: Element[] }).path\n\n  return [\n    domUtils.getActualElement(path ? path[0] : (event.target as Element)),\n    domUtils.getActualElement(event.currentTarget as Element),\n  ]\n}\n\nexport function newCoords(): CoordsSetMember {\n  return {\n    page: { x: 0, y: 0 },\n    client: { x: 0, y: 0 },\n    timeStamp: 0,\n  }\n}\n\nexport function coordsToEvent(coords: MockCoords) {\n  const event = {\n    coords,\n    get page() {\n      return this.coords.page\n    },\n    get client() {\n      return this.coords.client\n    },\n    get timeStamp() {\n      return this.coords.timeStamp\n    },\n    get pageX() {\n      return this.coords.page.x\n    },\n    get pageY() {\n      return this.coords.page.y\n    },\n    get clientX() {\n      return this.coords.client.x\n    },\n    get clientY() {\n      return this.coords.client.y\n    },\n    get pointerId() {\n      return this.coords.pointerId\n    },\n    get target() {\n      return this.coords.target\n    },\n    get type() {\n      return this.coords.type\n    },\n    get pointerType() {\n      return this.coords.pointerType\n    },\n    get buttons() {\n      return this.coords.buttons\n    },\n    preventDefault() {},\n  }\n\n  return event as typeof event & PointerType & PointerEventType\n}\n\nexport interface MockCoords {\n  page: Point\n  client: Point\n  timeStamp?: number\n  pointerId?: any\n  target?: any\n  type?: string\n  pointerType?: string\n  buttons?: number\n}\n\nexport { pointerExtend }\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction, InteractionProxy } from '@interactjs/core/Interaction'\nimport type { ActionName } from '@interactjs/core/types'\n\nexport class BaseEvent<T extends ActionName | null = never> {\n  declare type: string\n  declare target: EventTarget\n  declare currentTarget: Node\n  declare interactable: Interactable\n  /** @internal */\n  declare _interaction: Interaction<T>\n  declare timeStamp: number\n  immediatePropagationStopped = false\n  propagationStopped = false\n\n  constructor(interaction: Interaction<T>) {\n    this._interaction = interaction\n  }\n\n  preventDefault() {}\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation() {\n    this.propagationStopped = true\n  }\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation() {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n\n// defined outside of class definition to avoid assignment of undefined during\n// construction\nexport interface BaseEvent<T extends ActionName | null = never> {\n  interaction: InteractionProxy<T>\n}\n\n// getters and setters defined here to support typescript 3.6 and below which\n// don't support getter and setters in .d.ts files\nObject.defineProperty(BaseEvent.prototype, 'interaction', {\n  get(this: BaseEvent) {\n    return this._interaction._proxy\n  },\n  set(this: BaseEvent) {},\n})\n", "type Filter<T> = (element: T, index: number, array: T[]) => boolean\n\nexport const contains = <T>(array: T[], target: T) => array.indexOf(target) !== -1\n\nexport const remove = <T>(array: T[], target: T) => array.splice(array.indexOf(target), 1)\n\nexport const merge = <T, U>(target: Array<T | U>, source: U[]) => {\n  for (const item of source) {\n    target.push(item)\n  }\n\n  return target\n}\n\nexport const from = <T = any>(source: ArrayLike<T>) => merge([] as T[], source as T[])\n\nexport const findIndex = <T>(array: T[], func: Filter<T>) => {\n  for (let i = 0; i < array.length; i++) {\n    if (func(array[i], i, array)) {\n      return i\n    }\n  }\n\n  return -1\n}\n\nexport const find = <T = any>(array: T[], func: Filter<T>): T | undefined => array[findIndex(array, func)]\n", "import { BaseEvent } from '@interactjs/core/BaseEvent'\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Element } from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\n\nimport type { DropState } from './plugin'\n\nexport class DropEvent extends BaseEvent<'drag'> {\n  declare target: Element\n  dropzone: Interactable\n  dragEvent: InteractEvent<'drag'>\n  relatedTarget: Element\n  draggable: Interactable\n  propagationStopped = false\n  immediatePropagationStopped = false\n\n  /**\n   * Class of events fired on dropzones during drags with acceptable targets.\n   */\n  constructor(dropState: DropState, dragEvent: InteractEvent<'drag'>, type: string) {\n    super(dragEvent._interaction)\n\n    const { element, dropzone } = type === 'dragleave' ? dropState.prev : dropState.cur\n\n    this.type = type\n    this.target = element\n    this.currentTarget = element\n    this.dropzone = dropzone\n    this.dragEvent = dragEvent\n    this.relatedTarget = dragEvent.target\n    this.draggable = dragEvent.interactable\n    this.timeStamp = dragEvent.timeStamp\n  }\n\n  /**\n   * If this is a `dropactivate` event, the dropzone element will be\n   * deactivated.\n   *\n   * If this is a `dragmove` or `dragenter`, a `dragleave` will be fired on the\n   * dropzone element and more.\n   */\n  reject() {\n    const { dropState } = this._interaction\n\n    if (\n      this.type !== 'dropactivate' &&\n      (!this.dropzone || dropState.cur.dropzone !== this.dropzone || dropState.cur.element !== this.target)\n    ) {\n      return\n    }\n\n    dropState.prev.dropzone = this.dropzone\n    dropState.prev.element = this.target\n\n    dropState.rejected = true\n    dropState.events.enter = null\n\n    this.stopImmediatePropagation()\n\n    if (this.type === 'dropactivate') {\n      const activeDrops = dropState.activeDrops\n      const index = arr.findIndex(\n        activeDrops,\n        ({ dropzone, element }) => dropzone === this.dropzone && element === this.target,\n      )\n\n      dropState.activeDrops.splice(index, 1)\n\n      const deactivateEvent = new DropEvent(dropState, this.dragEvent, 'dropdeactivate')\n\n      deactivateEvent.dropzone = this.dropzone\n      deactivateEvent.target = this.target\n\n      this.dropzone.fire(deactivateEvent)\n    } else {\n      this.dropzone.fire(new DropEvent(dropState, this.dragEvent, 'dragleave'))\n    }\n  }\n\n  preventDefault() {}\n\n  stopPropagation() {\n    this.propagationStopped = true\n  }\n\n  stopImmediatePropagation() {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n}\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Element, PointerEventType, Rect, ListenersArg } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport is from '@interactjs/utils/is'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport '../drag/plugin'\n\nimport type { DragEvent } from '../drag/plugin'\nimport drag from '../drag/plugin'\n/* eslint-enable import/no-duplicates */\n\nimport { DropEvent } from './DropEvent'\n\nexport type DropFunctionChecker = (\n  dragEvent: any, // related drag operation\n  event: any, // touch or mouse EventEmitter\n  dropped: boolean, // default checker result\n  dropzone: Interactable, // dropzone interactable\n  dropElement: Element, // drop zone element\n  draggable: Interactable, // draggable's Interactable\n  draggableElement: Element, // dragged element\n) => boolean\n\nexport interface DropzoneOptions extends PerActionDefaults {\n  accept?:\n    | string\n    | Element\n    | (({ dropzone, draggableElement }: { dropzone: Interactable; draggableElement: Element }) => boolean)\n  // How the overlap is checked on the drop zone\n  overlap?: 'pointer' | 'center' | number\n  checker?: DropFunctionChecker\n\n  ondropactivate?: ListenersArg\n  ondropdeactivate?: ListenersArg\n  ondragenter?: ListenersArg\n  ondragleave?: ListenersArg\n  ondropmove?: ListenersArg\n  ondrop?: ListenersArg\n}\n\nexport interface DropzoneMethod {\n  (this: Interactable, options: DropzoneOptions | boolean): Interactable\n  (): DropzoneOptions\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    /**\n     *\n     * ```js\n     * interact('.drop').dropzone({\n     *   accept: '.can-drop' || document.getElementById('single-drop'),\n     *   overlap: 'pointer' || 'center' || zeroToOne\n     * }\n     * ```\n     *\n     * Returns or sets whether draggables can be dropped onto this target to\n     * trigger drop events\n     *\n     * Dropzones can receive the following events:\n     *  - `dropactivate` and `dropdeactivate` when an acceptable drag starts and ends\n     *  - `dragenter` and `dragleave` when a draggable enters and leaves the dropzone\n     *  - `dragmove` when a draggable that has entered the dropzone is moved\n     *  - `drop` when a draggable is dropped into this dropzone\n     *\n     * Use the `accept` option to allow only elements that match the given CSS\n     * selector or element. The value can be:\n     *\n     *  - **an Element** - only that element can be dropped into this dropzone.\n     *  - **a string**, - the element being dragged must match it as a CSS selector.\n     *  - **`null`** - accept options is cleared - it accepts any element.\n     *\n     * Use the `overlap` option to set how drops are checked for. The allowed\n     * values are:\n     *\n     *   - `'pointer'`, the pointer must be over the dropzone (default)\n     *   - `'center'`, the draggable element's center must be over the dropzone\n     *   - a number from 0-1 which is the `(intersection area) / (draggable area)`.\n     *   e.g. `0.5` for drop to happen when half of the area of the draggable is\n     *   over the dropzone\n     *\n     * Use the `checker` option to specify a function to check if a dragged element\n     * is over this Interactable.\n     *\n     * @param options - The new options to be set\n     */\n    dropzone(options: DropzoneOptions | boolean): Interactable\n    /** @returns The current setting */\n    dropzone(): DropzoneOptions\n\n    /**\n     * ```js\n     * interact(target)\n     * .dropChecker(function(dragEvent,         // related dragmove or dragend event\n     *                       event,             // TouchEvent/PointerEvent/MouseEvent\n     *                       dropped,           // bool result of the default checker\n     *                       dropzone,          // dropzone Interactable\n     *                       dropElement,       // dropzone elemnt\n     *                       draggable,         // draggable Interactable\n     *                       draggableElement) {// draggable element\n     *\n     *   return dropped && event.target.hasAttribute('allow-drop')\n     * }\n     * ```\n     */\n    dropCheck(\n      dragEvent: InteractEvent,\n      event: PointerEventType,\n      draggable: Interactable,\n      draggableElement: Element,\n      dropElemen: Element,\n      rect: any,\n    ): boolean\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    dropState?: DropState\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    /** @internal */\n    prevDropzone?: Interactable\n    dropzone?: Interactable\n    dragEnter?: Element\n    dragLeave?: Element\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    drop: DropzoneOptions\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    dynamicDrop?: boolean\n  }\n\n  interface SignalArgs {\n    'actions/drop:start': DropSignalArg\n    'actions/drop:move': DropSignalArg\n    'actions/drop:end': DropSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    drop?: typeof drop\n  }\n}\n\ndeclare module '@interactjs/core/InteractStatic' {\n  interface InteractStatic {\n    /**\n     * Returns or sets whether the dimensions of dropzone elements are calculated\n     * on every dragmove or only on dragstart for the default dropChecker\n     *\n     * @param {boolean} [newValue] True to check on each move. False to check only\n     * before start\n     * @return {boolean | interact} The current setting or interact\n     */\n    dynamicDrop: (newValue?: boolean) => boolean | this\n  }\n}\n\ninterface DropSignalArg {\n  interaction: Interaction<'drag'>\n  dragEvent: DragEvent\n}\n\nexport interface ActiveDrop {\n  dropzone: Interactable\n  element: Element\n  rect: Rect\n}\n\nexport interface DropState {\n  cur: {\n    // the dropzone a drag target might be dropped into\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  prev: {\n    // the dropzone that was recently dragged away from\n    dropzone: Interactable\n    // the element at the time of checking\n    element: Element\n  }\n  // wheather the potential drop was rejected from a listener\n  rejected: boolean\n  // the drop events related to the current drag event\n  events: FiredDropEvents\n  activeDrops: ActiveDrop[]\n}\n\nfunction install(scope: Scope) {\n  const { actions, interactStatic: interact, Interactable, defaults } = scope\n\n  scope.usePlugin(drag)\n\n  Interactable.prototype.dropzone = function (this: Interactable, options) {\n    return dropzoneMethod(this, options)\n  } as Interactable['dropzone']\n\n  Interactable.prototype.dropCheck = function (\n    this: Interactable,\n    dragEvent,\n    event,\n    draggable,\n    draggableElement,\n    dropElement,\n    rect,\n  ) {\n    return dropCheckMethod(this, dragEvent, event, draggable, draggableElement, dropElement, rect)\n  }\n\n  interact.dynamicDrop = function (newValue?: boolean) {\n    if (is.bool(newValue)) {\n      // if (dragging && scope.dynamicDrop !== newValue && !newValue) {\n      //  calcRects(dropzones)\n      // }\n\n      scope.dynamicDrop = newValue\n\n      return interact\n    }\n    return scope.dynamicDrop!\n  }\n\n  extend(actions.phaselessTypes, {\n    dragenter: true,\n    dragleave: true,\n    dropactivate: true,\n    dropdeactivate: true,\n    dropmove: true,\n    drop: true,\n  })\n  actions.methodDict.drop = 'dropzone'\n\n  scope.dynamicDrop = false\n\n  defaults.actions.drop = drop.defaults\n}\n\nfunction collectDropzones({ interactables }: Scope, draggableElement: Element) {\n  const drops: ActiveDrop[] = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const dropzone of interactables.list) {\n    if (!dropzone.options.drop.enabled) {\n      continue\n    }\n\n    const accept = dropzone.options.drop.accept\n\n    // test the draggable draggableElement against the dropzone's accept setting\n    if (\n      (is.element(accept) && accept !== draggableElement) ||\n      (is.string(accept) && !domUtils.matchesSelector(draggableElement, accept)) ||\n      (is.func(accept) && !accept({ dropzone, draggableElement }))\n    ) {\n      continue\n    }\n\n    for (const dropzoneElement of dropzone.getAllElements()) {\n      if (dropzoneElement !== draggableElement) {\n        drops.push({\n          dropzone,\n          element: dropzoneElement,\n          rect: dropzone.getRect(dropzoneElement),\n        })\n      }\n    }\n  }\n\n  return drops\n}\n\nfunction fireActivationEvents(activeDrops: ActiveDrop[], event: DropEvent) {\n  // loop through all active dropzones and trigger event\n  for (const { dropzone, element } of activeDrops.slice()) {\n    event.dropzone = dropzone\n\n    // set current element as event target\n    event.target = element\n    dropzone.fire(event)\n    event.propagationStopped = event.immediatePropagationStopped = false\n  }\n}\n\n// return a new array of possible drops. getActiveDrops should always be\n// called when a drag has just started or a drag event happens while\n// dynamicDrop is true\nfunction getActiveDrops(scope: Scope, dragElement: Element) {\n  // get dropzones and their elements that could receive the draggable\n  const activeDrops = collectDropzones(scope, dragElement)\n\n  for (const activeDrop of activeDrops) {\n    activeDrop.rect = activeDrop.dropzone.getRect(activeDrop.element)\n  }\n\n  return activeDrops\n}\n\nfunction getDrop(\n  { dropState, interactable: draggable, element: dragElement }: Interaction,\n  dragEvent,\n  pointerEvent,\n) {\n  const validDrops: Element[] = []\n\n  // collect all dropzones and their elements which qualify for a drop\n  for (const { dropzone, element: dropzoneElement, rect } of dropState.activeDrops) {\n    const isValid = dropzone.dropCheck(\n      dragEvent,\n      pointerEvent,\n      draggable!,\n      dragElement!,\n      dropzoneElement,\n      rect,\n    )\n    validDrops.push(isValid ? dropzoneElement : null)\n  }\n\n  // get the most appropriate dropzone based on DOM depth and order\n  const dropIndex = domUtils.indexOfDeepestElement(validDrops)\n\n  return dropState!.activeDrops[dropIndex] || null\n}\n\nfunction getDropEvents(interaction: Interaction, _pointerEvent, dragEvent: DragEvent) {\n  const dropState = interaction.dropState!\n  const dropEvents: Record<string, DropEvent | null> = {\n    enter: null,\n    leave: null,\n    activate: null,\n    deactivate: null,\n    move: null,\n    drop: null,\n  }\n\n  if (dragEvent.type === 'dragstart') {\n    dropEvents.activate = new DropEvent(dropState, dragEvent, 'dropactivate')\n\n    dropEvents.activate.target = null as never\n    dropEvents.activate.dropzone = null as never\n  }\n  if (dragEvent.type === 'dragend') {\n    dropEvents.deactivate = new DropEvent(dropState, dragEvent, 'dropdeactivate')\n\n    dropEvents.deactivate.target = null as never\n    dropEvents.deactivate.dropzone = null as never\n  }\n\n  if (dropState.rejected) {\n    return dropEvents\n  }\n\n  if (dropState.cur.element !== dropState.prev.element) {\n    // if there was a previous dropzone, create a dragleave event\n    if (dropState.prev.dropzone) {\n      dropEvents.leave = new DropEvent(dropState, dragEvent, 'dragleave')\n\n      dragEvent.dragLeave = dropEvents.leave.target = dropState.prev.element\n      dragEvent.prevDropzone = dropEvents.leave.dropzone = dropState.prev.dropzone\n    }\n    // if dropzone is not null, create a dragenter event\n    if (dropState.cur.dropzone) {\n      dropEvents.enter = new DropEvent(dropState, dragEvent, 'dragenter')\n\n      dragEvent.dragEnter = dropState.cur.element\n      dragEvent.dropzone = dropState.cur.dropzone\n    }\n  }\n\n  if (dragEvent.type === 'dragend' && dropState.cur.dropzone) {\n    dropEvents.drop = new DropEvent(dropState, dragEvent, 'drop')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n    dragEvent.relatedTarget = dropState.cur.element\n  }\n  if (dragEvent.type === 'dragmove' && dropState.cur.dropzone) {\n    dropEvents.move = new DropEvent(dropState, dragEvent, 'dropmove')\n\n    dragEvent.dropzone = dropState.cur.dropzone\n  }\n\n  return dropEvents\n}\n\ntype FiredDropEvents = Partial<\n  Record<'leave' | 'enter' | 'move' | 'drop' | 'activate' | 'deactivate', DropEvent>\n>\n\nfunction fireDropEvents(interaction: Interaction, events: FiredDropEvents) {\n  const dropState = interaction.dropState!\n  const { activeDrops, cur, prev } = dropState\n\n  if (events.leave) {\n    prev.dropzone.fire(events.leave)\n  }\n  if (events.enter) {\n    cur.dropzone.fire(events.enter)\n  }\n  if (events.move) {\n    cur.dropzone.fire(events.move)\n  }\n  if (events.drop) {\n    cur.dropzone.fire(events.drop)\n  }\n\n  if (events.deactivate) {\n    fireActivationEvents(activeDrops, events.deactivate)\n  }\n\n  dropState.prev.dropzone = cur.dropzone\n  dropState.prev.element = cur.element\n}\n\nfunction onEventCreated({ interaction, iEvent, event }: DoPhaseArg<'drag', EventPhase>, scope: Scope) {\n  if (iEvent.type !== 'dragmove' && iEvent.type !== 'dragend') {\n    return\n  }\n\n  const dropState = interaction.dropState!\n\n  if (scope.dynamicDrop) {\n    dropState.activeDrops = getActiveDrops(scope, interaction.element!)\n  }\n\n  const dragEvent = iEvent\n  const dropResult = getDrop(interaction, dragEvent, event)\n\n  // update rejected status\n  dropState.rejected =\n    dropState.rejected &&\n    !!dropResult &&\n    dropResult.dropzone === dropState.cur.dropzone &&\n    dropResult.element === dropState.cur.element\n\n  dropState.cur.dropzone = dropResult && dropResult.dropzone\n  dropState.cur.element = dropResult && dropResult.element\n\n  dropState.events = getDropEvents(interaction, event, dragEvent)\n}\n\nfunction dropzoneMethod(interactable: Interactable): DropzoneOptions\nfunction dropzoneMethod(interactable: Interactable, options: DropzoneOptions | boolean): Interactable\nfunction dropzoneMethod(interactable: Interactable, options?: DropzoneOptions | boolean) {\n  if (is.object(options)) {\n    interactable.options.drop.enabled = options.enabled !== false\n\n    if (options.listeners) {\n      const normalized = normalizeListeners(options.listeners)\n      // rename 'drop' to '' as it will be prefixed with 'drop'\n      const corrected = Object.keys(normalized).reduce((acc, type) => {\n        const correctedType = /^(enter|leave)/.test(type)\n          ? `drag${type}`\n          : /^(activate|deactivate|move)/.test(type)\n            ? `drop${type}`\n            : type\n\n        acc[correctedType] = normalized[type]\n\n        return acc\n      }, {})\n\n      const prevListeners = interactable.options.drop.listeners\n      prevListeners && interactable.off(prevListeners)\n\n      interactable.on(corrected)\n      interactable.options.drop.listeners = corrected\n    }\n\n    if (is.func(options.ondrop)) {\n      interactable.on('drop', options.ondrop)\n    }\n    if (is.func(options.ondropactivate)) {\n      interactable.on('dropactivate', options.ondropactivate)\n    }\n    if (is.func(options.ondropdeactivate)) {\n      interactable.on('dropdeactivate', options.ondropdeactivate)\n    }\n    if (is.func(options.ondragenter)) {\n      interactable.on('dragenter', options.ondragenter)\n    }\n    if (is.func(options.ondragleave)) {\n      interactable.on('dragleave', options.ondragleave)\n    }\n    if (is.func(options.ondropmove)) {\n      interactable.on('dropmove', options.ondropmove)\n    }\n\n    if (/^(pointer|center)$/.test(options.overlap as string)) {\n      interactable.options.drop.overlap = options.overlap\n    } else if (is.number(options.overlap)) {\n      interactable.options.drop.overlap = Math.max(Math.min(1, options.overlap), 0)\n    }\n    if ('accept' in options) {\n      interactable.options.drop.accept = options.accept\n    }\n    if ('checker' in options) {\n      interactable.options.drop.checker = options.checker\n    }\n\n    return interactable\n  }\n\n  if (is.bool(options)) {\n    interactable.options.drop.enabled = options\n\n    return interactable\n  }\n\n  return interactable.options.drop\n}\n\nfunction dropCheckMethod(\n  interactable: Interactable,\n  dragEvent: InteractEvent,\n  event: PointerEventType,\n  draggable: Interactable,\n  draggableElement: Element,\n  dropElement: Element,\n  rect: any,\n) {\n  let dropped = false\n\n  // if the dropzone has no rect (eg. display: none)\n  // call the custom dropChecker or just return false\n  if (!(rect = rect || interactable.getRect(dropElement))) {\n    return interactable.options.drop.checker\n      ? interactable.options.drop.checker(\n          dragEvent,\n          event,\n          dropped,\n          interactable,\n          dropElement,\n          draggable,\n          draggableElement,\n        )\n      : false\n  }\n\n  const dropOverlap = interactable.options.drop.overlap\n\n  if (dropOverlap === 'pointer') {\n    const origin = getOriginXY(draggable, draggableElement, 'drag')\n    const page = pointerUtils.getPageXY(dragEvent)\n\n    page.x += origin.x\n    page.y += origin.y\n\n    const horizontal = page.x > rect.left && page.x < rect.right\n    const vertical = page.y > rect.top && page.y < rect.bottom\n\n    dropped = horizontal && vertical\n  }\n\n  const dragRect = draggable.getRect(draggableElement)\n\n  if (dragRect && dropOverlap === 'center') {\n    const cx = dragRect.left + dragRect.width / 2\n    const cy = dragRect.top + dragRect.height / 2\n\n    dropped = cx >= rect.left && cx <= rect.right && cy >= rect.top && cy <= rect.bottom\n  }\n\n  if (dragRect && is.number(dropOverlap)) {\n    const overlapArea =\n      Math.max(0, Math.min(rect.right, dragRect.right) - Math.max(rect.left, dragRect.left)) *\n      Math.max(0, Math.min(rect.bottom, dragRect.bottom) - Math.max(rect.top, dragRect.top))\n\n    const overlapRatio = overlapArea / (dragRect.width * dragRect.height)\n\n    dropped = overlapRatio >= dropOverlap\n  }\n\n  if (interactable.options.drop.checker) {\n    dropped = interactable.options.drop.checker(\n      dragEvent,\n      event,\n      dropped,\n      interactable,\n      dropElement,\n      draggable,\n      draggableElement,\n    )\n  }\n\n  return dropped\n}\n\nconst drop: Plugin = {\n  id: 'actions/drop',\n  install,\n  listeners: {\n    'interactions:before-action-start': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      interaction.dropState = {\n        cur: {\n          dropzone: null,\n          element: null,\n        },\n        prev: {\n          dropzone: null,\n          element: null,\n        },\n        rejected: null,\n        events: null,\n        activeDrops: [],\n      }\n    },\n\n    'interactions:after-action-start': (\n      { interaction, event, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const dropState = interaction.dropState!\n\n      // reset active dropzones\n      dropState.activeDrops = []\n      dropState.events = {}\n      dropState.activeDrops = getActiveDrops(scope, interaction.element!)\n      dropState.events = getDropEvents(interaction, event, dragEvent)\n\n      if (dropState.events.activate) {\n        fireActivationEvents(dropState.activeDrops, dropState.events.activate)\n        scope.fire('actions/drop:start', { interaction, dragEvent })\n      }\n    },\n\n    'interactions:action-move': onEventCreated,\n\n    'interactions:after-action-move': (\n      { interaction, iEvent: dragEvent }: DoPhaseArg<'drag', EventPhase>,\n      scope,\n    ) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const dropState = interaction.dropState!\n      fireDropEvents(interaction, dropState.events)\n\n      scope.fire('actions/drop:move', { interaction, dragEvent })\n      dropState.events = {}\n    },\n\n    'interactions:action-end': (arg: DoPhaseArg<'drag', EventPhase>, scope) => {\n      if (arg.interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { interaction, iEvent: dragEvent } = arg\n\n      onEventCreated(arg, scope)\n      fireDropEvents(interaction, interaction.dropState!.events)\n      scope.fire('actions/drop:end', { interaction, dragEvent })\n    },\n\n    'interactions:stop': ({ interaction }) => {\n      if (interaction.prepared.name !== 'drag') {\n        return\n      }\n\n      const { dropState } = interaction\n\n      if (dropState) {\n        dropState.activeDrops = null as never\n        dropState.events = null as never\n        dropState.cur.dropzone = null as never\n        dropState.cur.element = null as never\n        dropState.prev.dropzone = null as never\n        dropState.prev.element = null as never\n        dropState.rejected = false\n      }\n    },\n  },\n  getActiveDrops,\n  getDrop,\n  getDropEvents,\n  fireDropEvents,\n\n  filterEventType: (type: string) => type.search('drag') === 0 || type.search('drop') === 0,\n\n  defaults: {\n    enabled: false,\n    accept: null as never,\n    overlap: 'pointer',\n  } as DropzoneOptions,\n}\n\nexport default drop\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { InteractEvent, EventPhase } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Rect, PointerType, ListenersArg, OrBoolean } from '@interactjs/core/types'\nimport is from '@interactjs/utils/is'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    gesture?: {\n      angle: number // angle from first to second touch\n      distance: number\n      scale: number // gesture.distance / gesture.startDistance\n      startAngle: number // angle of line joining two touches\n      startDistance: number // distance between two touches of touchStart\n    }\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    gesturable(options: Partial<OrBoolean<GesturableOptions>> | boolean): this\n    gesturable(): GesturableOptions\n    /**\n     * ```js\n     * interact(element).gesturable({\n     *     onstart: function (event) {},\n     *     onmove : function (event) {},\n     *     onend  : function (event) {},\n     *\n     *     // limit multiple gestures.\n     *     // See the explanation in {@link Interactable.draggable} example\n     *     max: Infinity,\n     *     maxPerElement: 1,\n     * })\n     *\n     * var isGestureable = interact(element).gesturable()\n     * ```\n     *\n     * Gets or sets whether multitouch gestures can be performed on the target\n     *\n     * @param options - true/false or An object with event listeners to be fired on gesture events (makes the Interactable gesturable)\n     * @returns A boolean indicating if this can be the target of gesture events, or this Interactable\n     */\n    gesturable(options?: Partial<OrBoolean<GesturableOptions>> | boolean): this | GesturableOptions\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    gesture: GesturableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    gesture?: typeof gesture\n  }\n}\n\nexport interface GesturableOptions extends PerActionDefaults {\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nexport interface GestureEvent extends InteractEvent<'gesture'> {\n  distance: number\n  angle: number\n  da: number // angle change\n  scale: number // ratio of distance start to current event\n  ds: number // scale change\n  box: Rect // enclosing box of all points\n  touches: PointerType[]\n}\n\nexport interface GestureSignalArg extends DoPhaseArg<'gesture', EventPhase> {\n  iEvent: GestureEvent\n  interaction: Interaction<'gesture'>\n}\n\nfunction install(scope: Scope) {\n  const { actions, Interactable, defaults } = scope\n\n  Interactable.prototype.gesturable = function (\n    this: InstanceType<typeof Interactable>,\n    options: GesturableOptions | boolean,\n  ) {\n    if (is.object(options)) {\n      this.options.gesture.enabled = options.enabled !== false\n      this.setPerAction('gesture', options)\n      this.setOnEvents('gesture', options)\n\n      return this\n    }\n\n    if (is.bool(options)) {\n      this.options.gesture.enabled = options\n\n      return this\n    }\n\n    return this.options.gesture as GesturableOptions\n  } as Interactable['gesturable']\n\n  actions.map.gesture = gesture\n  actions.methodDict.gesture = 'gesturable'\n\n  defaults.actions.gesture = gesture.defaults\n}\n\nfunction updateGestureProps({ interaction, iEvent, phase }: GestureSignalArg) {\n  if (interaction.prepared.name !== 'gesture') return\n\n  const pointers = interaction.pointers.map((p) => p.pointer)\n  const starting = phase === 'start'\n  const ending = phase === 'end'\n  const deltaSource = interaction.interactable.options.deltaSource\n\n  iEvent.touches = [pointers[0], pointers[1]]\n\n  if (starting) {\n    iEvent.distance = pointerUtils.touchDistance(pointers, deltaSource)\n    iEvent.box = pointerUtils.touchBBox(pointers)\n    iEvent.scale = 1\n    iEvent.ds = 0\n    iEvent.angle = pointerUtils.touchAngle(pointers, deltaSource)\n    iEvent.da = 0\n\n    interaction.gesture.startDistance = iEvent.distance\n    interaction.gesture.startAngle = iEvent.angle\n  } else if (ending || interaction.pointers.length < 2) {\n    const prevEvent = interaction.prevEvent as GestureEvent\n\n    iEvent.distance = prevEvent.distance\n    iEvent.box = prevEvent.box\n    iEvent.scale = prevEvent.scale\n    iEvent.ds = 0\n    iEvent.angle = prevEvent.angle\n    iEvent.da = 0\n  } else {\n    iEvent.distance = pointerUtils.touchDistance(pointers, deltaSource)\n    iEvent.box = pointerUtils.touchBBox(pointers)\n    iEvent.scale = iEvent.distance / interaction.gesture.startDistance\n    iEvent.angle = pointerUtils.touchAngle(pointers, deltaSource)\n\n    iEvent.ds = iEvent.scale - interaction.gesture.scale\n    iEvent.da = iEvent.angle - interaction.gesture.angle\n  }\n\n  interaction.gesture.distance = iEvent.distance\n  interaction.gesture.angle = iEvent.angle\n\n  if (is.number(iEvent.scale) && iEvent.scale !== Infinity && !isNaN(iEvent.scale)) {\n    interaction.gesture.scale = iEvent.scale\n  }\n}\n\nconst gesture: Plugin = {\n  id: 'actions/gesture',\n  before: ['actions/drag', 'actions/resize'],\n  install,\n  listeners: {\n    'interactions:action-start': updateGestureProps,\n    'interactions:action-move': updateGestureProps,\n    'interactions:action-end': updateGestureProps,\n\n    'interactions:new': ({ interaction }) => {\n      interaction.gesture = {\n        angle: 0,\n        distance: 0,\n        scale: 1,\n        startAngle: 0,\n        startDistance: 0,\n      }\n    },\n\n    'auto-start:check': (arg) => {\n      if (arg.interaction.pointers.length < 2) {\n        return undefined\n      }\n\n      const gestureOptions = arg.interactable.options.gesture\n\n      if (!(gestureOptions && gestureOptions.enabled)) {\n        return undefined\n      }\n\n      arg.action = { name: 'gesture' }\n\n      return false\n    },\n  },\n\n  defaults: {},\n\n  getCursor() {\n    return ''\n  },\n\n  filterEventType: (type: string) => type.search('gesture') === 0,\n}\n\nexport default gesture\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { EventPhase, InteractEvent } from '@interactjs/core/InteractEvent'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type {\n  ActionName,\n  ActionProps,\n  EdgeOptions,\n  FullRect,\n  ListenersArg,\n  OrBoolean,\n  Point,\n  Rect,\n} from '@interactjs/core/types'\nimport * as dom from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nexport type EdgeName = 'top' | 'left' | 'bottom' | 'right'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    resizable(): ResizableOptions\n    resizable(options: Partial<OrBoolean<ResizableOptions>> | boolean): this\n    /**\n     * ```js\n     * interact(element).resizable({\n     *   onstart: function (event) {},\n     *   onmove : function (event) {},\n     *   onend  : function (event) {},\n     *\n     *   edges: {\n     *     top   : true,       // Use pointer coords to check for resize.\n     *     left  : false,      // Disable resizing from left edge.\n     *     bottom: '.resize-s',// Resize if pointer target matches selector\n     *     right : handleEl    // Resize if pointer target is the given Element\n     *   },\n     *\n     *   // Width and height can be adjusted independently. When `true`, width and\n     *   // height are adjusted at a 1:1 ratio.\n     *   square: false,\n     *\n     *   // Width and height can be adjusted independently. When `true`, width and\n     *   // height maintain the aspect ratio they had when resizing started.\n     *   preserveAspectRatio: false,\n     *\n     *   // a value of 'none' will limit the resize rect to a minimum of 0x0\n     *   // 'negate' will allow the rect to have negative width/height\n     *   // 'reposition' will keep the width/height positive by swapping\n     *   // the top and bottom edges and/or swapping the left and right edges\n     *   invert: 'none' || 'negate' || 'reposition'\n     *\n     *   // limit multiple resizes.\n     *   // See the explanation in the {@link Interactable.draggable} example\n     *   max: Infinity,\n     *   maxPerElement: 1,\n     * })\n     *\n     * var isResizeable = interact(element).resizable()\n     * ```\n     *\n     * Gets or sets whether resize actions can be performed on the target\n     *\n     * @param options - true/false or An object with event\n     * listeners to be fired on resize events (object makes the Interactable\n     * resizable)\n     * @returns A boolean indicating if this can be the\n     * target of resize elements, or this Interactable\n     */\n    resizable(options?: Partial<OrBoolean<ResizableOptions>> | boolean): this | ResizableOptions\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction<T extends ActionName | null = ActionName> {\n    resizeAxes: 'x' | 'y' | 'xy'\n    styleCursor(newValue: boolean): this\n    styleCursor(): boolean\n    resizeStartAspectRatio: number\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    resize: ResizableOptions\n  }\n}\n\ndeclare module '@interactjs/core/types' {\n  interface ActionMap {\n    resize?: typeof resize\n  }\n}\n\nexport interface ResizableOptions extends PerActionDefaults {\n  square?: boolean\n  preserveAspectRatio?: boolean\n  edges?: EdgeOptions | null\n  axis?: 'x' | 'y' | 'xy' // deprecated\n  invert?: 'none' | 'negate' | 'reposition'\n  margin?: number\n  squareResize?: boolean\n  oninertiastart?: ListenersArg\n  onstart?: ListenersArg\n  onmove?: ListenersArg\n  onend?: ListenersArg\n}\n\nexport interface ResizeEvent<P extends EventPhase = EventPhase> extends InteractEvent<'resize', P> {\n  deltaRect?: FullRect\n  edges?: ActionProps['edges']\n}\n\nfunction install(scope: Scope) {\n  const {\n    actions,\n    browser,\n    Interactable, // tslint:disable-line no-shadowed-variable\n    defaults,\n  } = scope\n\n  // Less Precision with touch input\n\n  resize.cursors = initCursors(browser)\n  resize.defaultMargin = browser.supportsTouch || browser.supportsPointerEvent ? 20 : 10\n\n  Interactable.prototype.resizable = function (this: Interactable, options: ResizableOptions | boolean) {\n    return resizable(this, options, scope)\n  } as Interactable['resizable']\n\n  actions.map.resize = resize\n  actions.methodDict.resize = 'resizable'\n\n  defaults.actions.resize = resize.defaults\n}\n\nfunction resizeChecker(arg) {\n  const { interaction, interactable, element, rect, buttons } = arg\n\n  if (!rect) {\n    return undefined\n  }\n\n  const page = extend({}, interaction.coords.cur.page)\n  const resizeOptions = interactable.options.resize\n\n  if (\n    !(resizeOptions && resizeOptions.enabled) ||\n    // check mouseButton setting if the pointer is down\n    (interaction.pointerIsDown &&\n      /mouse|pointer/.test(interaction.pointerType) &&\n      (buttons & resizeOptions.mouseButtons) === 0)\n  ) {\n    return undefined\n  }\n\n  // if using resize.edges\n  if (is.object(resizeOptions.edges)) {\n    const resizeEdges = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false,\n    }\n\n    for (const edge in resizeEdges) {\n      resizeEdges[edge] = checkResizeEdge(\n        edge,\n        resizeOptions.edges[edge],\n        page,\n        interaction._latestPointer.eventTarget,\n        element,\n        rect,\n        resizeOptions.margin || resize.defaultMargin,\n      )\n    }\n\n    resizeEdges.left = resizeEdges.left && !resizeEdges.right\n    resizeEdges.top = resizeEdges.top && !resizeEdges.bottom\n\n    if (resizeEdges.left || resizeEdges.right || resizeEdges.top || resizeEdges.bottom) {\n      arg.action = {\n        name: 'resize',\n        edges: resizeEdges,\n      }\n    }\n  } else {\n    const right = resizeOptions.axis !== 'y' && page.x > rect.right - resize.defaultMargin\n    const bottom = resizeOptions.axis !== 'x' && page.y > rect.bottom - resize.defaultMargin\n\n    if (right || bottom) {\n      arg.action = {\n        name: 'resize',\n        axes: (right ? 'x' : '') + (bottom ? 'y' : ''),\n      }\n    }\n  }\n\n  return arg.action ? false : undefined\n}\n\nfunction resizable(interactable: Interactable, options: OrBoolean<ResizableOptions> | boolean, scope: Scope) {\n  if (is.object(options)) {\n    interactable.options.resize.enabled = options.enabled !== false\n    interactable.setPerAction('resize', options)\n    interactable.setOnEvents('resize', options)\n\n    if (is.string(options.axis) && /^x$|^y$|^xy$/.test(options.axis)) {\n      interactable.options.resize.axis = options.axis\n    } else if (options.axis === null) {\n      interactable.options.resize.axis = scope.defaults.actions.resize.axis\n    }\n\n    if (is.bool(options.preserveAspectRatio)) {\n      interactable.options.resize.preserveAspectRatio = options.preserveAspectRatio\n    } else if (is.bool(options.square)) {\n      interactable.options.resize.square = options.square\n    }\n\n    return interactable\n  }\n  if (is.bool(options)) {\n    interactable.options.resize.enabled = options\n\n    return interactable\n  }\n  return interactable.options.resize\n}\n\nfunction checkResizeEdge(\n  name: string,\n  value: any,\n  page: Point,\n  element: Node,\n  interactableElement: Element,\n  rect: Rect,\n  margin: number,\n) {\n  // false, '', undefined, null\n  if (!value) {\n    return false\n  }\n\n  // true value, use pointer coords and element rect\n  if (value === true) {\n    // if dimensions are negative, \"switch\" edges\n    const width = is.number(rect.width) ? rect.width : rect.right - rect.left\n    const height = is.number(rect.height) ? rect.height : rect.bottom - rect.top\n\n    // don't use margin greater than half the relevent dimension\n    margin = Math.min(margin, Math.abs((name === 'left' || name === 'right' ? width : height) / 2))\n\n    if (width < 0) {\n      if (name === 'left') {\n        name = 'right'\n      } else if (name === 'right') {\n        name = 'left'\n      }\n    }\n    if (height < 0) {\n      if (name === 'top') {\n        name = 'bottom'\n      } else if (name === 'bottom') {\n        name = 'top'\n      }\n    }\n\n    if (name === 'left') {\n      const edge = width >= 0 ? rect.left : rect.right\n      return page.x < edge + margin\n    }\n    if (name === 'top') {\n      const edge = height >= 0 ? rect.top : rect.bottom\n      return page.y < edge + margin\n    }\n\n    if (name === 'right') {\n      return page.x > (width >= 0 ? rect.right : rect.left) - margin\n    }\n    if (name === 'bottom') {\n      return page.y > (height >= 0 ? rect.bottom : rect.top) - margin\n    }\n  }\n\n  // the remaining checks require an element\n  if (!is.element(element)) {\n    return false\n  }\n\n  return is.element(value)\n    ? // the value is an element to use as a resize handle\n      value === element\n    : // otherwise check if element matches value as selector\n      dom.matchesUpTo(element, value, interactableElement)\n}\n\n/* eslint-disable multiline-ternary */\n// eslint-disable-next-line @typescript-eslint/consistent-type-imports\nfunction initCursors(browser: typeof import('@interactjs/utils/browser').default) {\n  return browser.isIe9\n    ? {\n        x: 'e-resize',\n        y: 's-resize',\n        xy: 'se-resize',\n\n        top: 'n-resize',\n        left: 'w-resize',\n        bottom: 's-resize',\n        right: 'e-resize',\n        topleft: 'se-resize',\n        bottomright: 'se-resize',\n        topright: 'ne-resize',\n        bottomleft: 'ne-resize',\n      }\n    : {\n        x: 'ew-resize',\n        y: 'ns-resize',\n        xy: 'nwse-resize',\n\n        top: 'ns-resize',\n        left: 'ew-resize',\n        bottom: 'ns-resize',\n        right: 'ew-resize',\n        topleft: 'nwse-resize',\n        bottomright: 'nwse-resize',\n        topright: 'nesw-resize',\n        bottomleft: 'nesw-resize',\n      }\n}\n/* eslint-enable multiline-ternary */\n\nfunction start({ iEvent, interaction }: { iEvent: InteractEvent<any, any>; interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) {\n    return\n  }\n\n  const resizeEvent = iEvent as ResizeEvent\n  const rect = interaction.rect\n\n  interaction._rects = {\n    start: extend({}, rect),\n    corrected: extend({}, rect),\n    previous: extend({}, rect),\n    delta: {\n      left: 0,\n      right: 0,\n      width: 0,\n      top: 0,\n      bottom: 0,\n      height: 0,\n    },\n  }\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = interaction._rects.corrected\n  resizeEvent.deltaRect = interaction._rects.delta\n}\n\nfunction move({ iEvent, interaction }: { iEvent: InteractEvent<any, any>; interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) return\n\n  const resizeEvent = iEvent as ResizeEvent\n  const resizeOptions = interaction.interactable.options.resize\n  const invert = resizeOptions.invert\n  const invertible = invert === 'reposition' || invert === 'negate'\n\n  const current = interaction.rect\n  const { start: startRect, corrected, delta: deltaRect, previous } = interaction._rects\n\n  extend(previous, corrected)\n\n  if (invertible) {\n    // if invertible, copy the current rect\n    extend(corrected, current)\n\n    if (invert === 'reposition') {\n      // swap edge values if necessary to keep width/height positive\n      if (corrected.top > corrected.bottom) {\n        const swap = corrected.top\n\n        corrected.top = corrected.bottom\n        corrected.bottom = swap\n      }\n      if (corrected.left > corrected.right) {\n        const swap = corrected.left\n\n        corrected.left = corrected.right\n        corrected.right = swap\n      }\n    }\n  } else {\n    // if not invertible, restrict to minimum of 0x0 rect\n    corrected.top = Math.min(current.top, startRect.bottom)\n    corrected.bottom = Math.max(current.bottom, startRect.top)\n    corrected.left = Math.min(current.left, startRect.right)\n    corrected.right = Math.max(current.right, startRect.left)\n  }\n\n  corrected.width = corrected.right - corrected.left\n  corrected.height = corrected.bottom - corrected.top\n\n  for (const edge in corrected) {\n    deltaRect[edge] = corrected[edge] - previous[edge]\n  }\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = corrected\n  resizeEvent.deltaRect = deltaRect\n}\n\nfunction end({ iEvent, interaction }: { iEvent: InteractEvent<any, any>; interaction: Interaction }) {\n  if (interaction.prepared.name !== 'resize' || !interaction.prepared.edges) return\n\n  const resizeEvent = iEvent as ResizeEvent\n\n  resizeEvent.edges = interaction.prepared.edges\n  resizeEvent.rect = interaction._rects.corrected\n  resizeEvent.deltaRect = interaction._rects.delta\n}\n\nfunction updateEventAxes({\n  iEvent,\n  interaction,\n}: {\n  iEvent: InteractEvent<any, any>\n  interaction: Interaction\n}) {\n  if (interaction.prepared.name !== 'resize' || !interaction.resizeAxes) return\n\n  const options = interaction.interactable.options\n  const resizeEvent = iEvent as ResizeEvent\n\n  if (options.resize.square) {\n    if (interaction.resizeAxes === 'y') {\n      resizeEvent.delta.x = resizeEvent.delta.y\n    } else {\n      resizeEvent.delta.y = resizeEvent.delta.x\n    }\n    resizeEvent.axes = 'xy'\n  } else {\n    resizeEvent.axes = interaction.resizeAxes\n\n    if (interaction.resizeAxes === 'x') {\n      resizeEvent.delta.y = 0\n    } else if (interaction.resizeAxes === 'y') {\n      resizeEvent.delta.x = 0\n    }\n  }\n}\n\nconst resize: Plugin = {\n  id: 'actions/resize',\n  before: ['actions/drag'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.resizeAxes = 'xy'\n    },\n\n    'interactions:action-start': (arg) => {\n      start(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-move': (arg) => {\n      move(arg)\n      updateEventAxes(arg)\n    },\n    'interactions:action-end': end,\n    'auto-start:check': resizeChecker,\n  },\n\n  defaults: {\n    square: false,\n    preserveAspectRatio: false,\n    axis: 'xy',\n\n    // use default margin\n    margin: NaN,\n\n    // object with props left, right, top, bottom which are\n    // true/false values to resize when the pointer is over that edge,\n    // CSS selectors to match the handles for each direction\n    // or the Elements for each handle\n    edges: null,\n\n    // a value of 'none' will limit the resize rect to a minimum of 0x0\n    // 'negate' will alow the rect to have negative width/height\n    // 'reposition' will keep the width/height positive by swapping\n    // the top and bottom edges and/or swapping the left and right edges\n    invert: 'none',\n  } as ResizableOptions,\n\n  cursors: null as ReturnType<typeof initCursors>,\n\n  getCursor({ edges, axis, name }: ActionProps) {\n    const cursors = resize.cursors\n    let result: string = null\n\n    if (axis) {\n      result = cursors[name + axis]\n    } else if (edges) {\n      let cursorKey = ''\n\n      for (const edge of ['top', 'bottom', 'left', 'right']) {\n        if (edges[edge]) {\n          cursorKey += edge\n        }\n      }\n\n      result = cursors[cursorKey]\n    }\n\n    return result\n  },\n\n  filterEventType: (type: string) => type.search('resize') === 0,\n\n  defaultMargin: null as number,\n}\n\nexport default resize\n", "let lastTime = 0\nlet request: typeof requestAnimationFrame\nlet cancel: typeof cancelAnimationFrame\n\nfunction init(global: Window | typeof globalThis) {\n  request = global.requestAnimationFrame\n  cancel = global.cancelAnimationFrame\n\n  if (!request) {\n    const vendors = ['ms', 'moz', 'webkit', 'o']\n\n    for (const vendor of vendors) {\n      request = global[`${vendor}RequestAnimationFrame` as 'requestAnimationFrame']\n      cancel =\n        global[`${vendor}CancelAnimationFrame` as 'cancelAnimationFrame'] ||\n        global[`${vendor}CancelRequestAnimationFrame` as 'cancelAnimationFrame']\n    }\n  }\n\n  request = request && request.bind(global)\n  cancel = cancel && cancel.bind(global)\n\n  if (!request) {\n    request = (callback) => {\n      const currTime = Date.now()\n      const timeToCall = Math.max(0, 16 - (currTime - lastTime))\n      const token = global.setTimeout(() => {\n        // eslint-disable-next-line n/no-callback-literal\n        callback(currTime + timeToCall)\n      }, timeToCall)\n\n      lastTime = currTime + timeToCall\n      return token as any\n    }\n\n    cancel = (token) => clearTimeout(token)\n  }\n}\n\nexport default {\n  request: (callback: FrameRequestCallback) => request(callback),\n  cancel: (token: number) => cancel(token),\n  init,\n}\n", "import type { Scope } from '@interactjs/core/scope'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './drag/plugin'\nimport './drop/plugin'\nimport './gesture/plugin'\nimport './resize/plugin'\n\nimport drag from './drag/plugin'\nimport drop from './drop/plugin'\nimport gesture from './gesture/plugin'\nimport resize from './resize/plugin'\n/* eslint-enable import/no-duplicates */\n\nexport default {\n  id: 'actions',\n  install(scope: Scope) {\n    scope.usePlugin(gesture)\n    scope.usePlugin(resize)\n    scope.usePlugin(drag)\n    scope.usePlugin(drop)\n  },\n}\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, PointerType } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport { getStringOptionResult } from '@interactjs/utils/rect'\nimport { getWindow } from '@interactjs/utils/window'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoScroll: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoScroll?: typeof autoScroll\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    autoScroll?: AutoScrollOptions\n  }\n}\n\nexport interface AutoScrollOptions {\n  container?: Window | HTMLElement | string\n  margin?: number\n  distance?: number\n  interval?: number\n  speed?: number\n  enabled?: boolean\n}\n\nfunction install(scope: Scope) {\n  const { defaults, actions } = scope\n\n  scope.autoScroll = autoScroll\n  autoScroll.now = () => scope.now()\n\n  actions.phaselessTypes.autoscroll = true\n  defaults.perAction.autoScroll = autoScroll.defaults\n}\n\nconst autoScroll = {\n  defaults: {\n    enabled: false,\n    margin: 60,\n\n    // the item that is scrolled (Window or HTMLElement)\n    container: null as AutoScrollOptions['container'],\n\n    // the scroll speed in pixels per second\n    speed: 300,\n  } as AutoScrollOptions,\n\n  now: Date.now,\n\n  interaction: null as Interaction<ActionName> | null,\n  i: 0, // the handle returned by window.setInterval\n\n  // Direction each pulse is to scroll in\n  x: 0,\n  y: 0,\n\n  isScrolling: false,\n  prevTime: 0,\n  margin: 0,\n  speed: 0,\n\n  start(interaction: Interaction) {\n    autoScroll.isScrolling = true\n    raf.cancel(autoScroll.i)\n\n    interaction.autoScroll = autoScroll\n    autoScroll.interaction = interaction\n    autoScroll.prevTime = autoScroll.now()\n    autoScroll.i = raf.request(autoScroll.scroll)\n  },\n\n  stop() {\n    autoScroll.isScrolling = false\n    if (autoScroll.interaction) {\n      autoScroll.interaction.autoScroll = null\n    }\n    raf.cancel(autoScroll.i)\n  },\n\n  // scroll the window by the values in scroll.x/y\n  scroll() {\n    const { interaction } = autoScroll\n    const { interactable, element } = interaction\n    const actionName = interaction.prepared.name\n    const options = interactable.options[actionName].autoScroll\n    const container = getContainer(options.container, interactable, element)\n    const now = autoScroll.now()\n    // change in time in seconds\n    const dt = (now - autoScroll.prevTime) / 1000\n    // displacement\n    const s = options.speed * dt\n\n    if (s >= 1) {\n      const scrollBy = {\n        x: autoScroll.x * s,\n        y: autoScroll.y * s,\n      }\n\n      if (scrollBy.x || scrollBy.y) {\n        const prevScroll = getScroll(container)\n\n        if (is.window(container)) {\n          container.scrollBy(scrollBy.x, scrollBy.y)\n        } else if (container) {\n          container.scrollLeft += scrollBy.x\n          container.scrollTop += scrollBy.y\n        }\n\n        const curScroll = getScroll(container)\n        const delta = {\n          x: curScroll.x - prevScroll.x,\n          y: curScroll.y - prevScroll.y,\n        }\n\n        if (delta.x || delta.y) {\n          interactable.fire({\n            type: 'autoscroll',\n            target: element,\n            interactable,\n            delta,\n            interaction,\n            container,\n          })\n        }\n      }\n\n      autoScroll.prevTime = now\n    }\n\n    if (autoScroll.isScrolling) {\n      raf.cancel(autoScroll.i)\n      autoScroll.i = raf.request(autoScroll.scroll)\n    }\n  },\n  check(interactable: Interactable, actionName: ActionName) {\n    const options = interactable.options\n\n    return options[actionName].autoScroll?.enabled\n  },\n  onInteractionMove<T extends ActionName>({\n    interaction,\n    pointer,\n  }: {\n    interaction: Interaction<T>\n    pointer: PointerType\n  }) {\n    if (\n      !(interaction.interacting() && autoScroll.check(interaction.interactable, interaction.prepared.name))\n    ) {\n      return\n    }\n\n    if (interaction.simulation) {\n      autoScroll.x = autoScroll.y = 0\n      return\n    }\n\n    let top: boolean\n    let right: boolean\n    let bottom: boolean\n    let left: boolean\n\n    const { interactable, element } = interaction\n    const actionName = interaction.prepared.name\n    const options = interactable.options[actionName].autoScroll\n    const container = getContainer(options.container, interactable, element)\n\n    if (is.window(container)) {\n      left = pointer.clientX < autoScroll.margin\n      top = pointer.clientY < autoScroll.margin\n      right = pointer.clientX > container.innerWidth - autoScroll.margin\n      bottom = pointer.clientY > container.innerHeight - autoScroll.margin\n    } else {\n      const rect = domUtils.getElementClientRect(container)\n\n      left = pointer.clientX < rect.left + autoScroll.margin\n      top = pointer.clientY < rect.top + autoScroll.margin\n      right = pointer.clientX > rect.right - autoScroll.margin\n      bottom = pointer.clientY > rect.bottom - autoScroll.margin\n    }\n\n    autoScroll.x = right ? 1 : left ? -1 : 0\n    autoScroll.y = bottom ? 1 : top ? -1 : 0\n\n    if (!autoScroll.isScrolling) {\n      // set the autoScroll properties to those of the target\n      autoScroll.margin = options.margin\n      autoScroll.speed = options.speed\n\n      autoScroll.start(interaction)\n    }\n  },\n}\n\nexport function getContainer(value: any, interactable: Interactable, element: Element) {\n  return (\n    (is.string(value) ? getStringOptionResult(value, interactable, element) : value) || getWindow(element)\n  )\n}\n\nexport function getScroll(container: any) {\n  if (is.window(container)) {\n    container = window.document.body\n  }\n\n  return { x: container.scrollLeft, y: container.scrollTop }\n}\n\nexport function getScrollSize(container: any) {\n  if (is.window(container)) {\n    container = window.document.body\n  }\n\n  return { x: container.scrollWidth, y: container.scrollHeight }\n}\n\nexport function getScrollSizeDelta<T extends ActionName>(\n  {\n    interaction,\n    element,\n  }: {\n    interaction: Partial<Interaction<T>>\n    element: Element\n  },\n  func: any,\n) {\n  const scrollOptions = interaction && interaction.interactable.options[interaction.prepared.name].autoScroll\n\n  if (!scrollOptions || !scrollOptions.enabled) {\n    func()\n    return { x: 0, y: 0 }\n  }\n\n  const scrollContainer = getContainer(scrollOptions.container, interaction.interactable, element)\n\n  const prevSize = getScroll(scrollContainer)\n  func()\n  const curSize = getScroll(scrollContainer)\n\n  return {\n    x: curSize.x - prevSize.x,\n    y: curSize.y - prevSize.y,\n  }\n}\n\nconst autoScrollPlugin: Plugin = {\n  id: 'auto-scroll',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoScroll = null\n    },\n\n    'interactions:destroy': ({ interaction }) => {\n      interaction.autoScroll = null\n      autoScroll.stop()\n      if (autoScroll.interaction) {\n        autoScroll.interaction = null\n      }\n    },\n\n    'interactions:stop': autoScroll.stop,\n\n    'interactions:action-move': (arg: any) => autoScroll.onInteractionMove(arg),\n  },\n}\n\nexport default autoScrollPlugin\n", "import type { ActionName, ActionProps } from '@interactjs/core/types'\n\nimport { window } from './window'\n\nexport function warnOnce<T>(this: T, method: (...args: any[]) => any, message: string) {\n  let warned = false\n\n  return function (this: T) {\n    if (!warned) {\n      ;(window as any).console.warn(message)\n      warned = true\n    }\n\n    return method.apply(this, arguments)\n  }\n}\n\nexport function copyAction<T extends ActionName>(dest: ActionProps<any>, src: ActionProps<T>) {\n  dest.name = src.name\n  dest.axis = src.axis\n  dest.edges = src.edges\n\n  return dest\n}\n\nexport const sign = (n: number) => (n >= 0 ? 1 : -1)\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { ActionProps, PointerType, PointerEventType, Element } from '@interactjs/core/types'\nimport is from '@interactjs/utils/is'\nimport { warnOnce } from '@interactjs/utils/misc'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    getAction: (\n      this: Interactable,\n      pointer: PointerType,\n      event: PointerEventType,\n      interaction: Interaction,\n      element: Element,\n    ) => ActionProps | null\n    styleCursor(newValue: boolean): this\n    styleCursor(): boolean\n    /**\n     * Returns or sets whether the the cursor should be changed depending on the\n     * action that would be performed if the mouse were pressed and dragged.\n     *\n     * @param {boolean} [newValue]\n     * @return {boolean | Interactable} The current setting or this Interactable\n     */\n    styleCursor(newValue?: boolean): boolean | this\n    actionChecker(checker: Function): Interactable\n    actionChecker(): Function\n    /**\n     * ```js\n     * interact('.resize-drag')\n     *   .resizable(true)\n     *   .draggable(true)\n     *   .actionChecker(function (pointer, event, action, interactable, element, interaction) {\n     *\n     *     if (interact.matchesSelector(event.target, '.drag-handle')) {\n     *       // force drag with handle target\n     *       action.name = drag\n     *     }\n     *     else {\n     *       // resize from the top and right edges\n     *       action.name  = 'resize'\n     *       action.edges = { top: true, right: true }\n     *     }\n     *\n     *     return action\n     * })\n     * ```\n     *\n     * Returns or sets the function used to check action to be performed on\n     * pointerDown\n     *\n     * @param checker - A function which takes a pointer event,\n     * defaultAction string, interactable, element and interaction as parameters\n     * and returns an object with name property 'drag' 'resize' or 'gesture' and\n     * optionally an `edges` object with boolean 'top', 'left', 'bottom' and right\n     * props.\n     * @returns The checker function or this Interactable\n     */\n    actionChecker(checker?: Function): Interactable | Function\n    /** @returns This interactable */\n    ignoreFrom(newValue: string | Element | null): Interactable\n    /** @returns The current ignoreFrom value */\n    ignoreFrom(): string | Element | null\n    /**\n     * If the target of the `mousedown`, `pointerdown` or `touchstart` event or any\n     * of it's parents match the given CSS selector or Element, no\n     * drag/resize/gesture is started.\n     *\n     * @deprecated\n     * Don't use this method. Instead set the `ignoreFrom` option for each action\n     * or for `pointerEvents`\n     *\n     * ```js\n     * interact(targett)\n     *   .draggable({\n     *     ignoreFrom: 'input, textarea, a[href]'',\n     *   })\n     *   .pointerEvents({\n     *     ignoreFrom: '[no-pointer]',\n     *   })\n     * ```\n     * Interactable\n     */\n    ignoreFrom(\n      /** a CSS selector string, an Element or `null` to not ignore any elements */\n      newValue?: string | Element | null,\n    ): Interactable | string | Element | null\n    allowFrom(): boolean\n    /**\n     *\n     * A drag/resize/gesture is started only If the target of the `mousedown`,\n     * `pointerdown` or `touchstart` event or any of it's parents match the given\n     * CSS selector or Element.\n     *\n     * @deprecated\n     * Don't use this method. Instead set the `allowFrom` option for each action\n     * or for `pointerEvents`\n     *\n     * ```js\n     * interact(targett)\n     *   .resizable({\n     *     allowFrom: '.resize-handle',\n     *   .pointerEvents({\n     *     allowFrom: '.handle',,\n     *   })\n     * ```\n     *\n     * @param {string | Element | null} [newValue]\n     * @return {string | Element | object} The current allowFrom value or this\n     * Interactable\n     */\n    allowFrom(\n      /** A CSS selector string, an Element or `null` to allow from any element */\n      newValue: string | Element | null,\n    ): Interactable\n  }\n}\n\nfunction install(scope: Scope) {\n  const {\n    Interactable, // tslint:disable-line no-shadowed-variable\n  } = scope\n\n  Interactable.prototype.getAction = function getAction(\n    this: Interactable,\n    pointer: PointerType,\n    event: PointerEventType,\n    interaction: Interaction,\n    element: Element,\n  ): ActionProps {\n    const action = defaultActionChecker(this, event, interaction, element, scope)\n\n    if (this.options.actionChecker) {\n      return this.options.actionChecker(pointer, event, action, this, element, interaction)\n    }\n\n    return action\n  }\n\n  Interactable.prototype.ignoreFrom = warnOnce(function (this: Interactable, newValue) {\n    return this._backCompatOption('ignoreFrom', newValue)\n  }, 'Interactable.ignoreFrom() has been deprecated. Use Interactble.draggable({ignoreFrom: newValue}).')\n\n  Interactable.prototype.allowFrom = warnOnce(function (this: Interactable, newValue) {\n    return this._backCompatOption('allowFrom', newValue)\n  }, 'Interactable.allowFrom() has been deprecated. Use Interactble.draggable({allowFrom: newValue}).')\n\n  Interactable.prototype.actionChecker = actionChecker\n\n  Interactable.prototype.styleCursor = styleCursor\n}\n\nfunction defaultActionChecker(\n  interactable: Interactable,\n  event: PointerEventType,\n  interaction: Interaction,\n  element: Element,\n  scope: Scope,\n) {\n  const rect = interactable.getRect(element)\n  const buttons =\n    (event as MouseEvent).buttons ||\n    {\n      0: 1,\n      1: 4,\n      3: 8,\n      4: 16,\n    }[(event as MouseEvent).button as 0 | 1 | 3 | 4]\n  const arg = {\n    action: null,\n    interactable,\n    interaction,\n    element,\n    rect,\n    buttons,\n  }\n\n  scope.fire('auto-start:check', arg)\n\n  return arg.action\n}\n\nfunction styleCursor(this: Interactable, newValue?: boolean) {\n  if (is.bool(newValue)) {\n    this.options.styleCursor = newValue\n\n    return this\n  }\n\n  if (newValue === null) {\n    delete this.options.styleCursor\n\n    return this\n  }\n\n  return this.options.styleCursor\n}\n\nfunction actionChecker(this: Interactable, checker?: any) {\n  if (is.func(checker)) {\n    this.options.actionChecker = checker\n\n    return this\n  }\n\n  if (checker === null) {\n    delete this.options.actionChecker\n\n    return this\n  }\n\n  return this.options.actionChecker\n}\n\nexport default {\n  id: 'auto-start/interactableMethods',\n  install,\n}\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type {\n  CursorChecker,\n  PointerType,\n  PointerEventType,\n  Element,\n  ActionName,\n  ActionProps,\n} from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport { copyAction } from '@interactjs/utils/misc'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './InteractableMethods'\nimport InteractableMethods from './InteractableMethods'\n/* eslint-enable import/no-duplicates */\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    /**\n     * Returns or sets the maximum number of concurrent interactions allowed.  By\n     * default only 1 interaction is allowed at a time (for backwards\n     * compatibility). To allow multiple interactions on the same Interactables and\n     * elements, you need to enable it in the draggable, resizable and gesturable\n     * `'max'` and `'maxPerElement'` options.\n     *\n     * @param {number} [newValue] Any number. newValue <= 0 means no interactions.\n     */\n    maxInteractions: (newValue: any) => any\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    autoStart: AutoStart\n  }\n\n  interface SignalArgs {\n    'autoStart:before-start': Omit<SignalArgs['interactions:move'], 'interaction'> & {\n      interaction: Interaction<ActionName>\n    }\n    'autoStart:prepared': { interaction: Interaction }\n    'auto-start:check': CheckSignalArg\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface BaseDefaults {\n    actionChecker?: any\n    cursorChecker?: any\n    styleCursor?: any\n  }\n\n  interface PerActionDefaults {\n    manualStart?: boolean\n    max?: number\n    maxPerElement?: number\n    allowFrom?: string | Element\n    ignoreFrom?: string | Element\n    cursorChecker?: CursorChecker\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    // TODO: docst\n    mouseButtons?: 0 | 1 | 2 | 4 | 8 | 16\n  }\n}\n\ninterface CheckSignalArg {\n  interactable: Interactable\n  interaction: Interaction\n  element: Element\n  action: ActionProps<ActionName>\n  buttons: number\n}\n\nexport interface AutoStart {\n  // Allow this many interactions to happen simultaneously\n  maxInteractions: number\n  withinInteractionLimit: typeof withinInteractionLimit\n  cursorElement: Element\n}\n\nfunction install(scope: Scope) {\n  const { interactStatic: interact, defaults } = scope\n\n  scope.usePlugin(InteractableMethods)\n\n  defaults.base.actionChecker = null\n  defaults.base.styleCursor = true\n\n  extend(defaults.perAction, {\n    manualStart: false,\n    max: Infinity,\n    maxPerElement: 1,\n    allowFrom: null,\n    ignoreFrom: null,\n\n    // only allow left button by default\n    // see https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/buttons#Return_value\n    mouseButtons: 1,\n  })\n\n  interact.maxInteractions = (newValue: number) => maxInteractions(newValue, scope)\n\n  scope.autoStart = {\n    // Allow this many interactions to happen simultaneously\n    maxInteractions: Infinity,\n    withinInteractionLimit,\n    cursorElement: null,\n  }\n}\n\nfunction prepareOnDown(\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:down'],\n  scope: Scope,\n) {\n  if (interaction.interacting()) return\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget, scope)\n  prepare(interaction, actionInfo, scope)\n}\n\nfunction prepareOnMove(\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:move'],\n  scope: Scope,\n) {\n  if (interaction.pointerType !== 'mouse' || interaction.pointerIsDown || interaction.interacting()) return\n\n  const actionInfo = getActionInfo(interaction, pointer, event, eventTarget as Element, scope)\n  prepare(interaction, actionInfo, scope)\n}\n\nfunction startOnMove(arg: SignalArgs['interactions:move'], scope: Scope) {\n  const { interaction } = arg\n\n  if (\n    !interaction.pointerIsDown ||\n    interaction.interacting() ||\n    !interaction.pointerWasMoved ||\n    !interaction.prepared.name\n  ) {\n    return\n  }\n\n  scope.fire('autoStart:before-start', arg)\n\n  const { interactable } = interaction\n  const actionName = (interaction as Interaction<ActionName>).prepared.name\n\n  if (actionName && interactable) {\n    // check manualStart and interaction limit\n    if (\n      interactable.options[actionName].manualStart ||\n      !withinInteractionLimit(interactable, interaction.element, interaction.prepared, scope)\n    ) {\n      interaction.stop()\n    } else {\n      interaction.start(interaction.prepared, interactable, interaction.element)\n      setInteractionCursor(interaction, scope)\n    }\n  }\n}\n\nfunction clearCursorOnStop({ interaction }: { interaction: Interaction }, scope: Scope) {\n  const { interactable } = interaction\n\n  if (interactable && interactable.options.styleCursor) {\n    setCursor(interaction.element, '', scope)\n  }\n}\n\n// Check if the current interactable supports the action.\n// If so, return the validated action. Otherwise, return null\nfunction validateAction<T extends ActionName>(\n  action: ActionProps<T>,\n  interactable: Interactable,\n  element: Element,\n  eventTarget: Node,\n  scope: Scope,\n) {\n  if (\n    interactable.testIgnoreAllow(interactable.options[action.name], element, eventTarget) &&\n    interactable.options[action.name].enabled &&\n    withinInteractionLimit(interactable, element, action, scope)\n  ) {\n    return action\n  }\n\n  return null\n}\n\nfunction validateMatches(\n  interaction: Interaction,\n  pointer: PointerType,\n  event: PointerEventType,\n  matches: Interactable[],\n  matchElements: Element[],\n  eventTarget: Node,\n  scope: Scope,\n) {\n  for (let i = 0, len = matches.length; i < len; i++) {\n    const match = matches[i]\n    const matchElement = matchElements[i]\n    const matchAction = match.getAction(pointer, event, interaction, matchElement)\n\n    if (!matchAction) {\n      continue\n    }\n\n    const action = validateAction<ActionName>(matchAction, match, matchElement, eventTarget, scope)\n\n    if (action) {\n      return {\n        action,\n        interactable: match,\n        element: matchElement,\n      }\n    }\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction getActionInfo(\n  interaction: Interaction,\n  pointer: PointerType,\n  event: PointerEventType,\n  eventTarget: Node,\n  scope: Scope,\n) {\n  let matches: Interactable[] = []\n  let matchElements: Element[] = []\n\n  let element = eventTarget as Element\n\n  function pushMatches(interactable: Interactable) {\n    matches.push(interactable)\n    matchElements.push(element)\n  }\n\n  while (is.element(element)) {\n    matches = []\n    matchElements = []\n\n    scope.interactables.forEachMatch(element, pushMatches)\n\n    const actionInfo = validateMatches(\n      interaction,\n      pointer,\n      event,\n      matches,\n      matchElements,\n      eventTarget,\n      scope,\n    )\n\n    if (actionInfo.action && !actionInfo.interactable.options[actionInfo.action.name].manualStart) {\n      return actionInfo\n    }\n\n    element = domUtils.parentNode(element) as Element\n  }\n\n  return { action: null, interactable: null, element: null }\n}\n\nfunction prepare(\n  interaction: Interaction,\n  {\n    action,\n    interactable,\n    element,\n  }: {\n    action: ActionProps<any>\n    interactable: Interactable\n    element: Element\n  },\n  scope: Scope,\n) {\n  action = action || { name: null }\n\n  interaction.interactable = interactable\n  interaction.element = element\n  copyAction(interaction.prepared, action)\n\n  interaction.rect = interactable && action.name ? interactable.getRect(element) : null\n\n  setInteractionCursor(interaction, scope)\n\n  scope.fire('autoStart:prepared', { interaction })\n}\n\nfunction withinInteractionLimit<T extends ActionName>(\n  interactable: Interactable,\n  element: Element,\n  action: ActionProps<T>,\n  scope: Scope,\n) {\n  const options = interactable.options\n  const maxActions = options[action.name].max\n  const maxPerElement = options[action.name].maxPerElement\n  const autoStartMax = scope.autoStart.maxInteractions\n  let activeInteractions = 0\n  let interactableCount = 0\n  let elementCount = 0\n\n  // no actions if any of these values == 0\n  if (!(maxActions && maxPerElement && autoStartMax)) {\n    return false\n  }\n\n  for (const interaction of scope.interactions.list) {\n    const otherAction = interaction.prepared.name\n\n    if (!interaction.interacting()) {\n      continue\n    }\n\n    activeInteractions++\n\n    if (activeInteractions >= autoStartMax) {\n      return false\n    }\n\n    if (interaction.interactable !== interactable) {\n      continue\n    }\n\n    interactableCount += otherAction === action.name ? 1 : 0\n\n    if (interactableCount >= maxActions) {\n      return false\n    }\n\n    if (interaction.element === element) {\n      elementCount++\n\n      if (otherAction === action.name && elementCount >= maxPerElement) {\n        return false\n      }\n    }\n  }\n\n  return autoStartMax > 0\n}\n\nfunction maxInteractions(newValue: any, scope: Scope) {\n  if (is.number(newValue)) {\n    scope.autoStart.maxInteractions = newValue\n\n    return this\n  }\n\n  return scope.autoStart.maxInteractions\n}\n\nfunction setCursor(element: Element, cursor: string, scope: Scope) {\n  const { cursorElement: prevCursorElement } = scope.autoStart\n\n  if (prevCursorElement && prevCursorElement !== element) {\n    prevCursorElement.style.cursor = ''\n  }\n\n  element.ownerDocument.documentElement.style.cursor = cursor\n  element.style.cursor = cursor\n  scope.autoStart.cursorElement = cursor ? element : null\n}\n\nfunction setInteractionCursor<T extends ActionName>(interaction: Interaction<T>, scope: Scope) {\n  const { interactable, element, prepared } = interaction\n\n  if (!(interaction.pointerType === 'mouse' && interactable && interactable.options.styleCursor)) {\n    // clear previous target element cursor\n    if (scope.autoStart.cursorElement) {\n      setCursor(scope.autoStart.cursorElement, '', scope)\n    }\n\n    return\n  }\n\n  let cursor = ''\n\n  if (prepared.name) {\n    const cursorChecker = interactable.options[prepared.name].cursorChecker\n\n    if (is.func(cursorChecker)) {\n      cursor = cursorChecker(prepared, interactable, element, interaction._interacting)\n    } else {\n      cursor = scope.actions.map[prepared.name].getCursor(prepared)\n    }\n  }\n\n  setCursor(interaction.element, cursor || '', scope)\n}\n\nconst autoStart: Plugin = {\n  id: 'auto-start/base',\n  before: ['actions'],\n  install,\n  listeners: {\n    'interactions:down': prepareOnDown,\n    'interactions:move': (arg, scope) => {\n      prepareOnMove(arg, scope)\n      startOnMove(arg, scope)\n    },\n    'interactions:stop': clearCursorOnStop,\n  },\n  maxInteractions,\n  withinInteractionLimit,\n  validateAction,\n}\n\nexport default autoStart\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { SignalArgs, Scope } from '@interactjs/core/scope'\nimport type { ActionName, Element } from '@interactjs/core/types'\nimport { parentNode } from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\n\nimport autoStart from './base'\n\nfunction beforeStart({ interaction, eventTarget, dx, dy }: SignalArgs['interactions:move'], scope: Scope) {\n  if (interaction.prepared.name !== 'drag') return\n\n  // check if a drag is in the correct axis\n  const absX = Math.abs(dx)\n  const absY = Math.abs(dy)\n  const targetOptions = interaction.interactable.options.drag\n  const startAxis = targetOptions.startAxis\n  const currentAxis = absX > absY ? 'x' : absX < absY ? 'y' : 'xy'\n\n  interaction.prepared.axis =\n    targetOptions.lockAxis === 'start'\n      ? (currentAxis[0] as 'x' | 'y') // always lock to one axis even if currentAxis === 'xy'\n      : targetOptions.lockAxis\n\n  // if the movement isn't in the startAxis of the interactable\n  if (currentAxis !== 'xy' && startAxis !== 'xy' && startAxis !== currentAxis) {\n    // cancel the prepared action\n    ;(interaction as Interaction<ActionName>).prepared.name = null\n\n    // then try to get a drag from another ineractable\n    let element = eventTarget as Element\n\n    const getDraggable = function (interactable: Interactable): Interactable | void {\n      if (interactable === interaction.interactable) return\n\n      const options = interaction.interactable.options.drag\n\n      if (!options.manualStart && interactable.testIgnoreAllow(options, element, eventTarget)) {\n        const action = interactable.getAction(\n          interaction.downPointer,\n          interaction.downEvent,\n          interaction,\n          element,\n        )\n\n        if (\n          action &&\n          action.name === 'drag' &&\n          checkStartAxis(currentAxis, interactable) &&\n          autoStart.validateAction(action, interactable, element, eventTarget, scope)\n        ) {\n          return interactable\n        }\n      }\n    }\n\n    // check all interactables\n    while (is.element(element)) {\n      const interactable = scope.interactables.forEachMatch(element, getDraggable)\n\n      if (interactable) {\n        ;(interaction as Interaction<ActionName>).prepared.name = 'drag'\n        interaction.interactable = interactable\n        interaction.element = element\n        break\n      }\n\n      element = parentNode(element) as Element\n    }\n  }\n}\n\nfunction checkStartAxis(startAxis: string, interactable: Interactable) {\n  if (!interactable) {\n    return false\n  }\n\n  const thisAxis = interactable.options.drag.startAxis\n\n  return startAxis === 'xy' || thisAxis === 'xy' || thisAxis === startAxis\n}\n\nexport default {\n  id: 'auto-start/dragAxis',\n  listeners: { 'autoStart:before-start': beforeStart },\n}\n", "import type Interaction from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './base'\nimport basePlugin from './base'\n/* eslint-enable */\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    hold?: number\n    delay?: number\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    autoStartHoldTimer?: any\n  }\n}\n\nfunction install(scope: Scope) {\n  const { defaults } = scope\n\n  scope.usePlugin(basePlugin)\n\n  defaults.perAction.hold = 0\n  defaults.perAction.delay = 0\n}\n\nfunction getHoldDuration(interaction: Interaction) {\n  const actionName = interaction.prepared && interaction.prepared.name\n\n  if (!actionName) {\n    return null\n  }\n\n  const options = interaction.interactable.options\n\n  return options[actionName].hold || options[actionName].delay\n}\n\nconst hold: Plugin = {\n  id: 'auto-start/hold',\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.autoStartHoldTimer = null\n    },\n\n    'autoStart:prepared': ({ interaction }) => {\n      const hold = getHoldDuration(interaction)\n\n      if (hold > 0) {\n        interaction.autoStartHoldTimer = setTimeout(() => {\n          interaction.start(interaction.prepared, interaction.interactable, interaction.element)\n        }, hold)\n      }\n    },\n\n    'interactions:move': ({ interaction, duplicate }) => {\n      if (interaction.autoStartHoldTimer && interaction.pointerWasMoved && !duplicate) {\n        clearTimeout(interaction.autoStartHoldTimer)\n        interaction.autoStartHoldTimer = null\n      }\n    },\n\n    // prevent regular down->move autoStart\n    'autoStart:before-start': ({ interaction }) => {\n      const holdDuration = getHoldDuration(interaction)\n\n      if (holdDuration > 0) {\n        interaction.prepared.name = null\n      }\n    },\n  },\n  getHoldDuration,\n}\nexport default hold\n", "import type { Scope } from '@interactjs/core/scope'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './base'\nimport './dragAxis'\nimport './hold'\n\nimport autoStart from './base'\nimport dragAxis from './dragAxis'\nimport hold from './hold'\n/* eslint-enable import/no-duplicates */\n\nexport default {\n  id: 'auto-start',\n  install(scope: Scope) {\n    scope.usePlugin(autoStart)\n    scope.usePlugin(hold)\n    scope.usePlugin(dragAxis)\n  },\n}\n", "import { matchesSelector, nodeContains } from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport { getWindow } from '@interactjs/utils/window'\n\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { PointerEventType } from '@interactjs/core/types'\n\ntype PreventDefaultValue = 'always' | 'never' | 'auto'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    preventDefault(newValue: PreventDefaultValue): this\n    preventDefault(): PreventDefaultValue\n    /**\n     * Returns or sets whether to prevent the browser's default behaviour in\n     * response to pointer events. Can be set to:\n     *  - `'always'` to always prevent\n     *  - `'never'` to never prevent\n     *  - `'auto'` to let interact.js try to determine what would be best\n     *\n     * @param newValue - `'always'`, `'never'` or `'auto'`\n     * @returns The current setting or this Interactable\n     */\n    preventDefault(newValue?: PreventDefaultValue): PreventDefaultValue | this\n    checkAndPreventDefault(event: Event): void\n  }\n}\n\nconst preventDefault = function preventDefault(this: Interactable, newValue?: PreventDefaultValue) {\n  if (/^(always|never|auto)$/.test(newValue)) {\n    this.options.preventDefault = newValue\n    return this\n  }\n\n  if (is.bool(newValue)) {\n    this.options.preventDefault = newValue ? 'always' : 'never'\n    return this\n  }\n\n  return this.options.preventDefault\n} as Interactable['preventDefault']\n\nfunction checkAndPreventDefault(interactable: Interactable, scope: Scope, event: Event) {\n  const setting = interactable.options.preventDefault\n\n  if (setting === 'never') return\n\n  if (setting === 'always') {\n    event.preventDefault()\n    return\n  }\n\n  // setting === 'auto'\n\n  // if the browser supports passive event listeners and isn't running on iOS,\n  // don't preventDefault of touch{start,move} events. CSS touch-action and\n  // user-select should be used instead of calling event.preventDefault().\n  if (scope.events.supportsPassive && /^touch(start|move)$/.test(event.type)) {\n    const doc = getWindow(event.target).document\n    const docOptions = scope.getDocOptions(doc)\n\n    if (!(docOptions && docOptions.events) || docOptions.events.passive !== false) {\n      return\n    }\n  }\n\n  // don't preventDefault of pointerdown events\n  if (/^(mouse|pointer|touch)*(down|start)/i.test(event.type)) {\n    return\n  }\n\n  // don't preventDefault on editable elements\n  if (\n    is.element(event.target) &&\n    matchesSelector(event.target, 'input,select,textarea,[contenteditable=true],[contenteditable=true] *')\n  ) {\n    return\n  }\n\n  event.preventDefault()\n}\n\nfunction onInteractionEvent({ interaction, event }: { interaction: Interaction; event: PointerEventType }) {\n  if (interaction.interactable) {\n    interaction.interactable.checkAndPreventDefault(event as Event)\n  }\n}\n\nexport function install(scope: Scope) {\n  const { Interactable } = scope\n\n  Interactable.prototype.preventDefault = preventDefault\n\n  Interactable.prototype.checkAndPreventDefault = function (event) {\n    return checkAndPreventDefault(this, scope, event)\n  }\n\n  // prevent native HTML5 drag on interact.js target elements\n  scope.interactions.docEvents.push({\n    type: 'dragstart',\n    listener(event) {\n      for (const interaction of scope.interactions.list) {\n        if (\n          interaction.element &&\n          (interaction.element === event.target || nodeContains(interaction.element, event.target))\n        ) {\n          interaction.interactable.checkAndPreventDefault(event)\n          return\n        }\n      }\n    },\n  })\n}\n\nexport default {\n  id: 'core/interactablePreventDefault',\n  install,\n  listeners: ['down', 'move', 'up', 'cancel'].reduce((acc, eventType) => {\n    acc[`interactions:${eventType}`] = onInteractionEvent\n    return acc\n  }, {} as any),\n}\n", "import type { Actions } from '@interactjs/core/types'\n\nexport default function isNonNativeEvent(type: string, actions: Actions) {\n  if (actions.phaselessTypes[type]) {\n    return true\n  }\n\n  for (const name in actions.map) {\n    if (type.indexOf(name) === 0 && type.substr(name.length) in actions.phases) {\n      return true\n    }\n  }\n\n  return false\n}\n", "import * as arr from './arr'\nimport is from './is'\n\n// tslint:disable-next-line ban-types\nexport default function clone<T extends Object>(source: T): Partial<T> {\n  const dest = {} as Partial<T>\n\n  for (const prop in source) {\n    const value = source[prop]\n\n    if (is.plainObject(value)) {\n      dest[prop] = clone(value) as any\n    } else if (is.array(value)) {\n      dest[prop] = arr.from(value) as typeof value\n    } else {\n      dest[prop] = value\n    }\n  }\n\n  return dest\n}\n", "import type { EventPhase } from '@interactjs/core/InteractEvent'\nimport type { Interaction, DoAnyPhaseArg } from '@interactjs/core/Interaction'\nimport type { EdgeOptions, FullRect, Point, Rect } from '@interactjs/core/types'\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type { Modifier, ModifierArg, ModifierState } from './types'\n\nexport interface ModificationResult {\n  delta: Point\n  rectDelta: Rect\n  coords: Point\n  rect: FullRect\n  eventProps: any[]\n  changed: boolean\n}\n\ninterface MethodArg {\n  phase: EventPhase\n  pageCoords: Point\n  rect: FullRect\n  coords: Point\n  preEnd?: boolean\n  skipModifiers?: number\n}\n\nexport class Modification {\n  states: ModifierState[] = []\n  startOffset: Rect = { left: 0, right: 0, top: 0, bottom: 0 }\n  startDelta!: Point\n  result!: ModificationResult\n  endResult!: Point\n  startEdges!: EdgeOptions\n  edges: EdgeOptions\n  readonly interaction: Readonly<Interaction>\n\n  constructor(interaction: Interaction) {\n    this.interaction = interaction\n    this.result = createResult()\n    this.edges = {\n      left: false,\n      right: false,\n      top: false,\n      bottom: false,\n    }\n  }\n\n  start({ phase }: { phase: EventPhase }, pageCoords: Point) {\n    const { interaction } = this\n    const modifierList = getModifierList(interaction)\n    this.prepareStates(modifierList)\n\n    this.startEdges = extend({}, interaction.edges)\n    this.edges = extend({}, this.startEdges)\n    this.startOffset = getRectOffset(interaction.rect, pageCoords)\n    this.startDelta = { x: 0, y: 0 }\n\n    const arg = this.fillArg({\n      phase,\n      pageCoords,\n      preEnd: false,\n    })\n\n    this.result = createResult()\n    this.startAll(arg)\n\n    const result = (this.result = this.setAll(arg))\n\n    return result\n  }\n\n  fillArg(arg: Partial<ModifierArg>) {\n    const { interaction } = this\n\n    arg.interaction = interaction\n    arg.interactable = interaction.interactable\n    arg.element = interaction.element\n    arg.rect ||= interaction.rect\n    arg.edges ||= this.startEdges\n    arg.startOffset = this.startOffset\n\n    return arg as ModifierArg\n  }\n\n  startAll(arg: MethodArg & Partial<ModifierArg>) {\n    for (const state of this.states) {\n      if (state.methods.start) {\n        arg.state = state\n        state.methods.start(arg as ModifierArg)\n      }\n    }\n  }\n\n  setAll(arg: MethodArg & Partial<ModifierArg>): ModificationResult {\n    const { phase, preEnd, skipModifiers, rect: unmodifiedRect, edges: unmodifiedEdges } = arg\n\n    arg.coords = extend({}, arg.pageCoords)\n    arg.rect = extend({}, unmodifiedRect)\n    arg.edges = extend({}, unmodifiedEdges)\n\n    const states = skipModifiers ? this.states.slice(skipModifiers) : this.states\n\n    const newResult = createResult(arg.coords, arg.rect)\n\n    for (const state of states) {\n      const { options } = state\n      const lastModifierCoords = extend({}, arg.coords)\n      let returnValue = null\n\n      if (state.methods?.set && this.shouldDo(options, preEnd, phase)) {\n        arg.state = state\n        returnValue = state.methods.set(arg as ModifierArg<never>)\n\n        rectUtils.addEdges(arg.edges, arg.rect, {\n          x: arg.coords.x - lastModifierCoords.x,\n          y: arg.coords.y - lastModifierCoords.y,\n        })\n      }\n\n      newResult.eventProps.push(returnValue)\n    }\n\n    extend(this.edges, arg.edges)\n\n    newResult.delta.x = arg.coords.x - arg.pageCoords.x\n    newResult.delta.y = arg.coords.y - arg.pageCoords.y\n\n    newResult.rectDelta.left = arg.rect.left - unmodifiedRect.left\n    newResult.rectDelta.right = arg.rect.right - unmodifiedRect.right\n    newResult.rectDelta.top = arg.rect.top - unmodifiedRect.top\n    newResult.rectDelta.bottom = arg.rect.bottom - unmodifiedRect.bottom\n\n    const prevCoords = this.result.coords\n    const prevRect = this.result.rect\n\n    if (prevCoords && prevRect) {\n      const rectChanged =\n        newResult.rect.left !== prevRect.left ||\n        newResult.rect.right !== prevRect.right ||\n        newResult.rect.top !== prevRect.top ||\n        newResult.rect.bottom !== prevRect.bottom\n\n      newResult.changed =\n        rectChanged || prevCoords.x !== newResult.coords.x || prevCoords.y !== newResult.coords.y\n    }\n\n    return newResult\n  }\n\n  applyToInteraction(arg: { phase: EventPhase; rect?: Rect }) {\n    const { interaction } = this\n    const { phase } = arg\n    const curCoords = interaction.coords.cur\n    const startCoords = interaction.coords.start\n    const { result, startDelta } = this\n    const curDelta = result.delta\n\n    if (phase === 'start') {\n      extend(this.startDelta, result.delta)\n    }\n\n    for (const [coordsSet, delta] of [\n      [startCoords, startDelta],\n      [curCoords, curDelta],\n    ] as const) {\n      coordsSet.page.x += delta.x\n      coordsSet.page.y += delta.y\n      coordsSet.client.x += delta.x\n      coordsSet.client.y += delta.y\n    }\n\n    const { rectDelta } = this.result\n    const rect = arg.rect || interaction.rect\n\n    rect.left += rectDelta.left\n    rect.right += rectDelta.right\n    rect.top += rectDelta.top\n    rect.bottom += rectDelta.bottom\n\n    rect.width = rect.right - rect.left\n    rect.height = rect.bottom - rect.top\n  }\n\n  setAndApply(\n    arg: Partial<DoAnyPhaseArg> & {\n      phase: EventPhase\n      preEnd?: boolean\n      skipModifiers?: number\n      modifiedCoords?: Point\n    },\n  ): void | false {\n    const { interaction } = this\n    const { phase, preEnd, skipModifiers } = arg\n\n    const result = this.setAll(\n      this.fillArg({\n        preEnd,\n        phase,\n        pageCoords: arg.modifiedCoords || interaction.coords.cur.page,\n      }),\n    )\n\n    this.result = result\n\n    // don't fire an action move if a modifier would keep the event in the same\n    // cordinates as before\n    if (\n      !result.changed &&\n      (!skipModifiers || skipModifiers < this.states.length) &&\n      interaction.interacting()\n    ) {\n      return false\n    }\n\n    if (arg.modifiedCoords) {\n      const { page } = interaction.coords.cur\n      const adjustment = {\n        x: arg.modifiedCoords.x - page.x,\n        y: arg.modifiedCoords.y - page.y,\n      }\n\n      result.coords.x += adjustment.x\n      result.coords.y += adjustment.y\n      result.delta.x += adjustment.x\n      result.delta.y += adjustment.y\n    }\n\n    this.applyToInteraction(arg)\n  }\n\n  beforeEnd(arg: Omit<DoAnyPhaseArg, 'iEvent'> & { state?: ModifierState }): void | false {\n    const { interaction, event } = arg\n    const states = this.states\n\n    if (!states || !states.length) {\n      return\n    }\n\n    let doPreend = false\n\n    for (const state of states) {\n      arg.state = state\n      const { options, methods } = state\n\n      const endPosition = methods.beforeEnd && methods.beforeEnd(arg as unknown as ModifierArg)\n\n      if (endPosition) {\n        this.endResult = endPosition\n        return false\n      }\n\n      doPreend = doPreend || (!doPreend && this.shouldDo(options, true, arg.phase, true))\n    }\n\n    if (doPreend) {\n      // trigger a final modified move before ending\n      interaction.move({ event, preEnd: true })\n    }\n  }\n\n  stop(arg: { interaction: Interaction }) {\n    const { interaction } = arg\n\n    if (!this.states || !this.states.length) {\n      return\n    }\n\n    const modifierArg: Partial<ModifierArg> = extend(\n      {\n        states: this.states,\n        interactable: interaction.interactable,\n        element: interaction.element,\n        rect: null,\n      },\n      arg,\n    )\n\n    this.fillArg(modifierArg)\n\n    for (const state of this.states) {\n      modifierArg.state = state\n\n      if (state.methods.stop) {\n        state.methods.stop(modifierArg as ModifierArg)\n      }\n    }\n\n    this.states = null\n    this.endResult = null\n  }\n\n  prepareStates(modifierList: Modifier[]) {\n    this.states = []\n\n    for (let index = 0; index < modifierList.length; index++) {\n      const { options, methods, name } = modifierList[index]\n\n      this.states.push({\n        options,\n        methods,\n        index,\n        name,\n      })\n    }\n\n    return this.states\n  }\n\n  restoreInteractionCoords({ interaction: { coords, rect, modification } }: { interaction: Interaction }) {\n    if (!modification.result) return\n\n    const { startDelta } = modification\n    const { delta: curDelta, rectDelta } = modification.result\n\n    const coordsAndDeltas = [\n      [coords.start, startDelta],\n      [coords.cur, curDelta],\n    ]\n\n    for (const [coordsSet, delta] of coordsAndDeltas as any) {\n      coordsSet.page.x -= delta.x\n      coordsSet.page.y -= delta.y\n      coordsSet.client.x -= delta.x\n      coordsSet.client.y -= delta.y\n    }\n\n    rect.left -= rectDelta.left\n    rect.right -= rectDelta.right\n    rect.top -= rectDelta.top\n    rect.bottom -= rectDelta.bottom\n  }\n\n  shouldDo(options, preEnd?: boolean, phase?: string, requireEndOnly?: boolean) {\n    if (\n      // ignore disabled modifiers\n      !options ||\n      options.enabled === false ||\n      // check if we require endOnly option to fire move before end\n      (requireEndOnly && !options.endOnly) ||\n      // don't apply endOnly modifiers when not ending\n      (options.endOnly && !preEnd) ||\n      // check if modifier should run be applied on start\n      (phase === 'start' && !options.setStart)\n    ) {\n      return false\n    }\n\n    return true\n  }\n\n  copyFrom(other: Modification) {\n    this.startOffset = other.startOffset\n    this.startDelta = other.startDelta\n    this.startEdges = other.startEdges\n    this.edges = other.edges\n    this.states = other.states.map((s) => clone(s) as ModifierState)\n    this.result = createResult(extend({}, other.result.coords), extend({}, other.result.rect))\n  }\n\n  destroy() {\n    for (const prop in this) {\n      this[prop] = null\n    }\n  }\n}\n\nfunction createResult(coords?: Point, rect?: FullRect): ModificationResult {\n  return {\n    rect,\n    coords,\n    delta: { x: 0, y: 0 },\n    rectDelta: {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n    },\n    eventProps: [],\n    changed: true,\n  }\n}\n\nfunction getModifierList(interaction) {\n  const actionOptions = interaction.interactable.options[interaction.prepared.name]\n  const actionModifiers = actionOptions.modifiers\n\n  if (actionModifiers && actionModifiers.length) {\n    return actionModifiers\n  }\n\n  return ['snap', 'snapSize', 'snapEdges', 'restrict', 'restrictEdges', 'restrictSize']\n    .map((type) => {\n      const options = actionOptions[type]\n\n      return (\n        options &&\n        options.enabled && {\n          options,\n          methods: options._methods,\n        }\n      )\n    })\n    .filter((m) => !!m)\n}\n\nexport function getRectOffset(rect, coords) {\n  return rect\n    ? {\n        left: coords.x - rect.left,\n        top: coords.y - rect.top,\n        right: rect.right - coords.x,\n        bottom: rect.bottom - coords.y,\n      }\n    : {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n      }\n}\n", "import type { InteractEvent } from '@interactjs/core/InteractEvent'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Plugin } from '@interactjs/core/scope'\n\nimport { Modification } from './Modification'\nimport type { Modifier, ModifierModule, ModifierState } from './types'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    modification?: Modification\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface InteractEvent {\n    modifiers?: Array<{\n      name: string\n      [key: string]: any\n    }>\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    modifiers?: Modifier[]\n  }\n}\n\nexport function makeModifier<\n  Defaults extends { enabled?: boolean },\n  State extends ModifierState,\n  Name extends string,\n  Result,\n>(module: ModifierModule<Defaults, State, Result>, name?: Name) {\n  const { defaults } = module\n  const methods = {\n    start: module.start,\n    set: module.set,\n    beforeEnd: module.beforeEnd,\n    stop: module.stop,\n  }\n\n  const modifier = (_options?: Partial<Defaults>) => {\n    const options = (_options || {}) as Defaults\n\n    options.enabled = options.enabled !== false\n\n    // add missing defaults to options\n    for (const prop in defaults) {\n      if (!(prop in options)) {\n        ;(options as any)[prop] = defaults[prop]\n      }\n    }\n\n    const m: Modifier<Defaults, State, Name, Result> = {\n      options,\n      methods,\n      name,\n      enable: () => {\n        options.enabled = true\n        return m\n      },\n      disable: () => {\n        options.enabled = false\n        return m\n      },\n    }\n\n    return m\n  }\n\n  if (name && typeof name === 'string') {\n    // for backwrads compatibility\n    modifier._defaults = defaults\n    modifier._methods = methods\n  }\n\n  return modifier\n}\n\nexport function addEventModifiers({\n  iEvent,\n  interaction,\n}: {\n  iEvent: InteractEvent<any>\n  interaction: Interaction<any>\n}) {\n  const result = interaction.modification!.result\n\n  if (result) {\n    iEvent.modifiers = result.eventProps\n  }\n}\n\nconst modifiersBase: Plugin = {\n  id: 'modifiers/base',\n  before: ['actions'],\n  install: (scope) => {\n    scope.defaults.perAction.modifiers = []\n  },\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.modification = new Modification(interaction)\n    },\n\n    'interactions:before-action-start': (arg) => {\n      const { interaction } = arg\n      const modification = arg.interaction.modification!\n\n      modification.start(arg, interaction.coords.start.page)\n      interaction.edges = modification.edges\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-move': (arg) => {\n      const { interaction } = arg\n      const { modification } = interaction\n      const ret = modification.setAndApply(arg)\n      interaction.edges = modification.edges\n\n      return ret\n    },\n\n    'interactions:before-action-end': (arg) => {\n      const { interaction } = arg\n      const { modification } = interaction\n      const ret = modification.beforeEnd(arg)\n      interaction.edges = modification.startEdges\n\n      return ret\n    },\n\n    'interactions:action-start': addEventModifiers,\n    'interactions:action-move': addEventModifiers,\n    'interactions:action-end': addEventModifiers,\n\n    'interactions:after-action-start': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-move': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n\n    'interactions:stop': (arg) => arg.interaction.modification.stop(arg),\n  },\n}\n\nexport default modifiersBase\n", "import type { Point, Listeners, OrBoolean, Element, Rect } from '@interactjs/core/types'\n\nexport interface Defaults {\n  base: BaseDefaults\n  perAction: PerActionDefaults\n  actions: ActionDefaults\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface ActionDefaults {}\n\nexport interface BaseDefaults {\n  preventDefault?: 'always' | 'never' | 'auto'\n  deltaSource?: 'page' | 'client'\n  context?: Node\n  getRect?: (element: Element) => Rect\n}\n\nexport interface PerActionDefaults {\n  enabled?: boolean\n  origin?: Point | string | Element\n  listeners?: Listeners\n  allowFrom?: string | Element\n  ignoreFrom?: string | Element\n}\n\nexport type Options = Partial<BaseDefaults> &\n  Partial<PerActionDefaults> & {\n    [P in keyof ActionDefaults]?: Partial<ActionDefaults[P]>\n  }\n\nexport interface OptionsArg extends BaseDefaults, OrBoolean<Partial<ActionDefaults>> {}\n\nexport const defaults: Defaults = {\n  base: {\n    preventDefault: 'auto',\n    deltaSource: 'page',\n  },\n\n  perAction: {\n    enabled: false,\n    origin: { x: 0, y: 0 },\n  },\n\n  actions: {} as ActionDefaults,\n}\n", "import extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\n\nimport type { Point, FullRect, PointerEventType, Element, ActionName } from '@interactjs/core/types'\n\nimport { BaseEvent } from './BaseEvent'\nimport type { Interaction } from './Interaction'\nimport { defaults } from './options'\n\nexport type EventPhase = keyof PhaseMap\n\nexport interface PhaseMap {\n  start: true\n  move: true\n  end: true\n}\n\n// defined outside of class definition to avoid assignment of undefined during\n// construction\nexport interface InteractEvent {\n  pageX: number\n  pageY: number\n\n  clientX: number\n  clientY: number\n\n  dx: number\n  dy: number\n\n  velocityX: number\n  velocityY: number\n}\n\nexport class InteractEvent<\n  T extends ActionName = never,\n  P extends EventPhase = EventPhase,\n> extends BaseEvent<T> {\n  declare target: Element\n  declare currentTarget: Element\n  relatedTarget: Element | null = null\n  screenX?: number\n  screenY?: number\n  button: number\n  buttons: number\n  ctrlKey: boolean\n  shiftKey: boolean\n  altKey: boolean\n  metaKey: boolean\n  page: Point\n  client: Point\n  delta: Point\n  rect: FullRect\n  x0: number\n  y0: number\n  t0: number\n  dt: number\n  duration: number\n  clientX0: number\n  clientY0: number\n  velocity: Point\n  speed: number\n  swipe: ReturnType<InteractEvent<T>['getSwipe']>\n  // resize\n  axes?: 'x' | 'y' | 'xy'\n  /** @internal */\n  preEnd?: boolean\n\n  constructor(\n    interaction: Interaction<T>,\n    event: PointerEventType,\n    actionName: T,\n    phase: P,\n    element: Element,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    super(interaction)\n\n    element = element || interaction.element\n\n    const target = interaction.interactable\n    const deltaSource = (((target && target.options) || defaults) as any).deltaSource as 'page' | 'client'\n    const origin = getOriginXY(target, element, actionName)\n    const starting = phase === 'start'\n    const ending = phase === 'end'\n    const prevEvent = starting ? this : interaction.prevEvent\n    const coords = starting\n      ? interaction.coords.start\n      : ending\n        ? { page: prevEvent.page, client: prevEvent.client, timeStamp: interaction.coords.cur.timeStamp }\n        : interaction.coords.cur\n\n    this.page = extend({}, coords.page)\n    this.client = extend({}, coords.client)\n    this.rect = extend({}, interaction.rect)\n    this.timeStamp = coords.timeStamp\n\n    if (!ending) {\n      this.page.x -= origin.x\n      this.page.y -= origin.y\n\n      this.client.x -= origin.x\n      this.client.y -= origin.y\n    }\n\n    this.ctrlKey = event.ctrlKey\n    this.altKey = event.altKey\n    this.shiftKey = event.shiftKey\n    this.metaKey = event.metaKey\n    this.button = (event as MouseEvent).button\n    this.buttons = (event as MouseEvent).buttons\n    this.target = element\n    this.currentTarget = element\n    this.preEnd = preEnd\n    this.type = type || actionName + (phase || '')\n    this.interactable = target\n\n    this.t0 = starting ? interaction.pointers[interaction.pointers.length - 1].downTime : prevEvent.t0\n\n    this.x0 = interaction.coords.start.page.x - origin.x\n    this.y0 = interaction.coords.start.page.y - origin.y\n    this.clientX0 = interaction.coords.start.client.x - origin.x\n    this.clientY0 = interaction.coords.start.client.y - origin.y\n\n    if (starting || ending) {\n      this.delta = { x: 0, y: 0 }\n    } else {\n      this.delta = {\n        x: this[deltaSource].x - prevEvent[deltaSource].x,\n        y: this[deltaSource].y - prevEvent[deltaSource].y,\n      }\n    }\n\n    this.dt = interaction.coords.delta.timeStamp\n    this.duration = this.timeStamp - this.t0\n\n    // velocity and speed in pixels per second\n    this.velocity = extend({}, interaction.coords.velocity[deltaSource])\n    this.speed = hypot(this.velocity.x, this.velocity.y)\n\n    this.swipe = ending || phase === 'inertiastart' ? this.getSwipe() : null\n  }\n\n  getSwipe() {\n    const interaction = this._interaction\n\n    if (interaction.prevEvent.speed < 600 || this.timeStamp - interaction.prevEvent.timeStamp > 150) {\n      return null\n    }\n\n    let angle = (180 * Math.atan2(interaction.prevEvent.velocityY, interaction.prevEvent.velocityX)) / Math.PI\n    const overlap = 22.5\n\n    if (angle < 0) {\n      angle += 360\n    }\n\n    const left = 135 - overlap <= angle && angle < 225 + overlap\n    const up = 225 - overlap <= angle && angle < 315 + overlap\n\n    const right = !left && (315 - overlap <= angle || angle < 45 + overlap)\n    const down = !up && 45 - overlap <= angle && angle < 135 + overlap\n\n    return {\n      up,\n      down,\n      left,\n      right,\n      angle,\n      speed: interaction.prevEvent.speed,\n      velocity: {\n        x: interaction.prevEvent.velocityX,\n        y: interaction.prevEvent.velocityY,\n      },\n    }\n  }\n\n  preventDefault() {}\n\n  /**\n   * Don't call listeners on the remaining targets\n   */\n  stopImmediatePropagation() {\n    this.immediatePropagationStopped = this.propagationStopped = true\n  }\n\n  /**\n   * Don't call any other listeners (even on the current target)\n   */\n  stopPropagation() {\n    this.propagationStopped = true\n  }\n}\n\n// getters and setters defined here to support typescript 3.6 and below which\n// don't support getter and setters in .d.ts files\nObject.defineProperties(InteractEvent.prototype, {\n  pageX: {\n    get() {\n      return this.page.x\n    },\n    set(value) {\n      this.page.x = value\n    },\n  },\n  pageY: {\n    get() {\n      return this.page.y\n    },\n    set(value) {\n      this.page.y = value\n    },\n  },\n\n  clientX: {\n    get() {\n      return this.client.x\n    },\n    set(value) {\n      this.client.x = value\n    },\n  },\n  clientY: {\n    get() {\n      return this.client.y\n    },\n    set(value) {\n      this.client.y = value\n    },\n  },\n\n  dx: {\n    get() {\n      return this.delta.x\n    },\n    set(value) {\n      this.delta.x = value\n    },\n  },\n  dy: {\n    get() {\n      return this.delta.y\n    },\n    set(value) {\n      this.delta.y = value\n    },\n  },\n\n  velocityX: {\n    get() {\n      return this.velocity.x\n    },\n    set(value) {\n      this.velocity.x = value\n    },\n  },\n  velocityY: {\n    get() {\n      return this.velocity.y\n    },\n    set(value) {\n      this.velocity.y = value\n    },\n  },\n})\n", "import type { PointerEventType, PointerType } from '@interactjs/core/types'\n\nexport class PointerInfo {\n  id: number\n  pointer: PointerType\n  event: PointerEventType\n  downTime: number\n  downTarget: Node\n\n  constructor(id: number, pointer: PointerType, event: PointerEventType, downTime: number, downTarget: Node) {\n    this.id = id\n    this.pointer = pointer\n    this.event = event\n    this.downTime = downTime\n    this.downTarget = downTarget\n  }\n}\n", "import * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport hypot from '@interactjs/utils/hypot'\nimport { warnOnce, copyAction } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport type {\n  Element,\n  EdgeOptions,\n  PointerEventType,\n  PointerType,\n  FullRect,\n  CoordsSet,\n  ActionName,\n  ActionProps,\n} from '@interactjs/core/types'\n\nimport type { Interactable } from './Interactable'\nimport type { EventPhase } from './InteractEvent'\nimport { InteractEvent } from './InteractEvent'\nimport type { ActionDefaults } from './options'\nimport { PointerInfo } from './PointerInfo'\nimport type { Scope } from './scope'\n\nexport enum _ProxyValues {\n  interactable = '',\n  element = '',\n  prepared = '',\n  pointerIsDown = '',\n  pointerWasMoved = '',\n  _proxy = '',\n}\n\nexport enum _ProxyMethods {\n  start = '',\n  move = '',\n  end = '',\n  stop = '',\n  interacting = '',\n}\n\nexport type PointerArgProps<T extends {} = {}> = {\n  pointer: PointerType\n  event: PointerEventType\n  eventTarget: Node\n  pointerIndex: number\n  pointerInfo: PointerInfo\n  interaction: Interaction<never>\n} & T\n\nexport interface DoPhaseArg<T extends ActionName, P extends EventPhase> {\n  event: PointerEventType\n  phase: EventPhase\n  interaction: Interaction<T>\n  iEvent: InteractEvent<T, P>\n  preEnd?: boolean\n  type?: string\n}\n\nexport type DoAnyPhaseArg = DoPhaseArg<ActionName, EventPhase>\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:new': { interaction: Interaction<ActionName> }\n    'interactions:down': PointerArgProps<{\n      type: 'down'\n    }>\n    'interactions:move': PointerArgProps<{\n      type: 'move'\n      dx: number\n      dy: number\n      duplicate: boolean\n    }>\n    'interactions:up': PointerArgProps<{\n      type: 'up'\n      curEventTarget: EventTarget\n    }>\n    'interactions:cancel': SignalArgs['interactions:up'] & {\n      type: 'cancel'\n      curEventTarget: EventTarget\n    }\n    'interactions:update-pointer': PointerArgProps<{\n      down: boolean\n    }>\n    'interactions:remove-pointer': PointerArgProps\n    'interactions:blur': { interaction: Interaction<never>; event: Event; type: 'blur' }\n    'interactions:before-action-start': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-start': DoAnyPhaseArg\n    'interactions:after-action-start': DoAnyPhaseArg\n    'interactions:before-action-move': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-move': DoAnyPhaseArg\n    'interactions:after-action-move': DoAnyPhaseArg\n    'interactions:before-action-end': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-end': DoAnyPhaseArg\n    'interactions:after-action-end': DoAnyPhaseArg\n    'interactions:stop': { interaction: Interaction }\n  }\n}\n\nexport type InteractionProxy<T extends ActionName | null = never> = Pick<\n  Interaction<T>,\n  Exclude<keyof typeof _ProxyValues | keyof typeof _ProxyMethods, '_proxy'>\n>\n\nlet idCounter = 0\n\nexport class Interaction<T extends ActionName | null = ActionName> {\n  /** current interactable being interacted with */\n  interactable: Interactable | null = null\n\n  /** the target element of the interactable */\n  element: Element | null = null\n  rect: FullRect | null = null\n  /** @internal */\n  _rects?: {\n    start: FullRect\n    corrected: FullRect\n    previous: FullRect\n    delta: FullRect\n  }\n  /** @internal */\n  edges: EdgeOptions | null = null\n\n  /** @internal */\n  _scopeFire: Scope['fire']\n\n  // action that's ready to be fired on next move event\n  prepared: ActionProps<T> = {\n    name: null,\n    axis: null,\n    edges: null,\n  }\n\n  pointerType: string\n\n  /** @internal keep track of added pointers */\n  pointers: PointerInfo[] = []\n\n  /** @internal pointerdown/mousedown/touchstart event */\n  downEvent: PointerEventType | null = null\n\n  /** @internal */ downPointer: PointerType = {} as PointerType\n\n  /** @internal */\n  _latestPointer: {\n    pointer: PointerType\n    event: PointerEventType\n    eventTarget: Node\n  } = {\n    pointer: null,\n    event: null,\n    eventTarget: null,\n  }\n\n  /** @internal */ prevEvent: InteractEvent<T, EventPhase> = null\n\n  pointerIsDown = false\n  pointerWasMoved = false\n  /** @internal */ _interacting = false\n  /** @internal */ _ending = false\n  /** @internal */ _stopped = true\n  /** @internal */ _proxy: InteractionProxy<T>\n\n  /** @internal */ simulation = null\n\n  /** @internal */ get pointerMoveTolerance() {\n    return 1\n  }\n\n  doMove = warnOnce(function (this: Interaction, signalArg: any) {\n    this.move(signalArg)\n  }, 'The interaction.doMove() method has been renamed to interaction.move()')\n\n  coords: CoordsSet = {\n    // Starting InteractEvent pointer coordinates\n    start: pointerUtils.newCoords(),\n    // Previous native pointer move event coordinates\n    prev: pointerUtils.newCoords(),\n    // current native pointer move event coordinates\n    cur: pointerUtils.newCoords(),\n    // Change in coordinates and time of the pointer\n    delta: pointerUtils.newCoords(),\n    // pointer velocity\n    velocity: pointerUtils.newCoords(),\n  }\n\n  /** @internal */ readonly _id: number = idCounter++\n\n  constructor({ pointerType, scopeFire }: { pointerType?: string; scopeFire: Scope['fire'] }) {\n    this._scopeFire = scopeFire\n    this.pointerType = pointerType\n\n    const that = this\n\n    this._proxy = {} as InteractionProxy<T>\n\n    for (const key in _ProxyValues) {\n      Object.defineProperty(this._proxy, key, {\n        get() {\n          return that[key]\n        },\n      })\n    }\n\n    for (const key in _ProxyMethods) {\n      Object.defineProperty(this._proxy, key, {\n        value: (...args: any[]) => that[key](...args),\n      })\n    }\n\n    this._scopeFire('interactions:new', { interaction: this })\n  }\n\n  pointerDown(pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    const pointerIndex = this.updatePointer(pointer, event, eventTarget, true)\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:down', {\n      pointer,\n      event,\n      eventTarget,\n      pointerIndex,\n      pointerInfo,\n      type: 'down',\n      interaction: this as unknown as Interaction<never>,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable({\n   *     // disable the default drag start by down->move\n   *     manualStart: true\n   *   })\n   *   // start dragging after the user holds the pointer down\n   *   .on('hold', function (event) {\n   *     var interaction = event.interaction\n   *\n   *     if (!interaction.interacting()) {\n   *       interaction.start({ name: 'drag' },\n   *                         event.interactable,\n   *                         event.currentTarget)\n   *     }\n   * })\n   * ```\n   *\n   * Start an action with the given Interactable and Element as tartgets. The\n   * action must be enabled for the target Interactable and an appropriate\n   * number of pointers must be held down - 1 for drag/resize, 2 for gesture.\n   *\n   * Use it with `interactable.<action>able({ manualStart: false })` to always\n   * [start actions manually](https://github.com/taye/interact.js/issues/114)\n   *\n   * @param action - The action to be performed - drag, resize, etc.\n   * @param target - The Interactable to target\n   * @param element - The DOM Element to target\n   * @returns Whether the interaction was successfully started\n   */\n  start<A extends ActionName>(action: ActionProps<A>, interactable: Interactable, element: Element): boolean {\n    if (\n      this.interacting() ||\n      !this.pointerIsDown ||\n      this.pointers.length < (action.name === 'gesture' ? 2 : 1) ||\n      !interactable.options[action.name as keyof ActionDefaults].enabled\n    ) {\n      return false\n    }\n\n    copyAction(this.prepared, action)\n\n    this.interactable = interactable\n    this.element = element\n    this.rect = interactable.getRect(element)\n    this.edges = this.prepared.edges\n      ? extend({}, this.prepared.edges)\n      : { left: true, right: true, top: true, bottom: true }\n    this._stopped = false\n    this._interacting =\n      this._doPhase({\n        interaction: this,\n        event: this.downEvent,\n        phase: 'start',\n      }) && !this._stopped\n\n    return this._interacting\n  }\n\n  pointerMove(pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    if (!this.simulation && !(this.modification && this.modification.endResult)) {\n      this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const duplicateMove =\n      this.coords.cur.page.x === this.coords.prev.page.x &&\n      this.coords.cur.page.y === this.coords.prev.page.y &&\n      this.coords.cur.client.x === this.coords.prev.client.x &&\n      this.coords.cur.client.y === this.coords.prev.client.y\n\n    let dx: number\n    let dy: number\n\n    // register movement greater than pointerMoveTolerance\n    if (this.pointerIsDown && !this.pointerWasMoved) {\n      dx = this.coords.cur.client.x - this.coords.start.client.x\n      dy = this.coords.cur.client.y - this.coords.start.client.y\n\n      this.pointerWasMoved = hypot(dx, dy) > this.pointerMoveTolerance\n    }\n\n    const pointerIndex = this.getPointerIndex(pointer)\n    const signalArg = {\n      pointer,\n      pointerIndex,\n      pointerInfo: this.pointers[pointerIndex],\n      event,\n      type: 'move' as const,\n      eventTarget,\n      dx,\n      dy,\n      duplicate: duplicateMove,\n      interaction: this as unknown as Interaction<never>,\n    }\n\n    if (!duplicateMove) {\n      // set pointer coordinate, time changes and velocity\n      pointerUtils.setCoordVelocity(this.coords.velocity, this.coords.delta)\n    }\n\n    this._scopeFire('interactions:move', signalArg)\n\n    if (!duplicateMove && !this.simulation) {\n      // if interacting, fire an 'action-move' signal etc\n      if (this.interacting()) {\n        signalArg.type = null\n        this.move(signalArg)\n      }\n\n      if (this.pointerWasMoved) {\n        pointerUtils.copyCoords(this.coords.prev, this.coords.cur)\n      }\n    }\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('dragmove', function (event) {\n   *     if (someCondition) {\n   *       // change the snap settings\n   *       event.interactable.draggable({ snap: { targets: [] }})\n   *       // fire another move event with re-calculated snap\n   *       event.interaction.move()\n   *     }\n   *   })\n   * ```\n   *\n   * Force a move of the current action at the same coordinates. Useful if\n   * snap/restrict has been changed and you want a movement with the new\n   * settings.\n   */\n  move(signalArg?: any) {\n    if (!signalArg || !signalArg.event) {\n      pointerUtils.setZeroCoords(this.coords.delta)\n    }\n\n    signalArg = extend(\n      {\n        pointer: this._latestPointer.pointer,\n        event: this._latestPointer.event,\n        eventTarget: this._latestPointer.eventTarget,\n        interaction: this,\n      },\n      signalArg || {},\n    )\n\n    signalArg.phase = 'move'\n\n    this._doPhase(signalArg)\n  }\n\n  /**\n   * @internal\n   * End interact move events and stop auto-scroll unless simulation is running\n   */\n  pointerUp(pointer: PointerType, event: PointerEventType, eventTarget: Node, curEventTarget: EventTarget) {\n    let pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) {\n      pointerIndex = this.updatePointer(pointer, event, eventTarget, false)\n    }\n\n    const type = /cancel$/i.test(event.type) ? 'cancel' : 'up'\n\n    this._scopeFire(`interactions:${type}` as 'interactions:up' | 'interactions:cancel', {\n      pointer,\n      pointerIndex,\n      pointerInfo: this.pointers[pointerIndex],\n      event,\n      eventTarget,\n      type: type as any,\n      curEventTarget,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    if (!this.simulation) {\n      this.end(event)\n    }\n\n    this.removePointer(pointer, event)\n  }\n\n  /** @internal */\n  documentBlur(event: Event) {\n    this.end(event as any)\n    this._scopeFire('interactions:blur', {\n      event,\n      type: 'blur',\n      interaction: this as unknown as Interaction<never>,\n    })\n  }\n\n  /**\n   * ```js\n   * interact(target)\n   *   .draggable(true)\n   *   .on('move', function (event) {\n   *     if (event.pageX > 1000) {\n   *       // end the current action\n   *       event.interaction.end()\n   *       // stop all further listeners from being called\n   *       event.stopImmediatePropagation()\n   *     }\n   *   })\n   * ```\n   */\n  end(event?: PointerEventType) {\n    this._ending = true\n    event = event || this._latestPointer.event\n    let endPhaseResult: boolean\n\n    if (this.interacting()) {\n      endPhaseResult = this._doPhase({\n        event,\n        interaction: this,\n        phase: 'end',\n      })\n    }\n\n    this._ending = false\n\n    if (endPhaseResult === true) {\n      this.stop()\n    }\n  }\n\n  currentAction() {\n    return this._interacting ? this.prepared.name : null\n  }\n\n  interacting() {\n    return this._interacting\n  }\n\n  stop() {\n    this._scopeFire('interactions:stop', { interaction: this })\n\n    this.interactable = this.element = null\n\n    this._interacting = false\n    this._stopped = true\n    this.prepared.name = this.prevEvent = null\n  }\n\n  /** @internal */\n  getPointerIndex(pointer: any) {\n    const pointerId = pointerUtils.getPointerId(pointer)\n\n    // mouse and pen interactions may have only one pointer\n    return this.pointerType === 'mouse' || this.pointerType === 'pen'\n      ? this.pointers.length - 1\n      : arr.findIndex(this.pointers, (curPointer) => curPointer.id === pointerId)\n  }\n\n  /** @internal */\n  getPointerInfo(pointer: any) {\n    return this.pointers[this.getPointerIndex(pointer)]\n  }\n\n  /** @internal */\n  updatePointer(pointer: PointerType, event: PointerEventType, eventTarget: Node, down?: boolean) {\n    const id = pointerUtils.getPointerId(pointer)\n    let pointerIndex = this.getPointerIndex(pointer)\n    let pointerInfo = this.pointers[pointerIndex]\n\n    down = down === false ? false : down || /(down|start)$/i.test(event.type)\n\n    if (!pointerInfo) {\n      pointerInfo = new PointerInfo(id, pointer, event, null, null)\n\n      pointerIndex = this.pointers.length\n      this.pointers.push(pointerInfo)\n    } else {\n      pointerInfo.pointer = pointer\n    }\n\n    pointerUtils.setCoords(\n      this.coords.cur,\n      this.pointers.map((p) => p.pointer),\n      this._now(),\n    )\n    pointerUtils.setCoordDeltas(this.coords.delta, this.coords.prev, this.coords.cur)\n\n    if (down) {\n      this.pointerIsDown = true\n\n      pointerInfo.downTime = this.coords.cur.timeStamp\n      pointerInfo.downTarget = eventTarget\n      pointerUtils.pointerExtend(this.downPointer, pointer)\n\n      if (!this.interacting()) {\n        pointerUtils.copyCoords(this.coords.start, this.coords.cur)\n        pointerUtils.copyCoords(this.coords.prev, this.coords.cur)\n\n        this.downEvent = event\n        this.pointerWasMoved = false\n      }\n    }\n\n    this._updateLatestPointer(pointer, event, eventTarget)\n\n    this._scopeFire('interactions:update-pointer', {\n      pointer,\n      event,\n      eventTarget,\n      down,\n      pointerInfo,\n      pointerIndex,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    return pointerIndex\n  }\n\n  /** @internal */\n  removePointer(pointer: PointerType, event: PointerEventType) {\n    const pointerIndex = this.getPointerIndex(pointer)\n\n    if (pointerIndex === -1) return\n\n    const pointerInfo = this.pointers[pointerIndex]\n\n    this._scopeFire('interactions:remove-pointer', {\n      pointer,\n      event,\n      eventTarget: null,\n      pointerIndex,\n      pointerInfo,\n      interaction: this as unknown as Interaction<never>,\n    })\n\n    this.pointers.splice(pointerIndex, 1)\n    this.pointerIsDown = false\n  }\n\n  /** @internal */\n  _updateLatestPointer(pointer: PointerType, event: PointerEventType, eventTarget: Node) {\n    this._latestPointer.pointer = pointer\n    this._latestPointer.event = event\n    this._latestPointer.eventTarget = eventTarget\n  }\n\n  destroy() {\n    this._latestPointer.pointer = null\n    this._latestPointer.event = null\n    this._latestPointer.eventTarget = null\n  }\n\n  /** @internal */\n  _createPreparedEvent<P extends EventPhase>(\n    event: PointerEventType,\n    phase: P,\n    preEnd?: boolean,\n    type?: string,\n  ) {\n    return new InteractEvent<T, P>(this, event, this.prepared.name, phase, this.element, preEnd, type)\n  }\n\n  /** @internal */\n  _fireEvent<P extends EventPhase>(iEvent: InteractEvent<T, P>) {\n    this.interactable?.fire(iEvent)\n\n    if (!this.prevEvent || iEvent.timeStamp >= this.prevEvent.timeStamp) {\n      this.prevEvent = iEvent\n    }\n  }\n\n  /** @internal */\n  _doPhase<P extends EventPhase>(\n    signalArg: Omit<DoPhaseArg<T, P>, 'iEvent'> & { iEvent?: InteractEvent<T, P> },\n  ) {\n    const { event, phase, preEnd, type } = signalArg\n    const { rect } = this\n\n    if (rect && phase === 'move') {\n      // update the rect changes due to pointer move\n      rectUtils.addEdges(this.edges, rect, this.coords.delta[this.interactable.options.deltaSource])\n\n      rect.width = rect.right - rect.left\n      rect.height = rect.bottom - rect.top\n    }\n\n    const beforeResult = this._scopeFire(`interactions:before-action-${phase}` as any, signalArg)\n\n    if (beforeResult === false) {\n      return false\n    }\n\n    const iEvent = (signalArg.iEvent = this._createPreparedEvent(event, phase, preEnd, type))\n\n    this._scopeFire(`interactions:action-${phase}` as any, signalArg)\n\n    if (phase === 'start') {\n      this.prevEvent = iEvent\n    }\n\n    this._fireEvent(iEvent)\n\n    this._scopeFire(`interactions:after-action-${phase}` as any, signalArg)\n\n    return true\n  }\n\n  /** @internal */\n  _now() {\n    return Date.now()\n  }\n}\n\nexport default Interaction\nexport { PointerInfo }\n", "import type Interaction from '@interactjs/core/Interaction'\nimport { _ProxyMethods } from '@interactjs/core/Interaction'\nimport type { Plugin } from '@interactjs/core/scope'\nimport type { Point } from '@interactjs/core/types'\nimport * as rectUtils from '@interactjs/utils/rect'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    offsetBy?: typeof offsetBy\n    offset: {\n      total: Point\n      pending: Point\n    }\n  }\n\n  enum _ProxyMethods {\n    offsetBy = '',\n  }\n}\n\n;(_ProxyMethods as any).offsetBy = ''\n\nexport function addTotal(interaction: Interaction) {\n  if (!interaction.pointerIsDown) {\n    return\n  }\n\n  addToCoords(interaction.coords.cur, interaction.offset.total)\n\n  interaction.offset.pending.x = 0\n  interaction.offset.pending.y = 0\n}\n\nfunction beforeAction({ interaction }: { interaction: Interaction }) {\n  applyPending(interaction)\n}\n\nfunction beforeEnd({ interaction }: { interaction: Interaction }): boolean | void {\n  const hadPending = applyPending(interaction)\n\n  if (!hadPending) return\n\n  interaction.move({ offset: true })\n  interaction.end()\n\n  return false\n}\n\nfunction end({ interaction }: { interaction: Interaction }) {\n  interaction.offset.total.x = 0\n  interaction.offset.total.y = 0\n  interaction.offset.pending.x = 0\n  interaction.offset.pending.y = 0\n}\n\nexport function applyPending(interaction: Interaction) {\n  if (!hasPending(interaction)) {\n    return false\n  }\n\n  const { pending } = interaction.offset\n\n  addToCoords(interaction.coords.cur, pending)\n  addToCoords(interaction.coords.delta, pending)\n  rectUtils.addEdges(interaction.edges, interaction.rect, pending)\n\n  pending.x = 0\n  pending.y = 0\n\n  return true\n}\n\nfunction offsetBy(this: Interaction, { x, y }: Point) {\n  this.offset.pending.x += x\n  this.offset.pending.y += y\n\n  this.offset.total.x += x\n  this.offset.total.y += y\n}\n\nfunction addToCoords({ page, client }, { x, y }: Point) {\n  page.x += x\n  page.y += y\n  client.x += x\n  client.y += y\n}\n\nfunction hasPending(interaction: Interaction) {\n  return !!(interaction.offset.pending.x || interaction.offset.pending.y)\n}\n\nconst offset: Plugin = {\n  id: 'offset',\n  before: ['modifiers', 'pointer-events', 'actions', 'inertia'],\n  install(scope) {\n    scope.Interaction.prototype.offsetBy = offsetBy\n  },\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.offset = {\n        total: { x: 0, y: 0 },\n        pending: { x: 0, y: 0 },\n      }\n    },\n    'interactions:update-pointer': ({ interaction }) => addTotal(interaction),\n    'interactions:before-action-start': beforeAction,\n    'interactions:before-action-move': beforeAction,\n    'interactions:before-action-end': beforeEnd,\n    'interactions:stop': end,\n  },\n}\n\nexport default offset\n", "import type { Interaction, DoPhaseArg } from '@interactjs/core/Interaction'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, Point, PointerEventType } from '@interactjs/core/types'\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport '@interactjs/modifiers/base'\nimport '@interactjs/offset/plugin'\nimport * as modifiers from '@interactjs/modifiers/base'\nimport { Modification } from '@interactjs/modifiers/Modification'\nimport type { ModifierArg } from '@interactjs/modifiers/types'\nimport offset from '@interactjs/offset/plugin'\n/* eslint-enable import/no-duplicates */\nimport * as dom from '@interactjs/utils/domUtils'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { copyCoords } from '@interactjs/utils/pointerUtils'\nimport raf from '@interactjs/utils/raf'\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface PhaseMap {\n    resume?: true\n    inertiastart?: true\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    inertia?: InertiaState\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface PerActionDefaults {\n    inertia?: {\n      enabled?: boolean\n      resistance?: number // the lambda in exponential decay\n      minSpeed?: number // target speed must be above this for inertia to start\n      endSpeed?: number // the speed at which inertia is slow enough to stop\n      allowResume?: true // allow resuming an action in inertia phase\n      smoothEndDuration?: number // animate to snap/restrict endOnly if there's no inertia\n    }\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-inertiastart': Omit<DoPhaseArg<ActionName, 'inertiastart'>, 'iEvent'>\n    'interactions:action-inertiastart': DoPhaseArg<ActionName, 'inertiastart'>\n    'interactions:after-action-inertiastart': DoPhaseArg<ActionName, 'inertiastart'>\n    'interactions:before-action-resume': Omit<DoPhaseArg<ActionName, 'resume'>, 'iEvent'>\n    'interactions:action-resume': DoPhaseArg<ActionName, 'resume'>\n    'interactions:after-action-resume': DoPhaseArg<ActionName, 'resume'>\n  }\n}\n\nfunction install(scope: Scope) {\n  const { defaults } = scope\n\n  scope.usePlugin(offset)\n  scope.usePlugin(modifiers.default)\n  scope.actions.phases.inertiastart = true\n  scope.actions.phases.resume = true\n\n  defaults.perAction.inertia = {\n    enabled: false,\n    resistance: 10, // the lambda in exponential decay\n    minSpeed: 100, // target speed must be above this for inertia to start\n    endSpeed: 10, // the speed at which inertia is slow enough to stop\n    allowResume: true, // allow resuming an action in inertia phase\n    smoothEndDuration: 300, // animate to snap/restrict endOnly if there's no inertia\n  }\n}\n\nexport class InertiaState {\n  active = false\n  isModified = false\n  smoothEnd = false\n  allowResume = false\n\n  modification!: Modification\n  modifierCount = 0\n  modifierArg!: ModifierArg\n\n  startCoords!: Point\n  t0 = 0\n  v0 = 0\n\n  te = 0\n  targetOffset!: Point\n  modifiedOffset!: Point\n  currentOffset!: Point\n\n  lambda_v0? = 0 // eslint-disable-line camelcase\n  one_ve_v0? = 0 // eslint-disable-line camelcase\n  timeout!: number\n  readonly interaction: Interaction\n\n  constructor(interaction: Interaction) {\n    this.interaction = interaction\n  }\n\n  start(event: PointerEventType) {\n    const { interaction } = this\n    const options = getOptions(interaction)\n\n    if (!options || !options.enabled) {\n      return false\n    }\n\n    const { client: velocityClient } = interaction.coords.velocity\n    const pointerSpeed = hypot(velocityClient.x, velocityClient.y)\n    const modification = this.modification || (this.modification = new Modification(interaction))\n\n    modification.copyFrom(interaction.modification)\n\n    this.t0 = interaction._now()\n    this.allowResume = options.allowResume\n    this.v0 = pointerSpeed\n    this.currentOffset = { x: 0, y: 0 }\n    this.startCoords = interaction.coords.cur.page\n\n    this.modifierArg = modification.fillArg({\n      pageCoords: this.startCoords,\n      preEnd: true,\n      phase: 'inertiastart',\n    })\n\n    const thrown =\n      this.t0 - interaction.coords.cur.timeStamp < 50 &&\n      pointerSpeed > options.minSpeed &&\n      pointerSpeed > options.endSpeed\n\n    if (thrown) {\n      this.startInertia()\n    } else {\n      modification.result = modification.setAll(this.modifierArg)\n\n      if (!modification.result.changed) {\n        return false\n      }\n\n      this.startSmoothEnd()\n    }\n\n    // force modification change\n    interaction.modification.result.rect = null\n\n    // bring inertiastart event to the target coords\n    interaction.offsetBy(this.targetOffset)\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'inertiastart',\n    })\n    interaction.offsetBy({ x: -this.targetOffset.x, y: -this.targetOffset.y })\n    // force modification change\n    interaction.modification.result.rect = null\n\n    this.active = true\n    interaction.simulation = this\n\n    return true\n  }\n\n  startInertia() {\n    const startVelocity = this.interaction.coords.velocity.client\n    const options = getOptions(this.interaction)\n    const lambda = options.resistance\n    const inertiaDur = -Math.log(options.endSpeed / this.v0) / lambda\n\n    this.targetOffset = {\n      x: (startVelocity.x - inertiaDur) / lambda,\n      y: (startVelocity.y - inertiaDur) / lambda,\n    }\n\n    this.te = inertiaDur\n    this.lambda_v0 = lambda / this.v0\n    this.one_ve_v0 = 1 - options.endSpeed / this.v0\n\n    const { modification, modifierArg } = this\n\n    modifierArg.pageCoords = {\n      x: this.startCoords.x + this.targetOffset.x,\n      y: this.startCoords.y + this.targetOffset.y,\n    }\n\n    modification.result = modification.setAll(modifierArg)\n\n    if (modification.result.changed) {\n      this.isModified = true\n      this.modifiedOffset = {\n        x: this.targetOffset.x + modification.result.delta.x,\n        y: this.targetOffset.y + modification.result.delta.y,\n      }\n    }\n\n    this.onNextFrame(() => this.inertiaTick())\n  }\n\n  startSmoothEnd() {\n    this.smoothEnd = true\n    this.isModified = true\n    this.targetOffset = {\n      x: this.modification.result.delta.x,\n      y: this.modification.result.delta.y,\n    }\n\n    this.onNextFrame(() => this.smoothEndTick())\n  }\n\n  onNextFrame(tickFn: () => void) {\n    this.timeout = raf.request(() => {\n      if (this.active) {\n        tickFn()\n      }\n    })\n  }\n\n  inertiaTick() {\n    const { interaction } = this\n    const options = getOptions(interaction)\n    const lambda = options.resistance\n    const t = (interaction._now() - this.t0) / 1000\n\n    if (t < this.te) {\n      const progress = 1 - (Math.exp(-lambda * t) - this.lambda_v0) / this.one_ve_v0\n      let newOffset: Point\n\n      if (this.isModified) {\n        newOffset = getQuadraticCurvePoint(\n          0,\n          0,\n          this.targetOffset.x,\n          this.targetOffset.y,\n          this.modifiedOffset.x,\n          this.modifiedOffset.y,\n          progress,\n        )\n      } else {\n        newOffset = {\n          x: this.targetOffset.x * progress,\n          y: this.targetOffset.y * progress,\n        }\n      }\n\n      const delta = { x: newOffset.x - this.currentOffset.x, y: newOffset.y - this.currentOffset.y }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move()\n\n      this.onNextFrame(() => this.inertiaTick())\n    } else {\n      interaction.offsetBy({\n        x: this.modifiedOffset.x - this.currentOffset.x,\n        y: this.modifiedOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  smoothEndTick() {\n    const { interaction } = this\n    const t = interaction._now() - this.t0\n    const { smoothEndDuration: duration } = getOptions(interaction)\n\n    if (t < duration) {\n      const newOffset = {\n        x: easeOutQuad(t, 0, this.targetOffset.x, duration),\n        y: easeOutQuad(t, 0, this.targetOffset.y, duration),\n      }\n      const delta = {\n        x: newOffset.x - this.currentOffset.x,\n        y: newOffset.y - this.currentOffset.y,\n      }\n\n      this.currentOffset.x += delta.x\n      this.currentOffset.y += delta.y\n\n      interaction.offsetBy(delta)\n      interaction.move({ skipModifiers: this.modifierCount })\n\n      this.onNextFrame(() => this.smoothEndTick())\n    } else {\n      interaction.offsetBy({\n        x: this.targetOffset.x - this.currentOffset.x,\n        y: this.targetOffset.y - this.currentOffset.y,\n      })\n\n      this.end()\n    }\n  }\n\n  resume({ pointer, event, eventTarget }: SignalArgs['interactions:down']) {\n    const { interaction } = this\n\n    // undo inertia changes to interaction coords\n    interaction.offsetBy({\n      x: -this.currentOffset.x,\n      y: -this.currentOffset.y,\n    })\n\n    // update pointer at pointer down position\n    interaction.updatePointer(pointer, event, eventTarget, true)\n\n    // fire resume signals and event\n    interaction._doPhase({\n      interaction,\n      event,\n      phase: 'resume',\n    })\n    copyCoords(interaction.coords.prev, interaction.coords.cur)\n\n    this.stop()\n  }\n\n  end() {\n    this.interaction.move()\n    this.interaction.end()\n    this.stop()\n  }\n\n  stop() {\n    this.active = this.smoothEnd = false\n    this.interaction.simulation = null\n    raf.cancel(this.timeout)\n  }\n}\n\nfunction start({ interaction, event }: DoPhaseArg<ActionName, 'end'>) {\n  if (!interaction._interacting || interaction.simulation) {\n    return null\n  }\n\n  const started = interaction.inertia.start(event)\n\n  // prevent action end if inertia or smoothEnd\n  return started ? false : null\n}\n\n// Check if the down event hits the current inertia target\n// control should be return to the user\nfunction resume(arg: SignalArgs['interactions:down']) {\n  const { interaction, eventTarget } = arg\n  const state = interaction.inertia\n\n  if (!state.active) return\n\n  let element = eventTarget as Node\n\n  // climb up the DOM tree from the event target\n  while (is.element(element)) {\n    // if interaction element is the current inertia target element\n    if (element === interaction.element) {\n      state.resume(arg)\n      break\n    }\n\n    element = dom.parentNode(element)\n  }\n}\n\nfunction stop({ interaction }: { interaction: Interaction }) {\n  const state = interaction.inertia\n\n  if (state.active) {\n    state.stop()\n  }\n}\n\nfunction getOptions({ interactable, prepared }: Interaction) {\n  return interactable && interactable.options && prepared.name && interactable.options[prepared.name].inertia\n}\n\nconst inertia: Plugin = {\n  id: 'inertia',\n  before: ['modifiers', 'actions'],\n  install,\n  listeners: {\n    'interactions:new': ({ interaction }) => {\n      interaction.inertia = new InertiaState(interaction)\n    },\n\n    'interactions:before-action-end': start,\n    'interactions:down': resume,\n    'interactions:stop': stop,\n\n    'interactions:before-action-resume': (arg) => {\n      const { modification } = arg.interaction\n\n      modification.stop(arg)\n      modification.start(arg, arg.interaction.coords.cur.page)\n      modification.applyToInteraction(arg)\n    },\n\n    'interactions:before-action-inertiastart': (arg) => arg.interaction.modification.setAndApply(arg),\n    'interactions:action-resume': modifiers.addEventModifiers,\n    'interactions:action-inertiastart': modifiers.addEventModifiers,\n    'interactions:after-action-inertiastart': (arg) =>\n      arg.interaction.modification.restoreInteractionCoords(arg),\n    'interactions:after-action-resume': (arg) => arg.interaction.modification.restoreInteractionCoords(arg),\n  },\n}\n\n// http://stackoverflow.com/a/5634528/2280888\nfunction _getQBezierValue(t: number, p1: number, p2: number, p3: number) {\n  const iT = 1 - t\n  return iT * iT * p1 + 2 * iT * t * p2 + t * t * p3\n}\n\nfunction getQuadraticCurvePoint(\n  startX: number,\n  startY: number,\n  cpX: number,\n  cpY: number,\n  endX: number,\n  endY: number,\n  position: number,\n) {\n  return {\n    x: _getQBezierValue(position, startX, cpX, endX),\n    y: _getQBezierValue(position, startY, cpY, endY),\n  }\n}\n\n// http://gizma.com/easing/\nfunction easeOutQuad(t: number, b: number, c: number, d: number) {\n  t /= d\n  return -c * t * (t - 2) + b\n}\n\nexport default inertia\n", "import * as arr from '@interactjs/utils/arr'\nimport extend from '@interactjs/utils/extend'\nimport type { NormalizedListeners } from '@interactjs/utils/normalizeListeners'\nimport normalize from '@interactjs/utils/normalizeListeners'\n\nimport type { Listener, ListenersArg, Rect } from '@interactjs/core/types'\n\nfunction fireUntilImmediateStopped(event: any, listeners: Listener[]) {\n  for (const listener of listeners) {\n    if (event.immediatePropagationStopped) {\n      break\n    }\n\n    listener(event)\n  }\n}\n\nexport class Eventable {\n  options: any\n  types: NormalizedListeners = {}\n  propagationStopped = false\n  immediatePropagationStopped = false\n  global: any\n\n  constructor(options?: { [index: string]: any }) {\n    this.options = extend({}, options || {})\n  }\n\n  fire<T extends { type: string; propagationStopped?: boolean }>(event: T) {\n    let listeners: Listener[]\n    const global = this.global\n\n    // Interactable#on() listeners\n    // tslint:disable no-conditional-assignment\n    if ((listeners = this.types[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n\n    // interact.on() listeners\n    if (!event.propagationStopped && global && (listeners = global[event.type])) {\n      fireUntilImmediateStopped(event, listeners)\n    }\n  }\n\n  on(type: string, listener: ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      this.types[type] = arr.merge(this.types[type] || [], listeners[type])\n    }\n  }\n\n  off(type: string, listener: ListenersArg) {\n    const listeners = normalize(type, listener)\n\n    for (type in listeners) {\n      const eventList = this.types[type]\n\n      if (!eventList || !eventList.length) {\n        continue\n      }\n\n      for (const subListener of listeners[type]) {\n        const index = eventList.indexOf(subListener)\n\n        if (index !== -1) {\n          eventList.splice(index, 1)\n        }\n      }\n    }\n  }\n\n  getRect(_element: Element): Rect {\n    return null\n  }\n}\n", "import * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport pExtend from '@interactjs/utils/pointerExtend'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { Scope } from '@interactjs/core/scope'\nimport type { Element } from '@interactjs/core/types'\n\nimport type { NativeEventTarget } from './NativeTypes'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    events: ReturnType<typeof install>\n  }\n}\n\ninterface EventOptions {\n  capture: boolean\n  passive: boolean\n}\n\ntype PartialEventTarget = Partial<NativeEventTarget>\n\ntype ListenerEntry = { func: (event: Event | FakeEvent) => any; options: EventOptions }\n\nfunction install(scope: Scope) {\n  const targets: Array<{\n    eventTarget: PartialEventTarget\n    events: { [type: string]: ListenerEntry[] }\n  }> = []\n\n  const delegatedEvents: {\n    [type: string]: Array<{\n      selector: string\n      context: Node\n      listeners: ListenerEntry[]\n    }>\n  } = {}\n  const documents: Document[] = []\n\n  const eventsMethods = {\n    add,\n    remove,\n\n    addDelegate,\n    removeDelegate,\n\n    delegateListener,\n    delegateUseCapture,\n    delegatedEvents,\n    documents,\n\n    targets,\n\n    supportsOptions: false,\n    supportsPassive: false,\n  }\n\n  // check if browser supports passive events and options arg\n  scope.document?.createElement('div').addEventListener('test', null, {\n    get capture() {\n      return (eventsMethods.supportsOptions = true)\n    },\n    get passive() {\n      return (eventsMethods.supportsPassive = true)\n    },\n  })\n\n  scope.events = eventsMethods\n\n  function add(\n    eventTarget: PartialEventTarget,\n    type: string,\n    listener: ListenerEntry['func'],\n    optionalArg?: boolean | EventOptions,\n  ) {\n    if (!eventTarget.addEventListener) return\n\n    const options = getOptions(optionalArg)\n    let target = arr.find(targets, (t) => t.eventTarget === eventTarget)\n\n    if (!target) {\n      target = {\n        eventTarget,\n        events: {},\n      }\n\n      targets.push(target)\n    }\n\n    if (!target.events[type]) {\n      target.events[type] = []\n    }\n\n    if (!arr.find(target.events[type], (l) => l.func === listener && optionsMatch(l.options, options))) {\n      eventTarget.addEventListener(\n        type,\n        listener as any,\n        eventsMethods.supportsOptions ? options : options.capture,\n      )\n      target.events[type].push({ func: listener, options })\n    }\n  }\n\n  function remove(\n    eventTarget: PartialEventTarget,\n    type: string,\n    listener?: 'all' | ListenerEntry['func'],\n    optionalArg?: boolean | EventOptions,\n  ) {\n    if (!eventTarget.addEventListener || !eventTarget.removeEventListener) return\n\n    const targetIndex = arr.findIndex(targets, (t) => t.eventTarget === eventTarget)\n    const target = targets[targetIndex]\n\n    if (!target || !target.events) {\n      return\n    }\n\n    if (type === 'all') {\n      for (type in target.events) {\n        if (target.events.hasOwnProperty(type)) {\n          remove(eventTarget, type, 'all')\n        }\n      }\n      return\n    }\n\n    let typeIsEmpty = false\n    const typeListeners = target.events[type]\n\n    if (typeListeners) {\n      if (listener === 'all') {\n        for (let i = typeListeners.length - 1; i >= 0; i--) {\n          const entry = typeListeners[i]\n          remove(eventTarget, type, entry.func, entry.options)\n        }\n        return\n      } else {\n        const options = getOptions(optionalArg)\n\n        for (let i = 0; i < typeListeners.length; i++) {\n          const entry = typeListeners[i]\n          if (entry.func === listener && optionsMatch(entry.options, options)) {\n            eventTarget.removeEventListener(\n              type,\n              listener as any,\n              eventsMethods.supportsOptions ? options : options.capture,\n            )\n            typeListeners.splice(i, 1)\n\n            if (typeListeners.length === 0) {\n              delete target.events[type]\n              typeIsEmpty = true\n            }\n\n            break\n          }\n        }\n      }\n    }\n\n    if (typeIsEmpty && !Object.keys(target.events).length) {\n      targets.splice(targetIndex, 1)\n    }\n  }\n\n  function addDelegate(\n    selector: string,\n    context: Node,\n    type: string,\n    listener: ListenerEntry['func'],\n    optionalArg?: any,\n  ) {\n    const options = getOptions(optionalArg)\n    if (!delegatedEvents[type]) {\n      delegatedEvents[type] = []\n\n      // add delegate listener functions\n      for (const doc of documents) {\n        add(doc, type, delegateListener)\n        add(doc, type, delegateUseCapture, true)\n      }\n    }\n\n    const delegates = delegatedEvents[type]\n    let delegate = arr.find(delegates, (d) => d.selector === selector && d.context === context)\n\n    if (!delegate) {\n      delegate = { selector, context, listeners: [] }\n      delegates.push(delegate)\n    }\n\n    delegate.listeners.push({ func: listener, options })\n  }\n\n  function removeDelegate(\n    selector: string,\n    context: Document | Element,\n    type: string,\n    listener?: ListenerEntry['func'],\n    optionalArg?: any,\n  ) {\n    const options = getOptions(optionalArg)\n    const delegates = delegatedEvents[type]\n    let matchFound = false\n    let index: number\n\n    if (!delegates) return\n\n    // count from last index of delegated to 0\n    for (index = delegates.length - 1; index >= 0; index--) {\n      const cur = delegates[index]\n      // look for matching selector and context Node\n      if (cur.selector === selector && cur.context === context) {\n        const { listeners } = cur\n\n        // each item of the listeners array is an array: [function, capture, passive]\n        for (let i = listeners.length - 1; i >= 0; i--) {\n          const entry = listeners[i]\n\n          // check if the listener functions and capture and passive flags match\n          if (entry.func === listener && optionsMatch(entry.options, options)) {\n            // remove the listener from the array of listeners\n            listeners.splice(i, 1)\n\n            // if all listeners for this target have been removed\n            // remove the target from the delegates array\n            if (!listeners.length) {\n              delegates.splice(index, 1)\n\n              // remove delegate function from context\n              remove(context, type, delegateListener)\n              remove(context, type, delegateUseCapture, true)\n            }\n\n            // only remove one listener\n            matchFound = true\n            break\n          }\n        }\n\n        if (matchFound) {\n          break\n        }\n      }\n    }\n  }\n\n  // bound to the interactable context when a DOM event\n  // listener is added to a selector interactable\n  function delegateListener(event: Event | FakeEvent, optionalArg?: any) {\n    const options = getOptions(optionalArg)\n    const fakeEvent = new FakeEvent(event as Event)\n    const delegates = delegatedEvents[event.type]\n    const [eventTarget] = pointerUtils.getEventTargets(event as Event)\n    let element: Node = eventTarget\n\n    // climb up document tree looking for selector matches\n    while (is.element(element)) {\n      for (let i = 0; i < delegates.length; i++) {\n        const cur = delegates[i]\n        const { selector, context } = cur\n\n        if (\n          domUtils.matchesSelector(element, selector) &&\n          domUtils.nodeContains(context, eventTarget) &&\n          domUtils.nodeContains(context, element)\n        ) {\n          const { listeners } = cur\n\n          fakeEvent.currentTarget = element\n\n          for (const entry of listeners) {\n            if (optionsMatch(entry.options, options)) {\n              entry.func(fakeEvent)\n            }\n          }\n        }\n      }\n\n      element = domUtils.parentNode(element)\n    }\n  }\n\n  function delegateUseCapture(this: Element, event: Event | FakeEvent) {\n    return delegateListener.call(this, event, true)\n  }\n\n  // for type inferrence\n  return eventsMethods\n}\n\nclass FakeEvent implements Partial<Event> {\n  currentTarget: Node\n  originalEvent: Event\n  type: string\n\n  constructor(originalEvent: Event) {\n    this.originalEvent = originalEvent\n    // duplicate the event so that currentTarget can be changed\n    pExtend(this, originalEvent)\n  }\n\n  preventOriginalDefault() {\n    this.originalEvent.preventDefault()\n  }\n\n  stopPropagation() {\n    this.originalEvent.stopPropagation()\n  }\n\n  stopImmediatePropagation() {\n    this.originalEvent.stopImmediatePropagation()\n  }\n}\n\nfunction getOptions(param: { [index: string]: any } | boolean): { capture: boolean; passive: boolean } {\n  if (!is.object(param)) {\n    return { capture: !!param, passive: false }\n  }\n\n  return {\n    capture: !!param.capture,\n    passive: !!param.passive,\n  }\n}\n\nfunction optionsMatch(a: Partial<EventOptions> | boolean, b: Partial<EventOptions>) {\n  if (a === b) return true\n\n  if (typeof a === 'boolean') return !!b.capture === a && !!b.passive === false\n\n  return !!a.capture === !!b.capture && !!a.passive === !!b.passive\n}\n\nexport default {\n  id: 'events',\n  install,\n}\n", "import * as dom from '@interactjs/utils/domUtils'\n\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { PointerType } from '@interactjs/core/types'\n\nexport interface SearchDetails {\n  pointer: PointerType\n  pointerId: number\n  pointerType: string\n  eventType: string\n  eventTarget: EventTarget\n  curEventTarget: EventTarget\n  scope: Scope\n}\n\nconst finder = {\n  methodOrder: ['simulationResume', 'mouseOrPen', 'hasPointer', 'idle'] as const,\n\n  search(details: SearchDetails) {\n    for (const method of finder.methodOrder) {\n      const interaction = finder[method](details)\n\n      if (interaction) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // try to resume simulation with a new pointer\n  simulationResume({ pointerType, eventType, eventTarget, scope }: SearchDetails) {\n    if (!/down|start/i.test(eventType)) {\n      return null\n    }\n\n    for (const interaction of scope.interactions.list) {\n      let element = eventTarget as Node\n\n      if (\n        interaction.simulation &&\n        interaction.simulation.allowResume &&\n        interaction.pointerType === pointerType\n      ) {\n        while (element) {\n          // if the element is the interaction element\n          if (element === interaction.element) {\n            return interaction\n          }\n          element = dom.parentNode(element)\n        }\n      }\n    }\n\n    return null\n  },\n\n  // if it's a mouse or pen interaction\n  mouseOrPen({ pointerId, pointerType, eventType, scope }: SearchDetails) {\n    if (pointerType !== 'mouse' && pointerType !== 'pen') {\n      return null\n    }\n\n    let firstNonActive\n\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType) {\n        // if it's a down event, skip interactions with running simulations\n        if (interaction.simulation && !hasPointerId(interaction, pointerId)) {\n          continue\n        }\n\n        // if the interaction is active, return it immediately\n        if (interaction.interacting()) {\n          return interaction\n        }\n        // otherwise save it and look for another active interaction\n        else if (!firstNonActive) {\n          firstNonActive = interaction\n        }\n      }\n    }\n\n    // if no active mouse interaction was found use the first inactive mouse\n    // interaction\n    if (firstNonActive) {\n      return firstNonActive\n    }\n\n    // find any mouse or pen interaction.\n    // ignore the interaction if the eventType is a *down, and a simulation\n    // is active\n    for (const interaction of scope.interactions.list) {\n      if (interaction.pointerType === pointerType && !(/down/i.test(eventType) && interaction.simulation)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get interaction that has this pointer\n  hasPointer({ pointerId, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      if (hasPointerId(interaction, pointerId)) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n\n  // get first idle interaction with a matching pointerType\n  idle({ pointerType, scope }: SearchDetails) {\n    for (const interaction of scope.interactions.list) {\n      // if there's already a pointer held down\n      if (interaction.pointers.length === 1) {\n        const target = interaction.interactable\n        // don't add this pointer if there is a target interactable and it\n        // isn't gesturable\n        if (target && !(target.options.gesture && target.options.gesture.enabled)) {\n          continue\n        }\n      }\n      // maximum of 2 pointers per interaction\n      else if (interaction.pointers.length >= 2) {\n        continue\n      }\n\n      if (!interaction.interacting() && pointerType === interaction.pointerType) {\n        return interaction\n      }\n    }\n\n    return null\n  },\n}\n\nfunction hasPointerId(interaction: Interaction, pointerId: number) {\n  return interaction.pointers.some(({ id }) => id === pointerId)\n}\n\nexport default finder\n", "import browser from '@interactjs/utils/browser'\nimport domObjects from '@interactjs/utils/domObjects'\nimport { nodeContains } from '@interactjs/utils/domUtils'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, Listener } from '@interactjs/core/types'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './interactablePreventDefault'\nimport interactablePreventDefault from './interactablePreventDefault'\nimport InteractionBase from './Interaction'\n/* eslint-enable import/no-duplicates */\nimport type { SearchDetails } from './interactionFinder'\nimport finder from './interactionFinder'\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    Interaction: typeof InteractionBase\n    interactions: {\n      new: <T extends ActionName>(options: any) => InteractionBase<T>\n      list: Array<InteractionBase<ActionName>>\n      listeners: { [type: string]: Listener }\n      docEvents: Array<{ type: string; listener: Listener }>\n      pointerMoveTolerance: number\n    }\n    prevTouchTime: number\n  }\n\n  interface SignalArgs {\n    'interactions:find': {\n      interaction: InteractionBase\n      searchDetails: SearchDetails\n    }\n  }\n}\n\nconst methodNames = [\n  'pointerDown',\n  'pointerMove',\n  'pointerUp',\n  'updatePointer',\n  'removePointer',\n  'windowBlur',\n]\n\nfunction install(scope: Scope) {\n  const listeners = {} as any\n\n  for (const method of methodNames) {\n    listeners[method] = doOnInteractions(method, scope)\n  }\n\n  const pEventTypes = browser.pEventTypes\n  let docEvents: typeof scope.interactions.docEvents\n\n  if (domObjects.PointerEvent) {\n    docEvents = [\n      { type: pEventTypes.down, listener: releasePointersOnRemovedEls },\n      { type: pEventTypes.down, listener: listeners.pointerDown },\n      { type: pEventTypes.move, listener: listeners.pointerMove },\n      { type: pEventTypes.up, listener: listeners.pointerUp },\n      { type: pEventTypes.cancel, listener: listeners.pointerUp },\n    ]\n  } else {\n    docEvents = [\n      { type: 'mousedown', listener: listeners.pointerDown },\n      { type: 'mousemove', listener: listeners.pointerMove },\n      { type: 'mouseup', listener: listeners.pointerUp },\n\n      { type: 'touchstart', listener: releasePointersOnRemovedEls },\n      { type: 'touchstart', listener: listeners.pointerDown },\n      { type: 'touchmove', listener: listeners.pointerMove },\n      { type: 'touchend', listener: listeners.pointerUp },\n      { type: 'touchcancel', listener: listeners.pointerUp },\n    ]\n  }\n\n  docEvents.push({\n    type: 'blur',\n    listener(event) {\n      for (const interaction of scope.interactions.list) {\n        interaction.documentBlur(event)\n      }\n    },\n  })\n\n  // for ignoring browser's simulated mouse events\n  scope.prevTouchTime = 0\n\n  scope.Interaction = class<T extends ActionName> extends InteractionBase<T> {\n    get pointerMoveTolerance() {\n      return scope.interactions.pointerMoveTolerance\n    }\n\n    set pointerMoveTolerance(value) {\n      scope.interactions.pointerMoveTolerance = value\n    }\n\n    _now() {\n      return scope.now()\n    }\n  }\n\n  scope.interactions = {\n    // all active and idle interactions\n    list: [],\n    new<T extends ActionName>(options: { pointerType?: string; scopeFire?: Scope['fire'] }) {\n      options.scopeFire = (name, arg) => scope.fire(name, arg)\n\n      const interaction = new scope.Interaction<T>(options as Required<typeof options>)\n\n      scope.interactions.list.push(interaction)\n      return interaction\n    },\n    listeners,\n    docEvents,\n    pointerMoveTolerance: 1,\n  }\n\n  function releasePointersOnRemovedEls() {\n    // for all inactive touch interactions with pointers down\n    for (const interaction of scope.interactions.list) {\n      if (!interaction.pointerIsDown || interaction.pointerType !== 'touch' || interaction._interacting) {\n        continue\n      }\n\n      // if a pointer is down on an element that is no longer in the DOM tree\n      for (const pointer of interaction.pointers) {\n        if (!scope.documents.some(({ doc }) => nodeContains(doc, pointer.downTarget))) {\n          // remove the pointer from the interaction\n          interaction.removePointer(pointer.pointer, pointer.event)\n        }\n      }\n    }\n  }\n\n  scope.usePlugin(interactablePreventDefault)\n}\n\nfunction doOnInteractions(method: string, scope: Scope) {\n  return function (event: Event) {\n    const interactions = scope.interactions.list\n\n    const pointerType = pointerUtils.getPointerType(event)\n    const [eventTarget, curEventTarget] = pointerUtils.getEventTargets(event)\n    const matches: any[] = [] // [ [pointer, interaction], ...]\n\n    if (/^touch/.test(event.type)) {\n      scope.prevTouchTime = scope.now()\n\n      // @ts-expect-error\n      for (const changedTouch of event.changedTouches) {\n        const pointer = changedTouch\n        const pointerId = pointerUtils.getPointerId(pointer)\n        const searchDetails: SearchDetails = {\n          pointer,\n          pointerId,\n          pointerType,\n          eventType: event.type,\n          eventTarget,\n          curEventTarget,\n          scope,\n        }\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    } else {\n      let invalidPointer = false\n\n      if (!browser.supportsPointerEvent && /mouse/.test(event.type)) {\n        // ignore mouse events while touch interactions are active\n        for (let i = 0; i < interactions.length && !invalidPointer; i++) {\n          invalidPointer = interactions[i].pointerType !== 'mouse' && interactions[i].pointerIsDown\n        }\n\n        // try to ignore mouse events that are simulated by the browser\n        // after a touch event\n        invalidPointer =\n          invalidPointer ||\n          scope.now() - scope.prevTouchTime < 500 ||\n          // on iOS and Firefox Mobile, MouseEvent.timeStamp is zero if simulated\n          event.timeStamp === 0\n      }\n\n      if (!invalidPointer) {\n        const searchDetails = {\n          pointer: event as PointerEvent,\n          pointerId: pointerUtils.getPointerId(event as PointerEvent),\n          pointerType,\n          eventType: event.type,\n          curEventTarget,\n          eventTarget,\n          scope,\n        }\n\n        const interaction = getInteraction(searchDetails)\n\n        matches.push([\n          searchDetails.pointer,\n          searchDetails.eventTarget,\n          searchDetails.curEventTarget,\n          interaction,\n        ])\n      }\n    }\n\n    // eslint-disable-next-line no-shadow\n    for (const [pointer, eventTarget, curEventTarget, interaction] of matches) {\n      interaction[method](pointer, event, eventTarget, curEventTarget)\n    }\n  }\n}\n\nfunction getInteraction(searchDetails: SearchDetails) {\n  const { pointerType, scope } = searchDetails\n\n  const foundInteraction = finder.search(searchDetails)\n  const signalArg = { interaction: foundInteraction, searchDetails }\n\n  scope.fire('interactions:find', signalArg)\n\n  return signalArg.interaction || scope.interactions.new({ pointerType })\n}\n\nfunction onDocSignal<T extends 'scope:add-document' | 'scope:remove-document'>(\n  { doc, scope, options }: SignalArgs[T],\n  eventMethodName: 'add' | 'remove',\n) {\n  const {\n    interactions: { docEvents },\n    events,\n  } = scope\n  const eventMethod = events[eventMethodName]\n\n  if (scope.browser.isIOS && !options.events) {\n    options.events = { passive: false }\n  }\n\n  // delegate event listener\n  for (const eventType in events.delegatedEvents) {\n    eventMethod(doc, eventType, events.delegateListener)\n    eventMethod(doc, eventType, events.delegateUseCapture, true)\n  }\n\n  const eventOptions = options && options.events\n\n  for (const { type, listener } of docEvents) {\n    eventMethod(doc, type, listener, eventOptions)\n  }\n}\n\nconst interactions: Plugin = {\n  id: 'core/interactions',\n  install,\n  listeners: {\n    'scope:add-document': (arg) => onDocSignal(arg, 'add'),\n    'scope:remove-document': (arg) => onDocSignal(arg, 'remove'),\n    'interactable:unset': ({ interactable }, scope) => {\n      // Stop and destroy related interactions when an Interactable is unset\n      for (let i = scope.interactions.list.length - 1; i >= 0; i--) {\n        const interaction = scope.interactions.list[i]\n\n        if (interaction.interactable !== interactable) {\n          continue\n        }\n\n        interaction.stop()\n        scope.fire('interactions:destroy', { interaction })\n        interaction.destroy()\n\n        if (scope.interactions.list.length > 2) {\n          scope.interactions.list.splice(i, 1)\n        }\n      }\n    },\n  },\n  onDocSignal,\n  doOnInteractions,\n  methodNames,\n}\n\nexport default interactions\n", "/* eslint-disable no-dupe-class-members */\nimport * as arr from '@interactjs/utils/arr'\nimport browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport { getElementRect, matchesUpTo, nodeContains, trySelector } from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport isNonNativeEvent from '@interactjs/utils/isNonNativeEvent'\nimport normalizeListeners from '@interactjs/utils/normalizeListeners'\nimport { getWindow } from '@interactjs/utils/window'\n\nimport type { Scope } from '@interactjs/core/scope'\nimport type {\n  ActionMap,\n  ActionMethod,\n  ActionName,\n  Actions,\n  Context,\n  Element,\n  EventTypes,\n  Listeners,\n  ListenersArg,\n  OrBoolean,\n  Target,\n} from '@interactjs/core/types'\n\nimport { Eventable } from './Eventable'\nimport type { ActionDefaults, Defaults, OptionsArg, PerActionDefaults, Options } from './options'\n\ntype IgnoreValue = string | Element | boolean\ntype DeltaSource = 'page' | 'client'\n\nconst enum OnOffMethod {\n  On,\n  Off,\n}\n\n/**\n * ```ts\n * const interactable = interact('.cards')\n *   .draggable({\n *     listeners: { move: event => console.log(event.type, event.pageX, event.pageY) }\n *   })\n *   .resizable({\n *     listeners: { move: event => console.log(event.rect) },\n *     modifiers: [interact.modifiers.restrictEdges({ outer: 'parent' })]\n *   })\n * ```\n */\nexport class Interactable implements Partial<Eventable> {\n  /** @internal */ get _defaults(): Defaults {\n    return {\n      base: {},\n      perAction: {},\n      actions: {} as ActionDefaults,\n    }\n  }\n\n  readonly target: Target\n  /** @internal */ readonly options!: Required<Options>\n  /** @internal */ readonly _actions: Actions\n  /** @internal */ readonly events = new Eventable()\n  /** @internal */ readonly _context: Context\n  /** @internal */ readonly _win: Window\n  /** @internal */ readonly _doc: Document\n  /** @internal */ readonly _scopeEvents: Scope['events']\n\n  constructor(\n    target: Target,\n    options: any,\n    defaultContext: Document | Element,\n    scopeEvents: Scope['events'],\n  ) {\n    this._actions = options.actions\n    this.target = target\n    this._context = options.context || defaultContext\n    this._win = getWindow(trySelector(target) ? this._context : target)\n    this._doc = this._win.document\n    this._scopeEvents = scopeEvents\n\n    this.set(options)\n  }\n\n  setOnEvents(actionName: ActionName, phases: NonNullable<any>) {\n    if (is.func(phases.onstart)) {\n      this.on(`${actionName}start`, phases.onstart)\n    }\n    if (is.func(phases.onmove)) {\n      this.on(`${actionName}move`, phases.onmove)\n    }\n    if (is.func(phases.onend)) {\n      this.on(`${actionName}end`, phases.onend)\n    }\n    if (is.func(phases.oninertiastart)) {\n      this.on(`${actionName}inertiastart`, phases.oninertiastart)\n    }\n\n    return this\n  }\n\n  updatePerActionListeners(actionName: ActionName, prev: Listeners | undefined, cur: Listeners | undefined) {\n    const actionFilter = (this._actions.map[actionName] as { filterEventType?: (type: string) => boolean })\n      ?.filterEventType\n    const filter = (type: string) =>\n      (actionFilter == null || actionFilter(type)) && isNonNativeEvent(type, this._actions)\n\n    if (is.array(prev) || is.object(prev)) {\n      this._onOff(OnOffMethod.Off, actionName, prev, undefined, filter)\n    }\n\n    if (is.array(cur) || is.object(cur)) {\n      this._onOff(OnOffMethod.On, actionName, cur, undefined, filter)\n    }\n  }\n\n  setPerAction(actionName: ActionName, options: OrBoolean<Options>) {\n    const defaults = this._defaults\n\n    // for all the default per-action options\n    for (const optionName_ in options) {\n      const optionName = optionName_ as keyof PerActionDefaults\n      const actionOptions = this.options[actionName]\n      const optionValue: any = options[optionName]\n\n      // remove old event listeners and add new ones\n      if (optionName === 'listeners') {\n        this.updatePerActionListeners(actionName, actionOptions.listeners, optionValue as Listeners)\n      }\n\n      // if the option value is an array\n      if (is.array(optionValue)) {\n        ;(actionOptions[optionName] as any) = arr.from(optionValue)\n      }\n      // if the option value is an object\n      else if (is.plainObject(optionValue)) {\n        // copy the object\n        ;(actionOptions[optionName] as any) = extend(\n          actionOptions[optionName] || ({} as any),\n          clone(optionValue),\n        )\n\n        // set anabled field to true if it exists in the defaults\n        if (\n          is.object(defaults.perAction[optionName]) &&\n          'enabled' in (defaults.perAction[optionName] as any)\n        ) {\n          ;(actionOptions[optionName] as any).enabled = optionValue.enabled !== false\n        }\n      }\n      // if the option value is a boolean and the default is an object\n      else if (is.bool(optionValue) && is.object(defaults.perAction[optionName])) {\n        ;(actionOptions[optionName] as any).enabled = optionValue\n      }\n      // if it's anything else, do a plain assignment\n      else {\n        ;(actionOptions[optionName] as any) = optionValue\n      }\n    }\n  }\n\n  /**\n   * The default function to get an Interactables bounding rect. Can be\n   * overridden using {@link Interactable.rectChecker}.\n   *\n   * @param {Element} [element] The element to measure.\n   * @return {Rect} The object's bounding rectangle.\n   */\n  getRect(element: Element) {\n    element = element || (is.element(this.target) ? this.target : null)\n\n    if (is.string(this.target)) {\n      element = element || this._context.querySelector(this.target)\n    }\n\n    return getElementRect(element)\n  }\n\n  /**\n   * Returns or sets the function used to calculate the interactable's\n   * element's rectangle\n   *\n   * @param {function} [checker] A function which returns this Interactable's\n   * bounding rectangle. See {@link Interactable.getRect}\n   * @return {function | object} The checker function or this Interactable\n   */\n  rectChecker(): (element: Element) => any | null\n  rectChecker(checker: (element: Element) => any): this\n  rectChecker(checker?: (element: Element) => any) {\n    if (is.func(checker)) {\n      this.getRect = (element) => {\n        const rect = extend({}, checker.apply(this, element))\n\n        if (!(('width' in rect) as unknown)) {\n          rect.width = rect.right - rect.left\n          rect.height = rect.bottom - rect.top\n        }\n\n        return rect\n      }\n\n      return this\n    }\n\n    if (checker === null) {\n      delete (this as Partial<typeof this>).getRect\n\n      return this\n    }\n\n    return this.getRect\n  }\n\n  /** @internal */\n  _backCompatOption(optionName: keyof Options, newValue: any) {\n    if (trySelector(newValue) || is.object(newValue)) {\n      ;(this.options[optionName] as any) = newValue\n\n      for (const action in this._actions.map) {\n        ;(this.options[action as keyof ActionMap] as any)[optionName] = newValue\n      }\n\n      return this\n    }\n\n    return this.options[optionName]\n  }\n\n  /**\n   * Gets or sets the origin of the Interactable's element.  The x and y\n   * of the origin will be subtracted from action event coordinates.\n   *\n   * @param {Element | object | string} [origin] An HTML or SVG Element whose\n   * rect will be used, an object eg. { x: 0, y: 0 } or string 'parent', 'self'\n   * or any CSS selector\n   *\n   * @return {object} The current origin or this Interactable\n   */\n  origin(newValue: any) {\n    return this._backCompatOption('origin', newValue)\n  }\n\n  /**\n   * Returns or sets the mouse coordinate types used to calculate the\n   * movement of the pointer.\n   *\n   * @param {string} [newValue] Use 'client' if you will be scrolling while\n   * interacting; Use 'page' if you want autoScroll to work\n   * @return {string | object} The current deltaSource or this Interactable\n   */\n  deltaSource(): DeltaSource\n  deltaSource(newValue: DeltaSource): this\n  deltaSource(newValue?: DeltaSource) {\n    if (newValue === 'page' || newValue === 'client') {\n      this.options.deltaSource = newValue\n\n      return this\n    }\n\n    return this.options.deltaSource\n  }\n\n  /** @internal */\n  getAllElements(): Element[] {\n    const { target } = this\n\n    if (is.string(target)) {\n      return Array.from(this._context.querySelectorAll(target))\n    }\n\n    if (is.func(target) && (target as any).getAllElements) {\n      return (target as any).getAllElements()\n    }\n\n    return is.element(target) ? [target] : []\n  }\n\n  /**\n   * Gets the selector context Node of the Interactable. The default is\n   * `window.document`.\n   *\n   * @return {Node} The context Node of this Interactable\n   */\n  context() {\n    return this._context\n  }\n\n  inContext(element: Document | Node) {\n    return this._context === element.ownerDocument || nodeContains(this._context, element)\n  }\n\n  /** @internal */\n  testIgnoreAllow(\n    this: Interactable,\n    options: { ignoreFrom?: IgnoreValue; allowFrom?: IgnoreValue },\n    targetNode: Node,\n    eventTarget: Node,\n  ) {\n    return (\n      !this.testIgnore(options.ignoreFrom, targetNode, eventTarget) &&\n      this.testAllow(options.allowFrom, targetNode, eventTarget)\n    )\n  }\n\n  /** @internal */\n  testAllow(this: Interactable, allowFrom: IgnoreValue | undefined, targetNode: Node, element: Node) {\n    if (!allowFrom) {\n      return true\n    }\n\n    if (!is.element(element)) {\n      return false\n    }\n\n    if (is.string(allowFrom)) {\n      return matchesUpTo(element, allowFrom, targetNode)\n    } else if (is.element(allowFrom)) {\n      return nodeContains(allowFrom, element)\n    }\n\n    return false\n  }\n\n  /** @internal */\n  testIgnore(this: Interactable, ignoreFrom: IgnoreValue | undefined, targetNode: Node, element: Node) {\n    if (!ignoreFrom || !is.element(element)) {\n      return false\n    }\n\n    if (is.string(ignoreFrom)) {\n      return matchesUpTo(element, ignoreFrom, targetNode)\n    } else if (is.element(ignoreFrom)) {\n      return nodeContains(ignoreFrom, element)\n    }\n\n    return false\n  }\n\n  /**\n   * Calls listeners for the given InteractEvent type bound globally\n   * and directly to this Interactable\n   *\n   * @param {InteractEvent} iEvent The InteractEvent object to be fired on this\n   * Interactable\n   * @return {Interactable} this Interactable\n   */\n  fire<E extends { type: string }>(iEvent: E) {\n    this.events.fire(iEvent)\n\n    return this\n  }\n\n  /** @internal */\n  _onOff(\n    method: OnOffMethod,\n    typeArg: EventTypes,\n    listenerArg?: ListenersArg | null,\n    options?: any,\n    filter?: (type: string) => boolean,\n  ) {\n    if (is.object(typeArg) && !is.array(typeArg)) {\n      options = listenerArg\n      listenerArg = null\n    }\n\n    const listeners = normalizeListeners(typeArg, listenerArg, filter)\n\n    for (let type in listeners) {\n      if (type === 'wheel') {\n        type = browser.wheelEvent\n      }\n\n      for (const listener of listeners[type]) {\n        // if it is an action event type\n        if (isNonNativeEvent(type, this._actions)) {\n          this.events[method === OnOffMethod.On ? 'on' : 'off'](type, listener)\n        }\n        // delegated event\n        else if (is.string(this.target)) {\n          this._scopeEvents[method === OnOffMethod.On ? 'addDelegate' : 'removeDelegate'](\n            this.target,\n            this._context,\n            type,\n            listener,\n            options,\n          )\n        }\n        // remove listener from this Interactable's element\n        else {\n          this._scopeEvents[method === OnOffMethod.On ? 'add' : 'remove'](\n            this.target,\n            type,\n            listener,\n            options,\n          )\n        }\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Binds a listener for an InteractEvent, pointerEvent or DOM event.\n   *\n   * @param {string | array | object} types The types of events to listen\n   * for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * addEventListener\n   * @return {Interactable} This Interactable\n   */\n  on(types: EventTypes, listener?: ListenersArg, options?: any) {\n    return this._onOff(OnOffMethod.On, types, listener, options)\n  }\n\n  /**\n   * Removes an InteractEvent, pointerEvent or DOM event listener.\n   *\n   * @param {string | array | object} types The types of events that were\n   * listened for\n   * @param {function | array | object} [listener] The event listener function(s)\n   * @param {object | boolean} [options] options object or useCapture flag for\n   * removeEventListener\n   * @return {Interactable} This Interactable\n   */\n  off(types: string | string[] | EventTypes, listener?: ListenersArg, options?: any) {\n    return this._onOff(OnOffMethod.Off, types, listener, options)\n  }\n\n  /**\n   * Reset the options of this Interactable\n   *\n   * @param {object} options The new settings to apply\n   * @return {object} This Interactable\n   */\n  set(options: OptionsArg) {\n    const defaults = this._defaults\n\n    if (!is.object(options)) {\n      options = {}\n    }\n\n    ;(this.options as Required<Options>) = clone(defaults.base) as Required<Options>\n\n    for (const actionName_ in this._actions.methodDict) {\n      const actionName = actionName_ as ActionName\n      const methodName = this._actions.methodDict[actionName]\n\n      this.options[actionName] = {}\n      this.setPerAction(actionName, extend(extend({}, defaults.perAction), defaults.actions[actionName]))\n      ;(this[methodName] as ActionMethod<unknown>)(options[actionName])\n    }\n\n    for (const setting in options) {\n      if (setting === 'getRect') {\n        this.rectChecker(options.getRect)\n        continue\n      }\n\n      if (is.func((this as any)[setting])) {\n        ;(this as any)[setting](options[setting as keyof typeof options])\n      }\n    }\n\n    return this\n  }\n\n  /**\n   * Remove this interactable from the list of interactables and remove it's\n   * action capabilities and event listeners\n   */\n  unset() {\n    if (is.string(this.target)) {\n      // remove delegated events\n      for (const type in this._scopeEvents.delegatedEvents) {\n        const delegated = this._scopeEvents.delegatedEvents[type]\n\n        for (let i = delegated.length - 1; i >= 0; i--) {\n          const { selector, context, listeners } = delegated[i]\n\n          if (selector === this.target && context === this._context) {\n            delegated.splice(i, 1)\n          }\n\n          for (let l = listeners.length - 1; l >= 0; l--) {\n            this._scopeEvents.removeDelegate(\n              this.target,\n              this._context,\n              type,\n              listeners[l][0],\n              listeners[l][1],\n            )\n          }\n        }\n      }\n    } else {\n      this._scopeEvents.remove(this.target, 'all')\n    }\n  }\n}\n", "import * as arr from '@interactjs/utils/arr'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nimport type { Interactable } from '@interactjs/core/Interactable'\nimport type { OptionsArg, Options } from '@interactjs/core/options'\nimport type { Scope } from '@interactjs/core/scope'\nimport type { Target } from '@interactjs/core/types'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactable:new': {\n      interactable: Interactable\n      target: Target\n      options: OptionsArg\n      win: Window\n    }\n  }\n}\n\nexport class InteractableSet {\n  // all set interactables\n  list: Interactable[] = []\n\n  selectorMap: {\n    [selector: string]: Interactable[]\n  } = {}\n\n  scope: Scope\n\n  constructor(scope: Scope) {\n    this.scope = scope\n    scope.addListeners({\n      'interactable:unset': ({ interactable }) => {\n        const { target } = interactable\n        const interactablesOnTarget: Interactable[] = is.string(target)\n          ? this.selectorMap[target]\n          : (target as any)[this.scope.id]\n\n        const targetIndex = arr.findIndex(interactablesOnTarget, (i) => i === interactable)\n        interactablesOnTarget.splice(targetIndex, 1)\n      },\n    })\n  }\n\n  new(target: Target, options?: any): Interactable {\n    options = extend(options || {}, {\n      actions: this.scope.actions,\n    })\n    const interactable = new this.scope.Interactable(target, options, this.scope.document, this.scope.events)\n\n    this.scope.addDocument(interactable._doc)\n    this.list.push(interactable)\n\n    if (is.string(target)) {\n      if (!this.selectorMap[target]) {\n        this.selectorMap[target] = []\n      }\n      this.selectorMap[target].push(interactable)\n    } else {\n      if (!(interactable.target as any)[this.scope.id]) {\n        Object.defineProperty(target, this.scope.id, {\n          value: [],\n          configurable: true,\n        })\n      }\n\n      ;(target as any)[this.scope.id].push(interactable)\n    }\n\n    this.scope.fire('interactable:new', {\n      target,\n      options,\n      interactable,\n      win: this.scope._win,\n    })\n\n    return interactable\n  }\n\n  getExisting(target: Target, options?: Options) {\n    const context = (options && options.context) || this.scope.document\n    const isSelector = is.string(target)\n    const interactablesOnTarget: Interactable[] = isSelector\n      ? this.selectorMap[target as string]\n      : (target as any)[this.scope.id]\n\n    if (!interactablesOnTarget) return undefined\n\n    return arr.find(\n      interactablesOnTarget,\n      (interactable) =>\n        interactable._context === context && (isSelector || interactable.inContext(target as any)),\n    )\n  }\n\n  forEachMatch<T>(node: Node, callback: (interactable: Interactable) => T): T | void {\n    for (const interactable of this.list) {\n      let ret: T\n\n      if (\n        (is.string(interactable.target)\n          ? // target is a selector and the element matches\n            is.element(node) && domUtils.matchesSelector(node, interactable.target)\n          : // target is the element\n            node === interactable.target) &&\n        // the element is in context\n        interactable.inContext(node)\n      ) {\n        ret = callback(interactable)\n      }\n\n      if (ret !== undefined) {\n        return ret\n      }\n    }\n  }\n}\n", "import browser from '@interactjs/utils/browser'\nimport clone from '@interactjs/utils/clone'\nimport domObjects from '@interactjs/utils/domObjects'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport raf from '@interactjs/utils/raf'\nimport * as win from '@interactjs/utils/window'\n\nimport type Interaction from '@interactjs/core/Interaction'\n\nimport { Eventable } from './Eventable'\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './events'\nimport './interactions'\nimport events from './events'\nimport { Interactable as InteractableBase } from './Interactable'\nimport { InteractableSet } from './InteractableSet'\nimport { InteractEvent } from './InteractEvent'\nimport interactions from './interactions'\n/* eslint-enable import/no-duplicates */\nimport { createInteractStatic } from './InteractStatic'\nimport type { OptionsArg } from './options'\nimport { defaults } from './options'\nimport type { Actions } from './types'\n\nexport interface SignalArgs {\n  'scope:add-document': DocSignalArg\n  'scope:remove-document': DocSignalArg\n  'interactable:unset': { interactable: InteractableBase }\n  'interactable:set': { interactable: InteractableBase; options: OptionsArg }\n  'interactions:destroy': { interaction: Interaction }\n}\n\nexport type ListenerName = keyof SignalArgs\n\nexport type ListenerMap = {\n  [P in ListenerName]?: (arg: SignalArgs[P], scope: Scope, signalName: P) => void | boolean\n}\n\ninterface DocSignalArg {\n  doc: Document\n  window: Window\n  scope: Scope\n  options: Record<string, any>\n}\n\nexport interface Plugin {\n  [key: string]: any\n  id?: string\n  listeners?: ListenerMap\n  before?: string[]\n  install?(scope: Scope, options?: any): void\n}\n\n/** @internal */\nexport class Scope {\n  id = `__interact_scope_${Math.floor(Math.random() * 100)}`\n  isInitialized = false\n  listenerMaps: Array<{\n    map: ListenerMap\n    id?: string\n  }> = []\n\n  browser = browser\n  defaults = clone(defaults) as typeof defaults\n  Eventable = Eventable\n  actions: Actions = {\n    map: {},\n    phases: {\n      start: true,\n      move: true,\n      end: true,\n    },\n    methodDict: {} as any,\n    phaselessTypes: {},\n  }\n\n  interactStatic = createInteractStatic(this)\n  InteractEvent = InteractEvent\n  Interactable: typeof InteractableBase\n  interactables = new InteractableSet(this)\n\n  // main window\n  _win!: Window\n\n  // main document\n  document!: Document\n\n  // main window\n  window!: Window\n\n  // all documents being listened to\n  documents: Array<{ doc: Document; options: any }> = []\n\n  _plugins: {\n    list: Plugin[]\n    map: { [id: string]: Plugin }\n  } = {\n    list: [],\n    map: {},\n  }\n\n  constructor() {\n    const scope = this\n\n    this.Interactable = class extends InteractableBase {\n      get _defaults() {\n        return scope.defaults\n      }\n\n      set<T extends InteractableBase>(this: T, options: OptionsArg) {\n        super.set(options)\n\n        scope.fire('interactable:set', {\n          options,\n          interactable: this,\n        })\n\n        return this\n      }\n\n      unset(this: InteractableBase) {\n        super.unset()\n\n        const index = scope.interactables.list.indexOf(this)\n        if (index < 0) return\n\n        scope.interactables.list.splice(index, 1)\n        scope.fire('interactable:unset', { interactable: this })\n      }\n    }\n  }\n\n  addListeners(map: ListenerMap, id?: string) {\n    this.listenerMaps.push({ id, map })\n  }\n\n  fire<T extends ListenerName>(name: T, arg: SignalArgs[T]): void | false {\n    for (const {\n      map: { [name]: listener },\n    } of this.listenerMaps) {\n      if (!!listener && listener(arg as any, this, name as never) === false) {\n        return false\n      }\n    }\n  }\n\n  onWindowUnload = (event: BeforeUnloadEvent) => this.removeDocument(event.target as Document)\n\n  init(window: Window | typeof globalThis) {\n    return this.isInitialized ? this : initScope(this, window)\n  }\n\n  pluginIsInstalled(plugin: Plugin) {\n    const { id } = plugin\n    return id ? !!this._plugins.map[id] : this._plugins.list.indexOf(plugin) !== -1\n  }\n\n  usePlugin(plugin: Plugin, options?: { [key: string]: any }) {\n    if (!this.isInitialized) {\n      return this\n    }\n\n    if (this.pluginIsInstalled(plugin)) {\n      return this\n    }\n\n    if (plugin.id) {\n      this._plugins.map[plugin.id] = plugin\n    }\n    this._plugins.list.push(plugin)\n\n    if (plugin.install) {\n      plugin.install(this, options)\n    }\n\n    if (plugin.listeners && plugin.before) {\n      let index = 0\n      const len = this.listenerMaps.length\n      const before = plugin.before.reduce((acc, id) => {\n        acc[id] = true\n        acc[pluginIdRoot(id)] = true\n        return acc\n      }, {})\n\n      for (; index < len; index++) {\n        const otherId = this.listenerMaps[index].id\n\n        if (otherId && (before[otherId] || before[pluginIdRoot(otherId)])) {\n          break\n        }\n      }\n\n      this.listenerMaps.splice(index, 0, { id: plugin.id, map: plugin.listeners })\n    } else if (plugin.listeners) {\n      this.listenerMaps.push({ id: plugin.id, map: plugin.listeners })\n    }\n\n    return this\n  }\n\n  addDocument(doc: Document, options?: any): void | false {\n    // do nothing if document is already known\n    if (this.getDocIndex(doc) !== -1) {\n      return false\n    }\n\n    const window = win.getWindow(doc)\n\n    options = options ? extend({}, options) : {}\n\n    this.documents.push({ doc, options })\n    this.events.documents.push(doc)\n\n    // don't add an unload event for the main document\n    // so that the page may be cached in browser history\n    if (doc !== this.document) {\n      this.events.add(window, 'unload', this.onWindowUnload)\n    }\n\n    this.fire('scope:add-document', { doc, window, scope: this, options })\n  }\n\n  removeDocument(doc: Document) {\n    const index = this.getDocIndex(doc)\n\n    const window = win.getWindow(doc)\n    const options = this.documents[index].options\n\n    this.events.remove(window, 'unload', this.onWindowUnload)\n\n    this.documents.splice(index, 1)\n    this.events.documents.splice(index, 1)\n\n    this.fire('scope:remove-document', { doc, window, scope: this, options })\n  }\n\n  getDocIndex(doc: Document) {\n    for (let i = 0; i < this.documents.length; i++) {\n      if (this.documents[i].doc === doc) {\n        return i\n      }\n    }\n\n    return -1\n  }\n\n  getDocOptions(doc: Document) {\n    const docIndex = this.getDocIndex(doc)\n\n    return docIndex === -1 ? null : this.documents[docIndex].options\n  }\n\n  now() {\n    return (((this.window as any).Date as typeof Date) || Date).now()\n  }\n}\n\n// Keep Scope class internal, but expose minimal interface to avoid broken types when Scope is stripped out\nexport interface Scope {\n  fire<T extends ListenerName>(name: T, arg: SignalArgs[T]): void | false\n}\n\n/** @internal */\nexport function initScope(scope: Scope, window: Window | typeof globalThis) {\n  scope.isInitialized = true\n\n  if (is.window(window)) {\n    win.init(window)\n  }\n\n  domObjects.init(window)\n  browser.init(window)\n  raf.init(window)\n\n  // @ts-expect-error\n  scope.window = window\n  scope.document = window.document\n\n  scope.usePlugin(interactions)\n  scope.usePlugin(events)\n\n  return scope\n}\n\nfunction pluginIdRoot(id: string) {\n  return id && id.replace(/\\/.*$/, '')\n}\n", "import browser from '@interactjs/utils/browser'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport is from '@interactjs/utils/is'\nimport isNonNativeEvent from '@interactjs/utils/isNonNativeEvent'\nimport { warnOnce } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Context, EventTypes, Listener, ListenersArg, Target } from '@interactjs/core/types'\n\nimport type { Interactable } from './Interactable'\nimport type { Options } from './options'\n\n/**\n * ```js\n * interact('#draggable').draggable(true)\n *\n * var rectables = interact('rect')\n * rectables\n *   .gesturable(true)\n *   .on('gesturemove', function (event) {\n *       // ...\n *   })\n * ```\n *\n * The methods of this variable can be used to set elements as interactables\n * and also to change various default settings.\n *\n * Calling it as a function and passing an element or a valid CSS selector\n * string returns an Interactable object which has various methods to configure\n * it.\n *\n * @param {Element | string} target The HTML or SVG Element to interact with\n * or CSS selector\n * @return {Interactable}\n */\nexport interface InteractStatic {\n  (target: Target, options?: Options): Interactable\n  getPointerAverage: typeof pointerUtils.pointerAverage\n  getTouchBBox: typeof pointerUtils.touchBBox\n  getTouchDistance: typeof pointerUtils.touchDistance\n  getTouchAngle: typeof pointerUtils.touchAngle\n  getElementRect: typeof domUtils.getElementRect\n  getElementClientRect: typeof domUtils.getElementClientRect\n  matchesSelector: typeof domUtils.matchesSelector\n  closest: typeof domUtils.closest\n  /** @internal */ globalEvents: any\n  version: string\n  /** @internal */ scope: Scope\n  /**\n   * Use a plugin\n   */\n  use(\n    plugin: Plugin,\n    options?: {\n      [key: string]: any\n    },\n  ): any\n  /**\n   * Check if an element or selector has been set with the `interact(target)`\n   * function\n   *\n   * @return {boolean} Indicates if the element or CSS selector was previously\n   * passed to interact\n   */\n  isSet(\n    /* The Element or string being searched for */\n    target: Target,\n    options?: any,\n  ): boolean\n  on(type: string | EventTypes, listener: ListenersArg, options?: object): any\n  off(type: EventTypes, listener: any, options?: object): any\n  debug(): any\n  /**\n   * Whether or not the browser supports touch input\n   */\n  supportsTouch(): boolean\n  /**\n   * Whether or not the browser supports PointerEvents\n   */\n  supportsPointerEvent(): boolean\n  /**\n   * Cancels all interactions (end events are not fired)\n   */\n  stop(): InteractStatic\n  /**\n   * Returns or sets the distance the pointer must be moved before an action\n   * sequence occurs. This also affects tolerance for tap events.\n   */\n  pointerMoveTolerance(\n    /** The movement from the start position must be greater than this value */\n    newValue?: number,\n  ): InteractStatic | number\n  addDocument(doc: Document, options?: object): void\n  removeDocument(doc: Document): void\n}\n\nexport function createInteractStatic(scope: Scope): InteractStatic {\n  const interact = ((target: Target, options: Options) => {\n    let interactable = scope.interactables.getExisting(target, options)\n\n    if (!interactable) {\n      interactable = scope.interactables.new(target, options)\n      interactable.events.global = interact.globalEvents\n    }\n\n    return interactable\n  }) as InteractStatic\n\n  // expose the functions used to calculate multi-touch properties\n  interact.getPointerAverage = pointerUtils.pointerAverage\n  interact.getTouchBBox = pointerUtils.touchBBox\n  interact.getTouchDistance = pointerUtils.touchDistance\n  interact.getTouchAngle = pointerUtils.touchAngle\n\n  interact.getElementRect = domUtils.getElementRect\n  interact.getElementClientRect = domUtils.getElementClientRect\n  interact.matchesSelector = domUtils.matchesSelector\n  interact.closest = domUtils.closest\n\n  interact.globalEvents = {} as any\n\n  // eslint-disable-next-line no-undef\n  interact.version = process.env.npm_package_version\n  interact.scope = scope\n  interact.use = function (plugin, options) {\n    this.scope.usePlugin(plugin, options)\n\n    return this\n  }\n\n  interact.isSet = function (target: Target, options?: { context?: Context }): boolean {\n    return !!this.scope.interactables.get(target, options && options.context)\n  }\n\n  interact.on = warnOnce(function on(type: string | EventTypes, listener: ListenersArg, options?: object) {\n    if (is.string(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/)\n    }\n\n    if (is.array(type)) {\n      for (const eventType of type as any[]) {\n        this.on(eventType, listener, options)\n      }\n\n      return this\n    }\n\n    if (is.object(type)) {\n      for (const prop in type) {\n        this.on(prop, (type as any)[prop], listener)\n      }\n\n      return this\n    }\n\n    // if it is an InteractEvent type, add listener to globalEvents\n    if (isNonNativeEvent(type, this.scope.actions)) {\n      // if this type of event was never bound\n      if (!this.globalEvents[type]) {\n        this.globalEvents[type] = [listener]\n      } else {\n        this.globalEvents[type].push(listener)\n      }\n    }\n    // If non InteractEvent type, addEventListener to document\n    else {\n      this.scope.events.add(this.scope.document, type, listener as Listener, { options })\n    }\n\n    return this\n  }, 'The interact.on() method is being deprecated')\n\n  interact.off = warnOnce(function off(type: EventTypes, listener: any, options?: object) {\n    if (is.string(type) && type.search(' ') !== -1) {\n      type = type.trim().split(/ +/)\n    }\n\n    if (is.array(type)) {\n      for (const eventType of type) {\n        this.off(eventType, listener, options)\n      }\n\n      return this\n    }\n\n    if (is.object(type)) {\n      for (const prop in type) {\n        this.off(prop, type[prop], listener)\n      }\n\n      return this\n    }\n\n    if (isNonNativeEvent(type, this.scope.actions)) {\n      let index: number\n\n      if (type in this.globalEvents && (index = this.globalEvents[type].indexOf(listener)) !== -1) {\n        this.globalEvents[type].splice(index, 1)\n      }\n    } else {\n      this.scope.events.remove(this.scope.document, type, listener, options)\n    }\n\n    return this\n  }, 'The interact.off() method is being deprecated')\n\n  interact.debug = function () {\n    return this.scope\n  }\n\n  interact.supportsTouch = function () {\n    return browser.supportsTouch\n  }\n\n  interact.supportsPointerEvent = function () {\n    return browser.supportsPointerEvent\n  }\n\n  interact.stop = function () {\n    for (const interaction of this.scope.interactions.list) {\n      interaction.stop()\n    }\n\n    return this\n  }\n\n  interact.pointerMoveTolerance = function (newValue?: number) {\n    if (is.number(newValue)) {\n      this.scope.interactions.pointerMoveTolerance = newValue\n\n      return this\n    }\n\n    return this.scope.interactions.pointerMoveTolerance\n  }\n\n  interact.addDocument = function (doc: Document, options?: object) {\n    this.scope.addDocument(doc, options)\n  }\n\n  interact.removeDocument = function (doc: Document) {\n    this.scope.removeDocument(doc)\n  }\n\n  return interact\n}\n", "import { Scope } from '@interactjs/core/scope'\n\nconst scope = new Scope()\n\nconst interact = scope.interactStatic\n\nexport default interact\n\nconst _global = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : this\nscope.init(_global)\n", "export default () => {}\n", "export default () => {}\n", "import type { Rect, Point } from '@interactjs/core/types'\nimport type { SnapFunction, SnapTarget } from '@interactjs/modifiers/snap/pointer'\n\nexport interface GridOptionsBase {\n  range?: number\n  limits?: Rect\n  offset?: Point\n}\nexport interface GridOptionsXY extends GridOptionsBase {\n  x: number\n  y: number\n}\nexport interface GridOptionsTopLeft extends GridOptionsBase {\n  top?: number\n  left?: number\n}\nexport interface GridOptionsBottomRight extends GridOptionsBase {\n  bottom?: number\n  right?: number\n}\nexport interface GridOptionsWidthHeight extends GridOptionsBase {\n  width?: number\n  height?: number\n}\n\nexport type GridOptions = GridOptionsXY | GridOptionsTopLeft | GridOptionsBottomRight | GridOptionsWidthHeight\n\nexport default (grid: GridOptions) => {\n  const coordFields = (\n    [\n      ['x', 'y'],\n      ['left', 'top'],\n      ['right', 'bottom'],\n      ['width', 'height'],\n    ] as const\n  ).filter(([xField, yField]) => xField in grid || yField in grid)\n\n  const gridFunc: SnapFunction & {\n    grid: typeof grid\n    coordFields: typeof coordFields\n  } = (x, y) => {\n    const {\n      range,\n      limits = {\n        left: -Infinity,\n        right: Infinity,\n        top: -Infinity,\n        bottom: Infinity,\n      },\n      offset = { x: 0, y: 0 },\n    } = grid\n\n    const result: SnapTarget & {\n      grid: typeof grid\n    } = { range, grid, x: null as number, y: null as number }\n\n    for (const [xField, yField] of coordFields) {\n      const gridx = Math.round((x - offset.x) / (grid as any)[xField])\n      const gridy = Math.round((y - offset.y) / (grid as any)[yField])\n\n      result[xField] = Math.max(limits.left, Math.min(limits.right, gridx * (grid as any)[xField] + offset.x))\n      result[yField] = Math.max(limits.top, Math.min(limits.bottom, gridy * (grid as any)[yField] + offset.y))\n    }\n\n    return result\n  }\n\n  gridFunc.grid = grid\n  gridFunc.coordFields = coordFields\n\n  return gridFunc\n}\n", "import type { Plugin } from '@interactjs/core/scope'\nimport extend from '@interactjs/utils/extend'\n\nimport * as allSnappers from './all'\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    snappers: typeof allSnappers\n    createSnapGrid: typeof allSnappers.grid\n  }\n}\n\nconst snappersPlugin: Plugin = {\n  id: 'snappers',\n  install(scope) {\n    const { interactStatic: interact } = scope\n\n    interact.snappers = extend(interact.snappers || {}, allSnappers)\n    interact.createSnapGrid = interact.snappers.grid\n  },\n}\n\nexport default snappersPlugin\n", "/**\n * @module modifiers/aspectRatio\n *\n * @description\n * This modifier forces elements to be resized with a specified dx/dy ratio.\n *\n * ```js\n * interact(target).resizable({\n *   modifiers: [\n *     interact.modifiers.snapSize({\n *       targets: [ interact.snappers.grid({ x: 20, y: 20 }) ],\n *     }),\n *     interact.aspectRatio({ ratio: 'preserve' }),\n *   ],\n * });\n * ```\n */\n\nimport type { Point, Rect, EdgeOptions } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport { addEdges } from '@interactjs/utils/rect'\n\nimport { makeModifier } from './base'\nimport { Modification } from './Modification'\nimport type { Modifier, ModifierModule, ModifierState } from './types'\n\nexport interface AspectRatioOptions {\n  ratio?: number | 'preserve'\n  equalDelta?: boolean\n  modifiers?: Modifier[]\n  enabled?: boolean\n}\n\nexport type AspectRatioState = ModifierState<\n  AspectRatioOptions,\n  {\n    startCoords: Point\n    startRect: Rect\n    linkedEdges: EdgeOptions\n    ratio: number\n    equalDelta: boolean\n    xIsPrimaryAxis: boolean\n    edgeSign: {\n      x: number\n      y: number\n    }\n    subModification: Modification\n  }\n>\n\nconst aspectRatio: ModifierModule<AspectRatioOptions, AspectRatioState> = {\n  start(arg) {\n    const { state, rect, edges, pageCoords: coords } = arg\n    let { ratio, enabled } = state.options\n    const { equalDelta, modifiers } = state.options\n\n    if (ratio === 'preserve') {\n      ratio = rect.width / rect.height\n    }\n\n    state.startCoords = extend({}, coords)\n    state.startRect = extend({}, rect)\n    state.ratio = ratio\n    state.equalDelta = equalDelta\n\n    const linkedEdges = (state.linkedEdges = {\n      top: edges.top || (edges.left && !edges.bottom),\n      left: edges.left || (edges.top && !edges.right),\n      bottom: edges.bottom || (edges.right && !edges.top),\n      right: edges.right || (edges.bottom && !edges.left),\n    })\n\n    state.xIsPrimaryAxis = !!(edges.left || edges.right)\n\n    if (state.equalDelta) {\n      const sign = (linkedEdges.left ? 1 : -1) * (linkedEdges.top ? 1 : -1)\n      state.edgeSign = {\n        x: sign,\n        y: sign,\n      }\n    } else {\n      state.edgeSign = {\n        x: linkedEdges.left ? -1 : 1,\n        y: linkedEdges.top ? -1 : 1,\n      }\n    }\n\n    if (enabled !== false) {\n      extend(edges, linkedEdges)\n    }\n\n    if (!modifiers?.length) return\n\n    const subModification = new Modification(arg.interaction)\n\n    subModification.copyFrom(arg.interaction.modification)\n    subModification.prepareStates(modifiers)\n\n    state.subModification = subModification\n    subModification.startAll({ ...arg })\n  },\n\n  set(arg) {\n    const { state, rect, coords } = arg\n    const { linkedEdges } = state\n    const initialCoords = extend({}, coords)\n    const aspectMethod = state.equalDelta ? setEqualDelta : setRatio\n\n    extend(arg.edges, linkedEdges)\n    aspectMethod(state, state.xIsPrimaryAxis, coords, rect)\n\n    if (!state.subModification) {\n      return null\n    }\n\n    const correctedRect = extend({}, rect)\n\n    addEdges(linkedEdges, correctedRect, {\n      x: coords.x - initialCoords.x,\n      y: coords.y - initialCoords.y,\n    })\n\n    const result = state.subModification.setAll({\n      ...arg,\n      rect: correctedRect,\n      edges: linkedEdges,\n      pageCoords: coords,\n      prevCoords: coords,\n      prevRect: correctedRect,\n    })\n\n    const { delta } = result\n\n    if (result.changed) {\n      const xIsCriticalAxis = Math.abs(delta.x) > Math.abs(delta.y)\n\n      // do aspect modification again with critical edge axis as primary\n      aspectMethod(state, xIsCriticalAxis, result.coords, result.rect)\n      extend(coords, result.coords)\n    }\n\n    return result.eventProps\n  },\n\n  defaults: {\n    ratio: 'preserve',\n    equalDelta: false,\n    modifiers: [],\n    enabled: false,\n  },\n}\n\nfunction setEqualDelta({ startCoords, edgeSign }: AspectRatioState, xIsPrimaryAxis: boolean, coords: Point) {\n  if (xIsPrimaryAxis) {\n    coords.y = startCoords.y + (coords.x - startCoords.x) * edgeSign.y\n  } else {\n    coords.x = startCoords.x + (coords.y - startCoords.y) * edgeSign.x\n  }\n}\n\nfunction setRatio(\n  { startRect, startCoords, ratio, edgeSign }: AspectRatioState,\n  xIsPrimaryAxis: boolean,\n  coords: Point,\n  rect: Rect,\n) {\n  if (xIsPrimaryAxis) {\n    const newHeight = rect.width / ratio\n\n    coords.y = startCoords.y + (newHeight - startRect.height) * edgeSign.y\n  } else {\n    const newWidth = rect.height * ratio\n\n    coords.x = startCoords.x + (newWidth - startRect.width) * edgeSign.x\n  }\n}\n\nexport default makeModifier(aspectRatio, 'aspectRatio')\nexport { aspectRatio }\n", "import type { ModifierFunction } from './types'\n\nconst noop = (() => {}) as unknown as ModifierFunction<any, any, 'noop'>\n\nnoop._defaults = {}\n\nexport default noop\n", "import type Interaction from '@interactjs/core/Interaction'\nimport type { RectResolvable, Rect, Point } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierModule, ModifierState } from '../types'\n\nexport interface RestrictOptions {\n  // where to drag over\n  restriction: RectResolvable<[number, number, Interaction]>\n  // what part of self is allowed to drag over\n  elementRect: Rect\n  offset: Rect\n  // restrict just before the end drag\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictState = ModifierState<\n  RestrictOptions,\n  {\n    offset: Rect\n  }\n>\n\nfunction start({ rect, startOffset, state, interaction, pageCoords }: ModifierArg<RestrictState>) {\n  const { options } = state\n  const { elementRect } = options\n  const offset: Rect = extend(\n    {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n    },\n    options.offset || {},\n  )\n\n  if (rect && elementRect) {\n    const restriction = getRestrictionRect(options.restriction, interaction, pageCoords)\n\n    if (restriction) {\n      const widthDiff = restriction.right - restriction.left - rect.width\n      const heightDiff = restriction.bottom - restriction.top - rect.height\n\n      if (widthDiff < 0) {\n        offset.left += widthDiff\n        offset.right += widthDiff\n      }\n      if (heightDiff < 0) {\n        offset.top += heightDiff\n        offset.bottom += heightDiff\n      }\n    }\n\n    offset.left += startOffset.left - rect.width * elementRect.left\n    offset.top += startOffset.top - rect.height * elementRect.top\n\n    offset.right += startOffset.right - rect.width * (1 - elementRect.right)\n    offset.bottom += startOffset.bottom - rect.height * (1 - elementRect.bottom)\n  }\n\n  state.offset = offset\n}\n\nfunction set({ coords, interaction, state }: ModifierArg<RestrictState>) {\n  const { options, offset } = state\n\n  const restriction = getRestrictionRect(options.restriction, interaction, coords)\n\n  if (!restriction) return\n\n  const rect = rectUtils.xywhToTlbr(restriction)\n\n  coords.x = Math.max(Math.min(rect.right - offset.right, coords.x), rect.left + offset.left)\n  coords.y = Math.max(Math.min(rect.bottom - offset.bottom, coords.y), rect.top + offset.top)\n}\n\nexport function getRestrictionRect(\n  value: RectResolvable<[number, number, Interaction]>,\n  interaction: Interaction,\n  coords?: Point,\n) {\n  if (is.func(value)) {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element, [\n      coords.x,\n      coords.y,\n      interaction,\n    ])\n  } else {\n    return rectUtils.resolveRectLike(value, interaction.interactable, interaction.element)\n  }\n}\n\nconst defaults: RestrictOptions = {\n  restriction: null,\n  elementRect: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrict: ModifierModule<RestrictOptions, RestrictState> = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrict, 'restrict')\nexport { restrict }\n", "// This modifier adds the options.resize.restrictEdges setting which sets min and\n// max for the top, left, bottom and right edges of the target being resized.\n//\n// interact(target).resize({\n//   edges: { top: true, left: true },\n//   restrictEdges: {\n//     inner: { top: 200, left: 200, right: 400, bottom: 400 },\n//     outer: { top:   0, left:   0, right: 600, bottom: 600 },\n//   },\n// })\n\nimport type { Point, Rect } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nimport type { RestrictOptions } from './pointer'\nimport { getRestrictionRect } from './pointer'\n\nexport interface RestrictEdgesOptions {\n  inner: RestrictOptions['restriction']\n  outer: RestrictOptions['restriction']\n  offset?: RestrictOptions['offset']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nexport type RestrictEdgesState = ModifierState<\n  RestrictEdgesOptions,\n  {\n    inner: Rect\n    outer: Rect\n    offset: RestrictEdgesOptions['offset']\n  }\n>\n\nconst noInner = { top: +Infinity, left: +Infinity, bottom: -Infinity, right: -Infinity }\nconst noOuter = { top: -Infinity, left: -Infinity, bottom: +Infinity, right: +Infinity }\n\nfunction start({ interaction, startOffset, state }: ModifierArg<RestrictEdgesState>) {\n  const { options } = state\n  let offset: Point\n\n  if (options) {\n    const offsetRect = getRestrictionRect(options.offset, interaction, interaction.coords.start.page)\n\n    offset = rectUtils.rectToXY(offsetRect)\n  }\n\n  offset = offset || { x: 0, y: 0 }\n\n  state.offset = {\n    top: offset.y + startOffset.top,\n    left: offset.x + startOffset.left,\n    bottom: offset.y - startOffset.bottom,\n    right: offset.x - startOffset.right,\n  }\n}\n\nfunction set({ coords, edges, interaction, state }: ModifierArg<RestrictEdgesState>) {\n  const { offset, options } = state\n\n  if (!edges) {\n    return\n  }\n\n  const page = extend({}, coords)\n  const inner = getRestrictionRect(options.inner, interaction, page) || ({} as Rect)\n  const outer = getRestrictionRect(options.outer, interaction, page) || ({} as Rect)\n\n  fixRect(inner, noInner)\n  fixRect(outer, noOuter)\n\n  if (edges.top) {\n    coords.y = Math.min(Math.max(outer.top + offset.top, page.y), inner.top + offset.top)\n  } else if (edges.bottom) {\n    coords.y = Math.max(Math.min(outer.bottom + offset.bottom, page.y), inner.bottom + offset.bottom)\n  }\n  if (edges.left) {\n    coords.x = Math.min(Math.max(outer.left + offset.left, page.x), inner.left + offset.left)\n  } else if (edges.right) {\n    coords.x = Math.max(Math.min(outer.right + offset.right, page.x), inner.right + offset.right)\n  }\n}\n\nfunction fixRect(rect: Rect, defaults: Rect) {\n  for (const edge of ['top', 'left', 'bottom', 'right']) {\n    if (!(edge in rect)) {\n      rect[edge] = defaults[edge]\n    }\n  }\n\n  return rect\n}\n\nconst defaults: RestrictEdgesOptions = {\n  inner: null,\n  outer: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictEdges = {\n  noInner,\n  noOuter,\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrictEdges, 'restrictEdges')\nexport { restrictEdges }\n", "import extend from '@interactjs/utils/extend'\n\nimport { makeModifier } from '../base'\n\nimport { restrict } from './pointer'\n\nconst defaults = extend(\n  {\n    get elementRect() {\n      return { top: 0, left: 0, bottom: 1, right: 1 }\n    },\n    set elementRect(_) {},\n  },\n  restrict.defaults,\n)\n\nconst restrictRect = {\n  start: restrict.start,\n  set: restrict.set,\n  defaults,\n}\n\nexport default makeModifier(restrictRect, 'restrictRect')\nexport { restrictRect }\n", "import type { Point, Rect, Size } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport * as rectUtils from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nimport type { RestrictEdgesState } from './edges'\nimport { restrictEdges } from './edges'\nimport type { RestrictOptions } from './pointer'\nimport { getRestrictionRect } from './pointer'\n\nconst noMin = { width: -Infinity, height: -Infinity }\nconst noMax = { width: +Infinity, height: +Infinity }\n\nexport interface RestrictSizeOptions {\n  min?: Size | Point | RestrictOptions['restriction']\n  max?: Size | Point | RestrictOptions['restriction']\n  endOnly: boolean\n  enabled?: boolean\n}\n\nfunction start(arg: ModifierArg<RestrictEdgesState>) {\n  return restrictEdges.start(arg)\n}\n\nexport type RestrictSizeState = RestrictEdgesState &\n  ModifierState<\n    RestrictSizeOptions & { inner: Rect; outer: Rect },\n    {\n      min: Rect\n      max: Rect\n    }\n  >\n\nfunction set(arg: ModifierArg<RestrictSizeState>) {\n  const { interaction, state, rect, edges } = arg\n  const { options } = state\n\n  if (!edges) {\n    return\n  }\n\n  const minSize =\n    rectUtils.tlbrToXywh(getRestrictionRect(options.min as any, interaction, arg.coords)) || noMin\n  const maxSize =\n    rectUtils.tlbrToXywh(getRestrictionRect(options.max as any, interaction, arg.coords)) || noMax\n\n  state.options = {\n    endOnly: options.endOnly,\n    inner: extend({}, restrictEdges.noInner),\n    outer: extend({}, restrictEdges.noOuter),\n  }\n\n  if (edges.top) {\n    state.options.inner.top = rect.bottom - minSize.height\n    state.options.outer.top = rect.bottom - maxSize.height\n  } else if (edges.bottom) {\n    state.options.inner.bottom = rect.top + minSize.height\n    state.options.outer.bottom = rect.top + maxSize.height\n  }\n  if (edges.left) {\n    state.options.inner.left = rect.right - minSize.width\n    state.options.outer.left = rect.right - maxSize.width\n  } else if (edges.right) {\n    state.options.inner.right = rect.left + minSize.width\n    state.options.outer.right = rect.left + maxSize.width\n  }\n\n  restrictEdges.set(arg)\n\n  state.options = options\n}\n\nconst defaults: RestrictSizeOptions = {\n  min: null,\n  max: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst restrictSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(restrictSize, 'restrictSize')\nexport { restrictSize }\n", "import type { Interaction, InteractionProxy } from '@interactjs/core/Interaction'\nimport type { ActionName, Point, RectResolvable, Element } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\nimport hypot from '@interactjs/utils/hypot'\nimport is from '@interactjs/utils/is'\nimport { resolveRectLike, rectToXY } from '@interactjs/utils/rect'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierState } from '../types'\n\nexport interface Offset {\n  x: number\n  y: number\n  index: number\n  relativePoint?: Point | null\n}\n\nexport interface SnapPosition {\n  x?: number\n  y?: number\n  range?: number\n  offset?: Offset\n  [index: string]: any\n}\n\nexport type SnapFunction = (\n  x: number,\n  y: number,\n  interaction: InteractionProxy<ActionName>,\n  offset: Offset,\n  index: number,\n) => SnapPosition\nexport type SnapTarget = SnapPosition | SnapFunction\nexport interface SnapOptions {\n  targets?: SnapTarget[]\n  // target range\n  range?: number\n  // self points for snapping. [0,0] = top left, [1,1] = bottom right\n  relativePoints?: Point[]\n  // startCoords = offset snapping from drag start page position\n  offset?: Point | RectResolvable<[Interaction]> | 'startCoords'\n  offsetWithOrigin?: boolean\n  origin?: RectResolvable<[Element]> | Point\n  endOnly?: boolean\n  enabled?: boolean\n}\n\nexport type SnapState = ModifierState<\n  SnapOptions,\n  {\n    offsets?: Offset[]\n    closest?: any\n    targetFields?: string[][]\n  }\n>\n\nfunction start(arg: ModifierArg<SnapState>) {\n  const { interaction, interactable, element, rect, state, startOffset } = arg\n  const { options } = state\n  const origin = options.offsetWithOrigin ? getOrigin(arg) : { x: 0, y: 0 }\n\n  let snapOffset: Point\n\n  if (options.offset === 'startCoords') {\n    snapOffset = {\n      x: interaction.coords.start.page.x,\n      y: interaction.coords.start.page.y,\n    }\n  } else {\n    const offsetRect = resolveRectLike(options.offset as any, interactable, element, [interaction])\n\n    snapOffset = rectToXY(offsetRect) || { x: 0, y: 0 }\n    snapOffset.x += origin.x\n    snapOffset.y += origin.y\n  }\n\n  const { relativePoints } = options\n\n  state.offsets =\n    rect && relativePoints && relativePoints.length\n      ? relativePoints.map((relativePoint, index) => ({\n          index,\n          relativePoint,\n          x: startOffset.left - rect.width * relativePoint.x + snapOffset.x,\n          y: startOffset.top - rect.height * relativePoint.y + snapOffset.y,\n        }))\n      : [\n          {\n            index: 0,\n            relativePoint: null,\n            x: snapOffset.x,\n            y: snapOffset.y,\n          },\n        ]\n}\n\nfunction set(arg: ModifierArg<SnapState>) {\n  const { interaction, coords, state } = arg\n  const { options, offsets } = state\n\n  const origin = getOriginXY(interaction.interactable!, interaction.element!, interaction.prepared.name)\n  const page = extend({}, coords)\n  const targets: SnapPosition[] = []\n\n  if (!options.offsetWithOrigin) {\n    page.x -= origin.x\n    page.y -= origin.y\n  }\n\n  for (const offset of offsets!) {\n    const relativeX = page.x - offset.x\n    const relativeY = page.y - offset.y\n\n    for (let index = 0, len = options.targets!.length; index < len; index++) {\n      const snapTarget = options.targets![index]\n      let target: SnapPosition\n\n      if (is.func(snapTarget)) {\n        target = snapTarget(relativeX, relativeY, interaction._proxy, offset, index)\n      } else {\n        target = snapTarget\n      }\n\n      if (!target) {\n        continue\n      }\n\n      targets.push({\n        x: (is.number(target.x) ? target.x : relativeX) + offset.x,\n        y: (is.number(target.y) ? target.y : relativeY) + offset.y,\n\n        range: is.number(target.range) ? target.range : options.range,\n        source: snapTarget,\n        index,\n        offset,\n      })\n    }\n  }\n\n  const closest = {\n    target: null,\n    inRange: false,\n    distance: 0,\n    range: 0,\n    delta: { x: 0, y: 0 },\n  }\n\n  for (const target of targets) {\n    const range = target.range\n    const dx = target.x - page.x\n    const dy = target.y - page.y\n    const distance = hypot(dx, dy)\n    let inRange = distance <= range\n\n    // Infinite targets count as being out of range\n    // compared to non infinite ones that are in range\n    if (range === Infinity && closest.inRange && closest.range !== Infinity) {\n      inRange = false\n    }\n\n    if (\n      !closest.target ||\n      (inRange\n        ? // is the closest target in range?\n          closest.inRange && range !== Infinity\n          ? // the pointer is relatively deeper in this target\n            distance / range < closest.distance / closest.range\n          : // this target has Infinite range and the closest doesn't\n            (range === Infinity && closest.range !== Infinity) ||\n            // OR this target is closer that the previous closest\n            distance < closest.distance\n        : // The other is not in range and the pointer is closer to this target\n          !closest.inRange && distance < closest.distance)\n    ) {\n      closest.target = target\n      closest.distance = distance\n      closest.range = range\n      closest.inRange = inRange\n      closest.delta.x = dx\n      closest.delta.y = dy\n    }\n  }\n\n  if (closest.inRange) {\n    coords.x = closest.target.x\n    coords.y = closest.target.y\n  }\n\n  state.closest = closest\n  return closest\n}\n\nfunction getOrigin(arg: Partial<ModifierArg<SnapState>>) {\n  const { element } = arg.interaction\n  const optionsOrigin = rectToXY(resolveRectLike(arg.state.options.origin as any, null, null, [element]))\n  const origin = optionsOrigin || getOriginXY(arg.interactable, element, arg.interaction.prepared.name)\n\n  return origin\n}\n\nconst defaults: SnapOptions = {\n  range: Infinity,\n  targets: null,\n  offset: null,\n  offsetWithOrigin: true,\n  origin: null,\n  relativePoints: null,\n  endOnly: false,\n  enabled: false,\n}\nconst snap = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(snap, 'snap')\nexport { snap }\n", "// This modifier allows snapping of the size of targets during resize\n// interactions.\n\nimport extend from '@interactjs/utils/extend'\nimport is from '@interactjs/utils/is'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg } from '../types'\n\nimport type { SnapOptions, SnapState } from './pointer'\nimport { snap } from './pointer'\n\nexport type SnapSizeOptions = Pick<SnapOptions, 'targets' | 'offset' | 'endOnly' | 'range' | 'enabled'>\n\nfunction start(arg: ModifierArg<SnapState>) {\n  const { state, edges } = arg\n  const { options } = state\n\n  if (!edges) {\n    return null\n  }\n\n  arg.state = {\n    options: {\n      targets: null,\n      relativePoints: [\n        {\n          x: edges.left ? 0 : 1,\n          y: edges.top ? 0 : 1,\n        },\n      ],\n      offset: options.offset || 'self',\n      origin: { x: 0, y: 0 },\n      range: options.range,\n    },\n  }\n\n  state.targetFields = state.targetFields || [\n    ['width', 'height'],\n    ['x', 'y'],\n  ]\n\n  snap.start(arg)\n  state.offsets = arg.state.offsets\n\n  arg.state = state\n}\n\nfunction set(arg) {\n  const { interaction, state, coords } = arg\n  const { options, offsets } = state\n  const relative = {\n    x: coords.x - offsets[0].x,\n    y: coords.y - offsets[0].y,\n  }\n\n  state.options = extend({}, options)\n  state.options.targets = []\n\n  for (const snapTarget of options.targets || []) {\n    let target\n\n    if (is.func(snapTarget)) {\n      target = snapTarget(relative.x, relative.y, interaction)\n    } else {\n      target = snapTarget\n    }\n\n    if (!target) {\n      continue\n    }\n\n    for (const [xField, yField] of state.targetFields) {\n      if (xField in target || yField in target) {\n        target.x = target[xField]\n        target.y = target[yField]\n\n        break\n      }\n    }\n\n    state.options.targets.push(target)\n  }\n\n  const returnValue = snap.set(arg)\n\n  state.options = options\n\n  return returnValue\n}\n\nconst defaults: SnapSizeOptions = {\n  range: Infinity,\n  targets: null,\n  offset: null,\n  endOnly: false,\n  enabled: false,\n}\n\nconst snapSize = {\n  start,\n  set,\n  defaults,\n}\n\nexport default makeModifier(snapSize, 'snapSize')\nexport { snapSize }\n", "/**\n * @module modifiers/snapEdges\n *\n * @description\n * This modifier allows snapping of the edges of targets during resize\n * interactions.\n *\n * ```js\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [interact.snappers.grid({ x: 100, y: 50 })],\n *   },\n * })\n *\n * interact(target).resizable({\n *   snapEdges: {\n *     targets: [\n *       interact.snappers.grid({\n *        top: 50,\n *        left: 50,\n *        bottom: 100,\n *        right: 100,\n *       }),\n *     ],\n *   },\n * })\n * ```\n */\n\nimport clone from '@interactjs/utils/clone'\nimport extend from '@interactjs/utils/extend'\n\nimport { makeModifier } from '../base'\nimport type { ModifierArg, ModifierModule } from '../types'\n\nimport type { SnapOptions, SnapState } from './pointer'\nimport { snapSize } from './size'\n\nexport type SnapEdgesOptions = Pick<SnapOptions, 'targets' | 'range' | 'offset' | 'endOnly' | 'enabled'>\n\nfunction start(arg: ModifierArg<SnapState>) {\n  const { edges } = arg\n\n  if (!edges) {\n    return null\n  }\n\n  arg.state.targetFields = arg.state.targetFields || [\n    [edges.left ? 'left' : 'right', edges.top ? 'top' : 'bottom'],\n  ]\n\n  return snapSize.start(arg)\n}\n\nconst snapEdges: ModifierModule<SnapEdgesOptions, SnapState, ReturnType<typeof snapSize.set>> = {\n  start,\n  set: snapSize.set,\n  defaults: extend(clone(snapSize.defaults), {\n    targets: undefined,\n    range: undefined,\n    offset: { x: 0, y: 0 },\n  } as const),\n}\n\nexport default makeModifier(snapEdges, 'snapEdges')\nexport { snapEdges }\n", "/* eslint-disable n/no-extraneous-import, import/no-unresolved */\nimport aspectRatio from './aspectRatio'\nimport avoid from './avoid/avoid'\nimport restrictEdges from './restrict/edges'\nimport restrict from './restrict/pointer'\nimport restrictRect from './restrict/rect'\nimport restrictSize from './restrict/size'\nimport rubberband from './rubberband/rubberband'\nimport snapEdges from './snap/edges'\nimport snap from './snap/pointer'\nimport snapSize from './snap/size'\nimport spring from './spring/spring'\nimport transform from './transform/transform'\n\nexport default {\n  aspectRatio,\n  restrictEdges,\n  restrict,\n  restrictRect,\n  restrictSize,\n  snapEdges,\n  snap,\n  snapSize,\n\n  spring,\n  avoid,\n  transform,\n  rubberband,\n}\n", "import type { Plugin } from '@interactjs/core/scope'\nimport snappers from '@interactjs/snappers/plugin'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './all'\nimport './base'\n\nimport all from './all'\nimport base from './base'\n/* eslint-enable import/no-duplicates */\n\ndeclare module '@interactjs/core/InteractStatic' {\n  export interface InteractStatic {\n    modifiers: typeof all\n  }\n}\n\nconst modifiers: Plugin = {\n  id: 'modifiers',\n  install(scope) {\n    const { interactStatic: interact } = scope\n\n    scope.usePlugin(base)\n    scope.usePlugin(snappers)\n\n    interact.modifiers = all\n\n    // for backwrads compatibility\n    for (const type in all) {\n      const { _defaults, _methods } = all[type as keyof typeof all]\n\n      ;(_defaults as any)._methods = _methods\n      ;(scope.defaults.perAction as any)[type] = _defaults\n    }\n  },\n}\n\nexport default modifiers\n", "import { BaseEvent } from '@interactjs/core/BaseEvent'\nimport type Interaction from '@interactjs/core/Interaction'\nimport type { PointerEventType, PointerType, Point } from '@interactjs/core/types'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\n\nexport class PointerEvent<T extends string = any> extends BaseEvent<never> {\n  declare type: T\n  declare originalEvent: PointerEventType\n  declare pointerId: number\n  declare pointerType: string\n  declare double: boolean\n  declare pageX: number\n  declare pageY: number\n  declare clientX: number\n  declare clientY: number\n  declare dt: number\n  declare eventable: any;\n  [key: string]: any\n\n  constructor(\n    type: T,\n    pointer: PointerType | PointerEvent<any>,\n    event: PointerEventType,\n    eventTarget: Node,\n    interaction: Interaction<never>,\n    timeStamp: number,\n  ) {\n    super(interaction)\n    pointerUtils.pointerExtend(this, event)\n\n    if (event !== pointer) {\n      pointerUtils.pointerExtend(this, pointer)\n    }\n\n    this.timeStamp = timeStamp\n    this.originalEvent = event\n    this.type = type\n    this.pointerId = pointerUtils.getPointerId(pointer)\n    this.pointerType = pointerUtils.getPointerType(pointer)\n    this.target = eventTarget\n    this.currentTarget = null\n\n    if (type === 'tap') {\n      const pointerIndex = interaction.getPointerIndex(pointer)\n      this.dt = this.timeStamp - interaction.pointers[pointerIndex].downTime\n\n      const interval = this.timeStamp - interaction.tapTime\n\n      this.double =\n        !!interaction.prevTap &&\n        interaction.prevTap.type !== 'doubletap' &&\n        interaction.prevTap.target === this.target &&\n        interval < 500\n    } else if (type === 'doubletap') {\n      this.dt = (pointer as PointerEvent<'tap'>).timeStamp - interaction.tapTime\n      this.double = true\n    }\n  }\n\n  _subtractOrigin({ x: originX, y: originY }: Point) {\n    this.pageX -= originX\n    this.pageY -= originY\n    this.clientX -= originX\n    this.clientY -= originY\n\n    return this\n  }\n\n  _addOrigin({ x: originX, y: originY }: Point) {\n    this.pageX += originX\n    this.pageY += originY\n    this.clientX += originX\n    this.clientY += originY\n\n    return this\n  }\n\n  /**\n   * Prevent the default behaviour of the original Event\n   */\n  preventDefault() {\n    this.originalEvent.preventDefault()\n  }\n}\n", "import type { Eventable } from '@interactjs/core/Eventable'\nimport type { Interaction } from '@interactjs/core/Interaction'\nimport type { PerActionDefaults } from '@interactjs/core/options'\nimport type { Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\nimport type { Point, PointerType, PointerEventType, Element } from '@interactjs/core/types'\nimport * as domUtils from '@interactjs/utils/domUtils'\nimport extend from '@interactjs/utils/extend'\nimport getOriginXY from '@interactjs/utils/getOriginXY'\n\nimport { PointerEvent } from './PointerEvent'\n\nexport type EventTargetList = Array<{\n  node: Node\n  eventable: Eventable\n  props: { [key: string]: any }\n}>\n\nexport interface PointerEventOptions extends PerActionDefaults {\n  enabled?: undefined // not used\n  holdDuration?: number\n  ignoreFrom?: any\n  allowFrom?: any\n  origin?: Point | string | Element\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface Scope {\n    pointerEvents: typeof pointerEvents\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    prevTap?: PointerEvent<string>\n    tapTime?: number\n  }\n}\n\ndeclare module '@interactjs/core/PointerInfo' {\n  interface PointerInfo {\n    hold?: {\n      duration: number\n      timeout: any\n    }\n  }\n}\n\ndeclare module '@interactjs/core/options' {\n  interface ActionDefaults {\n    pointerEvents: Options\n  }\n}\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'pointerEvents:new': { pointerEvent: PointerEvent<any> }\n    'pointerEvents:fired': {\n      interaction: Interaction<null>\n      pointer: PointerType | PointerEvent<any>\n      event: PointerEventType | PointerEvent<any>\n      eventTarget: Node\n      pointerEvent: PointerEvent<any>\n      targets?: EventTargetList\n      type: string\n    }\n    'pointerEvents:collect-targets': {\n      interaction: Interaction<any>\n      pointer: PointerType | PointerEvent<any>\n      event: PointerEventType | PointerEvent<any>\n      eventTarget: Node\n      targets?: EventTargetList\n      type: string\n      path: Node[]\n      node: null\n    }\n  }\n}\n\nconst defaults: PointerEventOptions = {\n  holdDuration: 600,\n  ignoreFrom: null,\n  allowFrom: null,\n  origin: { x: 0, y: 0 },\n}\n\nconst pointerEvents: Plugin = {\n  id: 'pointer-events/base',\n  before: ['inertia', 'modifiers', 'auto-start', 'actions'],\n  install,\n  listeners: {\n    'interactions:new': addInteractionProps,\n    'interactions:update-pointer': addHoldInfo,\n    'interactions:move': moveAndClearHold,\n    'interactions:down': (arg, scope) => {\n      downAndStartHold(arg, scope)\n      fire(arg, scope)\n    },\n    'interactions:up': (arg, scope) => {\n      clearHold(arg)\n      fire(arg, scope)\n      tapAfterUp(arg, scope)\n    },\n    'interactions:cancel': (arg, scope) => {\n      clearHold(arg)\n      fire(arg, scope)\n    },\n  },\n  PointerEvent,\n  fire,\n  collectEventTargets,\n  defaults,\n  types: {\n    down: true,\n    move: true,\n    up: true,\n    cancel: true,\n    tap: true,\n    doubletap: true,\n    hold: true,\n  } as { [type: string]: true },\n}\n\nfunction fire<T extends string>(\n  arg: {\n    pointer: PointerType | PointerEvent<any>\n    event: PointerEventType | PointerEvent<any>\n    eventTarget: Node\n    interaction: Interaction<never>\n    type: T\n    targets?: EventTargetList\n  },\n  scope: Scope,\n) {\n  const { interaction, pointer, event, eventTarget, type, targets = collectEventTargets(arg, scope) } = arg\n\n  const pointerEvent = new PointerEvent(type, pointer, event, eventTarget, interaction, scope.now())\n\n  scope.fire('pointerEvents:new', { pointerEvent })\n\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    targets,\n    type,\n    pointerEvent,\n  }\n\n  for (let i = 0; i < targets.length; i++) {\n    const target = targets[i]\n\n    for (const prop in target.props || {}) {\n      ;(pointerEvent as any)[prop] = target.props[prop]\n    }\n\n    const origin = getOriginXY(target.eventable, target.node)\n\n    pointerEvent._subtractOrigin(origin)\n    pointerEvent.eventable = target.eventable\n    pointerEvent.currentTarget = target.node\n\n    target.eventable.fire(pointerEvent)\n\n    pointerEvent._addOrigin(origin)\n\n    if (\n      pointerEvent.immediatePropagationStopped ||\n      (pointerEvent.propagationStopped &&\n        i + 1 < targets.length &&\n        targets[i + 1].node !== pointerEvent.currentTarget)\n    ) {\n      break\n    }\n  }\n\n  scope.fire('pointerEvents:fired', signalArg)\n\n  if (type === 'tap') {\n    // if pointerEvent should make a double tap, create and fire a doubletap\n    // PointerEvent and use that as the prevTap\n    const prevTap = pointerEvent.double\n      ? fire(\n          {\n            interaction,\n            pointer,\n            event,\n            eventTarget,\n            type: 'doubletap',\n          },\n          scope,\n        )\n      : pointerEvent\n\n    interaction.prevTap = prevTap\n    interaction.tapTime = prevTap.timeStamp\n  }\n\n  return pointerEvent\n}\n\nfunction collectEventTargets<T extends string>(\n  {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n  }: {\n    interaction: Interaction<any>\n    pointer: PointerType | PointerEvent<any>\n    event: PointerEventType | PointerEvent<any>\n    eventTarget: Node\n    type: T\n  },\n  scope: Scope,\n) {\n  const pointerIndex = interaction.getPointerIndex(pointer)\n  const pointerInfo = interaction.pointers[pointerIndex]\n\n  // do not fire a tap event if the pointer was moved before being lifted\n  if (\n    type === 'tap' &&\n    (interaction.pointerWasMoved ||\n      // or if the pointerup target is different to the pointerdown target\n      !(pointerInfo && pointerInfo.downTarget === eventTarget))\n  ) {\n    return []\n  }\n\n  const path = domUtils.getPath(eventTarget as Element | Document)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type,\n    path,\n    targets: [] as EventTargetList,\n    node: null,\n  }\n\n  for (const node of path) {\n    signalArg.node = node\n\n    scope.fire('pointerEvents:collect-targets', signalArg)\n  }\n\n  if (type === 'hold') {\n    signalArg.targets = signalArg.targets.filter(\n      (target) =>\n        target.eventable.options.holdDuration === interaction.pointers[pointerIndex]?.hold?.duration,\n    )\n  }\n\n  return signalArg.targets\n}\n\nfunction addInteractionProps({ interaction }) {\n  interaction.prevTap = null // the most recent tap event on this interaction\n  interaction.tapTime = 0 // time of the most recent tap event\n}\n\nfunction addHoldInfo({ down, pointerInfo }: SignalArgs['interactions:update-pointer']) {\n  if (!down && pointerInfo.hold) {\n    return\n  }\n\n  pointerInfo.hold = { duration: Infinity, timeout: null }\n}\n\nfunction clearHold({ interaction, pointerIndex }) {\n  const hold = interaction.pointers[pointerIndex].hold\n\n  if (hold && hold.timeout) {\n    clearTimeout(hold.timeout)\n    hold.timeout = null\n  }\n}\n\nfunction moveAndClearHold(arg: SignalArgs['interactions:move'], scope: Scope) {\n  const { interaction, pointer, event, eventTarget, duplicate } = arg\n\n  if (!duplicate && (!interaction.pointerIsDown || interaction.pointerWasMoved)) {\n    if (interaction.pointerIsDown) {\n      clearHold(arg)\n    }\n\n    fire(\n      {\n        interaction,\n        pointer,\n        event,\n        eventTarget: eventTarget as Element,\n        type: 'move',\n      },\n      scope,\n    )\n  }\n}\n\nfunction downAndStartHold(\n  { interaction, pointer, event, eventTarget, pointerIndex }: SignalArgs['interactions:down'],\n  scope: Scope,\n) {\n  const timer = interaction.pointers[pointerIndex].hold!\n  const path = domUtils.getPath(eventTarget as Element | Document)\n  const signalArg = {\n    interaction,\n    pointer,\n    event,\n    eventTarget,\n    type: 'hold',\n    targets: [] as EventTargetList,\n    path,\n    node: null,\n  }\n\n  for (const node of path) {\n    signalArg.node = node\n\n    scope.fire('pointerEvents:collect-targets', signalArg)\n  }\n\n  if (!signalArg.targets.length) return\n\n  let minDuration = Infinity\n\n  for (const target of signalArg.targets) {\n    const holdDuration = target.eventable.options.holdDuration\n\n    if (holdDuration < minDuration) {\n      minDuration = holdDuration\n    }\n  }\n\n  timer.duration = minDuration\n  timer.timeout = setTimeout(() => {\n    fire(\n      {\n        interaction,\n        eventTarget,\n        pointer,\n        event,\n        type: 'hold',\n      },\n      scope,\n    )\n  }, minDuration)\n}\n\nfunction tapAfterUp(\n  { interaction, pointer, event, eventTarget }: SignalArgs['interactions:up'],\n  scope: Scope,\n) {\n  if (!interaction.pointerWasMoved) {\n    fire({ interaction, eventTarget, pointer, event, type: 'tap' }, scope)\n  }\n}\n\nfunction install(scope: Scope) {\n  scope.pointerEvents = pointerEvents\n  scope.defaults.actions.pointerEvents = pointerEvents.defaults\n  extend(scope.actions.phaselessTypes, pointerEvents.types)\n}\n\nexport default pointerEvents\n", "import type Interaction from '@interactjs/core/Interaction'\nimport type { ListenerMap, Scope, SignalArgs, Plugin } from '@interactjs/core/scope'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './base'\nimport basePlugin from './base'\n/* eslint-enable import/no-duplicates */\nimport { type PointerEvent } from './PointerEvent'\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    holdIntervalHandle?: any\n  }\n}\n\ndeclare module '@interactjs/pointer-events/PointerEvent' {\n  interface PointerEvent<T extends string = any> {\n    count?: number\n  }\n}\n\ndeclare module '@interactjs/pointer-events/base' {\n  interface PointerEventOptions {\n    holdRepeatInterval?: number\n  }\n}\n\nfunction install(scope: Scope) {\n  scope.usePlugin(basePlugin)\n\n  const { pointerEvents } = scope\n\n  // don't repeat by default\n  pointerEvents.defaults.holdRepeatInterval = 0\n  pointerEvents.types.holdrepeat = scope.actions.phaselessTypes.holdrepeat = true\n}\n\nfunction onNew({ pointerEvent }: { pointerEvent: PointerEvent<any> }) {\n  if (pointerEvent.type !== 'hold') return\n\n  pointerEvent.count = (pointerEvent.count || 0) + 1\n}\n\nfunction onFired(\n  { interaction, pointerEvent, eventTarget, targets }: SignalArgs['pointerEvents:fired'],\n  scope: Scope,\n) {\n  if (pointerEvent.type !== 'hold' || !targets.length) return\n\n  // get the repeat interval from the first eventable\n  const interval = targets[0].eventable.options.holdRepeatInterval\n\n  // don't repeat if the interval is 0 or less\n  if (interval <= 0) return\n\n  // set a timeout to fire the holdrepeat event\n  interaction.holdIntervalHandle = setTimeout(() => {\n    scope.pointerEvents.fire(\n      {\n        interaction,\n        eventTarget,\n        type: 'hold',\n        pointer: pointerEvent,\n        event: pointerEvent,\n      },\n      scope,\n    )\n  }, interval)\n}\n\nfunction endHoldRepeat({ interaction }: { interaction: Interaction }) {\n  // set the interaction's holdStopTime property\n  // to stop further holdRepeat events\n  if (interaction.holdIntervalHandle) {\n    clearInterval(interaction.holdIntervalHandle)\n    interaction.holdIntervalHandle = null\n  }\n}\n\nconst holdRepeat: Plugin = {\n  id: 'pointer-events/holdRepeat',\n  install,\n  listeners: ['move', 'up', 'cancel', 'endall'].reduce(\n    (acc, enderTypes) => {\n      ;(acc as any)[`pointerEvents:${enderTypes}`] = endHoldRepeat\n      return acc\n    },\n    {\n      'pointerEvents:new': onNew,\n      'pointerEvents:fired': onFired,\n    } as ListenerMap,\n  ),\n}\n\nexport default holdRepeat\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { Element } from '@interactjs/core/types'\nimport extend from '@interactjs/utils/extend'\n\nimport type { PointerEventOptions } from '@interactjs/pointer-events/base'\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    pointerEvents(options: Partial<PointerEventOptions>): this\n    /** @internal */\n    __backCompatOption: (optionName: string, newValue: any) => any\n  }\n}\n\nfunction install(scope: Scope) {\n  const { Interactable } = scope\n\n  Interactable.prototype.pointerEvents = function (\n    this: Interactable,\n    options: Partial<PointerEventOptions>,\n  ) {\n    extend(this.events.options, options)\n\n    return this\n  }\n\n  const __backCompatOption = Interactable.prototype._backCompatOption\n\n  Interactable.prototype._backCompatOption = function (optionName, newValue) {\n    const ret = __backCompatOption.call(this, optionName, newValue)\n\n    if (ret === this) {\n      this.events.options[optionName] = newValue\n    }\n\n    return ret\n  }\n}\n\nconst plugin: Plugin = {\n  id: 'pointer-events/interactableTargets',\n  install,\n  listeners: {\n    'pointerEvents:collect-targets': ({ targets, node, type, eventTarget }, scope) => {\n      scope.interactables.forEachMatch(node, (interactable: Interactable) => {\n        const eventable = interactable.events\n        const options = eventable.options\n\n        if (\n          eventable.types[type] &&\n          eventable.types[type].length &&\n          interactable.testIgnoreAllow(options, node, eventTarget)\n        ) {\n          targets.push({\n            node,\n            eventable,\n            props: { interactable },\n          })\n        }\n      })\n    },\n\n    'interactable:new': ({ interactable }) => {\n      interactable.events.getRect = function (element: Element) {\n        return interactable.getRect(element)\n      }\n    },\n\n    'interactable:set': ({ interactable, options }, scope) => {\n      extend(interactable.events.options, scope.pointerEvents.defaults)\n      extend(interactable.events.options, options.pointerEvents || {})\n    },\n  },\n}\n\nexport default plugin\n", "import type { Plugin } from '@interactjs/core/scope'\n\n/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport './base'\nimport './holdRepeat'\nimport './interactableTargets'\n\nimport * as pointerEvents from './base'\nimport holdRepeat from './holdRepeat'\nimport interactableTargets from './interactableTargets'\n/* eslint-enable import/no-duplicates */\n\nconst plugin: Plugin = {\n  id: 'pointer-events',\n  install(scope) {\n    scope.usePlugin(pointerEvents)\n    scope.usePlugin(holdRepeat)\n    scope.usePlugin(interactableTargets)\n  },\n}\n\nexport default plugin\n", "import type { Interactable } from '@interactjs/core/Interactable'\nimport type { DoAnyPhaseArg, Interaction } from '@interactjs/core/Interaction'\nimport type { Scope, Plugin } from '@interactjs/core/scope'\nimport type { ActionName, ActionProps, Element } from '@interactjs/core/types'\nimport * as arr from '@interactjs/utils/arr'\nimport { copyAction } from '@interactjs/utils/misc'\nimport * as pointerUtils from '@interactjs/utils/pointerUtils'\nimport { tlbrToXywh } from '@interactjs/utils/rect'\n\ndeclare module '@interactjs/core/scope' {\n  interface SignalArgs {\n    'interactions:before-action-reflow': Omit<DoAnyPhaseArg, 'iEvent'>\n    'interactions:action-reflow': DoAnyPhaseArg\n    'interactions:after-action-reflow': DoAnyPhaseArg\n  }\n}\n\ndeclare module '@interactjs/core/Interactable' {\n  interface Interactable {\n    /**\n     * ```js\n     * const interactable = interact(target)\n     * const drag = { name: drag, axis: 'x' }\n     * const resize = { name: resize, edges: { left: true, bottom: true }\n     *\n     * interactable.reflow(drag)\n     * interactable.reflow(resize)\n     * ```\n     *\n     * Start an action sequence to re-apply modifiers, check drops, etc.\n     *\n     * @param { Object } action The action to begin\n     * @param { string } action.name The name of the action\n     * @returns { Promise } A promise that resolves to the `Interactable` when actions on all targets have ended\n     */\n    reflow<T extends ActionName>(action: ActionProps<T>): ReturnType<typeof doReflow>\n  }\n}\n\ndeclare module '@interactjs/core/Interaction' {\n  interface Interaction {\n    _reflowPromise: Promise<void>\n    _reflowResolve: (...args: unknown[]) => void\n  }\n}\n\ndeclare module '@interactjs/core/InteractEvent' {\n  interface PhaseMap {\n    reflow?: true\n  }\n}\n\nfunction install(scope: Scope) {\n  const { Interactable } = scope\n\n  scope.actions.phases.reflow = true\n\n  Interactable.prototype.reflow = function (action: ActionProps) {\n    return doReflow(this, action, scope)\n  }\n}\n\nfunction doReflow<T extends ActionName>(\n  interactable: Interactable,\n  action: ActionProps<T>,\n  scope: Scope,\n): Promise<Interactable> {\n  const elements = interactable.getAllElements()\n\n  // tslint:disable-next-line variable-name\n  const Promise = (scope.window as any).Promise\n  const promises: Array<Promise<null>> | null = Promise ? [] : null\n\n  for (const element of elements) {\n    const rect = interactable.getRect(element as HTMLElement | SVGElement)\n\n    if (!rect) {\n      break\n    }\n\n    const runningInteraction = arr.find(scope.interactions.list, (interaction: Interaction) => {\n      return (\n        interaction.interacting() &&\n        interaction.interactable === interactable &&\n        interaction.element === element &&\n        interaction.prepared.name === action.name\n      )\n    })\n    let reflowPromise: Promise<null>\n\n    if (runningInteraction) {\n      runningInteraction.move()\n\n      if (promises) {\n        reflowPromise =\n          runningInteraction._reflowPromise ||\n          new Promise((resolve: any) => {\n            runningInteraction._reflowResolve = resolve\n          })\n      }\n    } else {\n      const xywh = tlbrToXywh(rect)\n      const coords = {\n        page: { x: xywh.x, y: xywh.y },\n        client: { x: xywh.x, y: xywh.y },\n        timeStamp: scope.now(),\n      }\n\n      const event = pointerUtils.coordsToEvent(coords)\n      reflowPromise = startReflow<T>(scope, interactable, element, action, event)\n    }\n\n    if (promises) {\n      promises.push(reflowPromise)\n    }\n  }\n\n  return promises && Promise.all(promises).then(() => interactable)\n}\n\nfunction startReflow<T extends ActionName>(\n  scope: Scope,\n  interactable: Interactable,\n  element: Element,\n  action: ActionProps<T>,\n  event: any,\n) {\n  const interaction = scope.interactions.new({ pointerType: 'reflow' })\n  const signalArg = {\n    interaction,\n    event,\n    pointer: event,\n    eventTarget: element,\n    phase: 'reflow',\n  } as const\n\n  interaction.interactable = interactable\n  interaction.element = element\n  interaction.prevEvent = event\n  interaction.updatePointer(event, event, element, true)\n  pointerUtils.setZeroCoords(interaction.coords.delta)\n\n  copyAction(interaction.prepared, action)\n  interaction._doPhase(signalArg)\n\n  const { Promise } = scope.window as unknown as { Promise: PromiseConstructor }\n  const reflowPromise = Promise\n    ? new Promise<undefined>((resolve) => {\n        interaction._reflowResolve = resolve\n      })\n    : undefined\n\n  interaction._reflowPromise = reflowPromise\n  interaction.start(action, interactable, element)\n\n  if (interaction._interacting) {\n    interaction.move(signalArg)\n    interaction.end(event)\n  } else {\n    interaction.stop()\n    interaction._reflowResolve()\n  }\n\n  interaction.removePointer(event, event)\n\n  return reflowPromise\n}\n\nconst reflow: Plugin = {\n  id: 'reflow',\n  install,\n  listeners: {\n    // remove completed reflow interactions\n    'interactions:stop': ({ interaction }, scope) => {\n      if (interaction.pointerType === 'reflow') {\n        if (interaction._reflowResolve) {\n          interaction._reflowResolve()\n        }\n\n        arr.remove(scope.interactions.list, interaction)\n      }\n    },\n  },\n}\n\nexport default reflow\n", "// eslint-disable-next-line import/no-extraneous-dependencies\nimport interact from '@interactjs/interactjs'\n\nexport default interact\n\nif (typeof module === 'object' && !!module) {\n  try {\n    module.exports = interact\n  } catch {}\n}\n\n;(interact as any).default = interact\n", "/* eslint-disable import/no-duplicates -- for typescript module augmentations */\nimport '@interactjs/actions/plugin'\nimport '@interactjs/auto-scroll/plugin'\nimport '@interactjs/auto-start/plugin'\nimport '@interactjs/core/interactablePreventDefault'\nimport '@interactjs/dev-tools/plugin'\nimport '@interactjs/inertia/plugin'\nimport '@interactjs/interact'\nimport '@interactjs/modifiers/plugin'\nimport '@interactjs/offset/plugin'\nimport '@interactjs/pointer-events/plugin'\nimport '@interactjs/reflow/plugin'\n\nimport actions from '@interactjs/actions/plugin'\nimport autoScroll from '@interactjs/auto-scroll/plugin'\nimport autoStart from '@interactjs/auto-start/plugin'\nimport interactablePreventDefault from '@interactjs/core/interactablePreventDefault'\nimport devTools from '@interactjs/dev-tools/plugin'\nimport inertia from '@interactjs/inertia/plugin'\nimport interact from '@interactjs/interact'\nimport modifiers from '@interactjs/modifiers/plugin'\nimport offset from '@interactjs/offset/plugin'\nimport pointerEvents from '@interactjs/pointer-events/plugin'\nimport reflow from '@interactjs/reflow/plugin'\n/* eslint-enable import/no-duplicates */\n\ninteract.use(interactablePreventDefault)\n\ninteract.use(offset)\n\n// pointerEvents\ninteract.use(pointerEvents)\n\n// inertia\ninteract.use(inertia)\n\n// snap, resize, etc.\ninteract.use(modifiers)\n\n// autoStart, hold\ninteract.use(autoStart)\n\n// drag and drop, resize, gesture\ninteract.use(actions)\n\n// autoScroll\ninteract.use(autoScroll)\n\n// reflow\ninteract.use(reflow)\n\n// eslint-disable-next-line no-undef\nif (process.env.NODE_ENV !== 'production') {\n  interact.use(devTools)\n}\n\nexport default interact\n;(interact as any).default = interact\n"],
  "mappings": "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",
  "names": ["isWindow", "thing", "Window", "realWindow", "win", "init", "window", "el", "document", "createTextNode", "ownerDocument", "wrap", "getWindow", "node", "defaultView", "object", "_typeof", "func", "is", "docFrag", "nodeType", "number", "bool", "string", "element", "_window", "test", "Element", "nodeName", "plainObject", "constructor", "toString", "array", "length", "splice", "beforeMove", "_ref", "interaction", "prepared", "name", "axis", "coords", "cur", "page", "y", "start", "client", "velocity", "x", "move", "_ref2", "iEvent", "opposite", "delta", "drag", "id", "install", "scope", "actions", "Interactable", "defaults", "prototype", "draggable", "map", "methodDict", "listeners", "arg", "interactable", "buttons", "dragOptions", "options", "enabled", "pointerIsDown", "pointerType", "mouseButtons", "action", "lockAxis", "startAxis", "this", "setPerAction", "setOnEvents", "getCursor", "filterEventType", "type", "search", "drag$1", "domObjects", "DocumentFragment", "blank", "SVGElement", "SVGSVGElement", "SVGElementInstance", "HTMLElement", "Event", "Touch", "PointerEvent", "MSPointerEvent", "domObjects$1", "browser", "navigator", "supportsTouch", "DocumentTouch", "supportsPointerEvent", "pointerEnabled", "isIOS", "platform", "isIOS7", "appVersion", "isIe9", "userAgent", "isOperaMobile", "appName", "prefixedMatchesSelector", "pEventTypes", "up", "down", "over", "out", "cancel", "wheelEvent", "browser$1", "nodeContains", "parent", "child", "contains", "parentNode", "closest", "selector", "matchesSelector", "host", "replace", "getParent", "getNodeParents", "limit", "parentParent", "parents", "unshift", "matchesUpTo", "getActualElement", "correspondingUseElement", "getElementClientRect", "clientRect", "getBoundingClientRect", "getClientRects", "left", "right", "top", "bottom", "width", "height", "getElementRect", "relevantWindow", "scroll", "scrollX", "documentElement", "scrollLeft", "scrollY", "scrollTop", "getPath", "path", "push", "trySelector", "value", "querySelector", "extend", "dest", "source", "prop", "getStringOptionResult", "target", "getRect", "resolveRectLike", "functionArgs", "returnValue", "apply", "rectToXY", "rect", "tlbrToXywh", "addEdges", "edges", "getOriginXY", "actionName", "actionOptions", "origin", "normalize", "filter", "arguments", "_typeOrPrefix", "result", "split", "forEach", "t", "_i2", "_listeners2", "l", "prefix", "p", "concat", "trim", "hypot", "Math", "sqrt", "VENDOR_PREFIXES", "pointerExtend", "__set", "_loop", "some", "indexOf", "Object", "defineProperty", "get", "set", "configurable", "copyCoords", "src", "timeStamp", "setZeroCoords", "targetObj", "isNativePointer", "pointer", "dom", "getXY", "xy", "getPageXY", "getPointerId", "pointerId", "identifier", "setCoords", "pointers", "pointerAverage", "getTouchPair", "event", "touches", "changedTouches", "average", "pageX", "pageY", "clientX", "clientY", "screenX", "screenY", "touchBBox", "minX", "min", "minY", "maxX", "max", "maxY", "touchDistance", "deltaSource", "sourceX", "sourceY", "dx", "dy", "touchAngle", "atan2", "PI", "getPointerType", "undefined", "getEventTargets", "composedPath", "domUtils", "currentTarget", "BaseEvent", "_classCallCheck", "immediatePropagationStopped", "propagationStopped", "_interaction", "_createClass", "key", "_proxy", "merge", "item", "from", "findIndex", "i", "find", "DropEvent", "_BaseEvent", "_inherits", "_super", "_createSuper", "dropState", "dragEvent", "_this", "call", "dropzone", "relatedTarget", "prev", "_this2", "rejected", "events", "enter", "stopImmediatePropagation", "activeDrops", "index", "arr", "deactivateEvent", "fire", "fireActivationEvents", "_i6", "_activeDrops$slice2", "slice", "_activeDrops$slice2$_", "getActiveDrops", "dragElement", "draggableElement", "drops", "_interactables$list2", "interactables", "list", "drop", "accept", "_i4", "_dropzone$getAllEleme2", "getAllElements", "dropzoneElement", "_i8", "activeDrop", "getDrop", "pointerEvent", "validDrops", "_i10", "_dropState$activeDrop2", "_dropState$activeDrop3", "isValid", "dropCheck", "dropIndex", "elements", "deepestNodeIndex", "higherNode", "lowerNode", "deepestNodeParents", "currentNode", "deepestNode", "currentNodeParent", "deepestNodeParent", "ancestryStart", "ownerSVGElement", "currentNodeParents", "commonIndex", "lastChild", "previousSibling", "higherIndex", "parseInt", "getComputedStyle", "zIndex", "getDropEvents", "_pointerEvent", "dropEvents", "leave", "activate", "deactivate", "dragLeave", "prevDropzone", "dragEnter", "fireDropEvents", "onEventCreated", "_ref3", "dynamicDrop", "dropResult", "interact", "interactStatic", "usePlugin", "normalized", "normalizeListeners", "corrected", "keys", "reduce", "acc", "prevListeners", "off", "on", "ondrop", "ondropactivate", "ondropdeactivate", "ondragenter", "ondragleave", "ondropmove", "overlap", "checker", "dropElement", "dropped", "dropOverlap", "pointerUtils", "horizontal", "vertical", "dragRect", "cx", "cy", "newValue", "phaselessTypes", "dragenter", "dragleave", "dropactivate", "dropdeactivate", "dropmove", "_ref4", "_ref5", "_ref6", "_ref7", "drop$1", "updateGestureProps", "phase", "starting", "ending", "distance", "box", "scale", "ds", "angle", "da", "gesture", "startDistance", "startAngle", "prevEvent", "Infinity", "isNaN", "before", "gesturable", "gestureOptions", "gesture$1", "checkResizeEdge", "interactableElement", "margin", "abs", "edge", "updateEventAxes", "resizeAxes", "resizeEvent", "resize", "square", "axes", "request", "cursors", "topleft", "bottomright", "topright", "bottomleft", "defaultMargin", "resizable", "preserveAspectRatio", "_rects", "previous", "deltaRect", "invert", "invertible", "current", "_interaction$_rects", "startRect", "swap", "resizeOptions", "resizeEdges", "_latestPointer", "eventTarget", "NaN", "cursorKey", "_ref8", "resize$1", "lastTime", "raf", "callback", "token", "global", "requestAnimationFrame", "cancelAnimationFrame", "vendors", "vendor", "bind", "currTime", "Date", "now", "timeToCall", "setTimeout", "clearTimeout", "autoScroll", "container", "speed", "isScrolling", "prevTime", "stop", "getContainer", "dt", "s", "scrollBy", "prevScroll", "getScroll", "curScroll", "check", "_options$actionName$a", "onInteractionMove", "interacting", "simulation", "innerWidth", "innerHeight", "body", "autoScrollPlugin", "autoscroll", "perAction", "autoScroll$1", "warnOnce", "method", "message", "warned", "console", "warn", "copyAction", "styleCursor", "actionChecker", "InteractableMethods", "getAction", "button", "ignoreFrom", "_backCompatOption", "allowFrom", "validateAction", "testIgnoreAllow", "withinInteractionLimit", "validateMatches", "matches", "matchElements", "len", "match", "matchElement", "matchAction", "getActionInfo", "pushMatches", "forEachMatch", "actionInfo", "manualStart", "prepare", "setInteractionCursor", "maxActions", "maxPerElement", "autoStartMax", "autoStart", "maxInteractions", "activeInteractions", "interactableCount", "elementCount", "_scope$interactions$l2", "interactions", "otherAction", "setCursor", "cursor", "prevCursorElement", "cursorElement", "style", "cursorChecker", "_interacting", "base", "pointerWasMoved", "autoStart$2", "dragAxis", "absX", "absY", "targetOptions", "currentAxis", "getDraggable", "downPointer", "downEvent", "thisAxis", "getHoldDuration", "hold", "delay", "basePlugin", "autoStartHoldTimer", "duplicate", "hold$1", "preventDefault", "onInteractionEvent", "checkAndPreventDefault", "interactablePreventDefault", "setting", "supportsPassive", "doc", "docOptions", "getDocOptions", "passive", "docEvents", "listener", "eventType", "isNonNativeEvent", "substr", "phases", "clone", "Modification", "states", "startOffset", "startDelta", "endResult", "startEdges", "createResult", "pageCoords", "modifierList", "actionModifiers", "modifiers", "methods", "_methods", "m", "prepareStates", "fillArg", "preEnd", "startAll", "setAll", "_this$states2", "state", "skipModifiers", "unmodifiedRect", "unmodifiedEdges", "newResult", "_state$methods", "lastModifierCoords", "shouldDo", "rectUtils", "eventProps", "rectDelta", "prevCoords", "prevRect", "rectChanged", "changed", "curCoords", "startCoords", "curDelta", "_ref3$_i", "coordsSet", "modifiedCoords", "adjustment", "applyToInteraction", "doPreend", "endPosition", "beforeEnd", "modifierArg", "_this$states4", "_modifierList$index", "_ref4$interaction", "modification", "_modification$result", "_i12", "_ref6$_i", "requireEndOnly", "endOnly", "setStart", "other", "makeModifier", "module", "modifier", "_options", "enable", "disable", "_defaults", "addEventModifiers", "modifiersBase", "ret", "setAndApply", "restoreInteractionCoords", "InteractEvent", "ctrlKey", "shiftKey", "altKey", "metaKey", "x0", "y0", "t0", "duration", "clientX0", "clientY0", "swipe", "_assertThisInitialized", "downTime", "getSwipe", "velocityY", "velocityX", "defineProperties", "PointerInfo", "downTarget", "_ProxyValues", "_ProxyMethods", "idCounter", "Interaction", "scopeFire", "_scopeFire", "_ending", "_stopped", "doMove", "signalArg", "_id", "that", "_loop2", "_key", "pointerIndex", "updatePointer", "pointerInfo", "_doPhase", "duplicateMove", "pointerMoveTolerance", "getPointerIndex", "curEventTarget", "end", "removePointer", "endPhaseResult", "curPointer", "_now", "_updateLatestPointer", "_this$interactable", "_createPreparedEvent", "_fireEvent", "beforeAction", "applyPending", "offset", "pending", "addToCoords", "offsetBy", "total", "offset$1", "InertiaState", "active", "isModified", "smoothEnd", "allowResume", "modifierCount", "v0", "te", "targetOffset", "modifiedOffset", "currentOffset", "lambda_v0", "one_ve_v0", "timeout", "getOptions", "velocityClient", "pointerSpeed", "copyFrom", "minSpeed", "endSpeed", "startInertia", "startSmoothEnd", "startVelocity", "lambda", "resistance", "inertiaDur", "log", "onNextFrame", "inertiaTick", "smoothEndTick", "tickFn", "_this3", "startX", "startY", "cpX", "cpY", "endX", "endY", "position", "_this4", "newOffset", "progress", "exp", "_getQBezierValue", "_this5", "smoothEndDuration", "easeOutQuad", "inertia", "inertiastart", "resume", "p1", "p2", "p3", "iT", "b", "c", "d", "inertia$1", "fireUntilImmediateStopped", "Eventable", "types", "eventList", "_listeners$type2", "subListener", "_element", "FakeEvent", "originalEvent", "pExtend", "stopPropagation", "param", "capture", "optionsMatch", "a", "_scope$document", "targets", "delegatedEvents", "documents", "eventsMethods", "add", "remove", "addDelegate", "context", "optionalArg", "_i3", "delegateListener", "delegateUseCapture", "delegates", "delegate", "removeDelegate", "matchFound", "entry", "supportsOptions", "addEventListener", "removeEventListener", "targetIndex", "typeIsEmpty", "typeListeners", "hasOwnProperty", "fakeEvent", "_i5", "createElement", "finder", "methodOrder", "details", "_finder$methodOrder2", "simulationResume", "mouseOrPen", "firstNonActive", "_scope$interactions$l4", "hasPointerId", "_scope$interactions$l6", "hasPointer", "_scope$interactions$l8", "idle", "_scope$interactions$l10", "finder$1", "methodNames", "doOnInteractions", "_pointerUtils$getEven", "prevTouchTime", "_event$changedTouches2", "changedTouch", "searchDetails", "getInteraction", "invalidPointer", "_matches$_i", "new", "onDocSignal", "eventMethodName", "eventMethod", "eventOptions", "_i14", "_docEvents$_i", "releasePointersOnRemovedEls", "_interaction$pointers2", "pointerDown", "pointerMove", "pointerUp", "documentBlur", "_InteractionBase", "_class", "InteractionBase", "destroy", "interactions$1", "OnOffMethod", "defaultContext", "scopeEvents", "_actions", "_context", "_win", "_doc", "_scopeEvents", "onstart", "onmove", "onend", "oninertiastart", "_this$_actions$map$ac", "actionFilter", "_onOff", "Off", "On", "optionName_", "optionName", "optionValue", "updatePerActionListeners", "Array", "querySelectorAll", "targetNode", "testIgnore", "testAllow", "typeArg", "listenerArg", "_listeners$_type2", "actionName_", "methodName", "rectChecker", "delegated", "_delegated$i", "InteractableSet", "selectorMap", "addListeners", "interactablesOnTarget", "addDocument", "isSelector", "inContext", "_this$list2", "Scope", "floor", "random", "isInitialized", "listenerMaps", "getExisting", "globalEvents", "getPointerAverage", "getTouchBBox", "getTouchDistance", "getTouchAngle", "version", "process", "use", "plugin", "isSet", "_type2", "debug", "_this$scope$interacti2", "removeDocument", "_plugins", "onWindowUnload", "_InteractableBase", "_class2", "_get", "_getPrototypeOf", "InteractableBase", "_this$listenerMaps2", "pluginIsInstalled", "pluginIdRoot", "otherId", "getDocIndex", "docIndex", "interact$1", "_global", "globalThis", "grid", "coordFields", "xField", "yField", "gridFunc", "range", "_grid$limits", "limits", "_grid$offset", "_coordFields$_i", "gridx", "round", "gridy", "snappersPlugin", "snappers", "allSnappers", "createSnapGrid", "aspectRatio", "_state$options", "ratio", "_state$options2", "equalDelta", "linkedEdges", "xIsPrimaryAxis", "sign", "edgeSign", "subModification", "_objectSpread", "initialCoords", "aspectMethod", "setEqualDelta", "setRatio", "correctedRect", "newHeight", "newWidth", "aspectRatio$1", "noop", "rubberband", "getRestrictionRect", "restrict", "elementRect", "restriction", "widthDiff", "heightDiff", "restrict$1", "noInner", "noOuter", "fixRect", "restrictEdges", "inner", "outer", "restrictEdges$1", "_", "restrictRect$1", "noMin", "noMax", "restrictSize$1", "minSize", "maxSize", "snap", "snapOffset", "offsetWithOrigin", "optionsOrigin", "offsetRect", "relativePoints", "offsets", "relativePoint", "relativeX", "relativeY", "snapTarget", "inRange", "snap$1", "snapSize", "targetFields", "relative", "_state$targetFields2", "_state$targetFields2$", "snapSize$1", "all", "restrictRect", "restrictSize", "snapEdges", "spring", "avoid", "transform", "_all", "modifiers$1", "interval", "tapTime", "double", "prevTap", "originX", "originY", "pointerEvents", "clearHold", "timer", "minDuration", "_signalArg$targets2", "holdDuration", "eventable", "collectEventTargets", "tap", "doubletap", "_arg$targets", "props", "_subtractOrigin", "_addOrigin", "_interaction$pointers", "endHoldRepeat", "holdIntervalHandle", "clearInterval", "holdRepeat", "holdRepeatInterval", "holdrepeat", "enderTypes", "count", "holdRepeat$1", "__backCompatOption", "interactableTargets", "reflow", "Promise", "promises", "reflowPromise", "runningInteraction", "_reflowPromise", "resolve", "_reflowResolve", "xywh", "then", "reflow$1", "default", "exports", "_unused"]
}
